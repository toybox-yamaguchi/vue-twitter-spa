{"version":3,"sources":["webpack:///app.67f29fe56e150b71cf96.js","webpack:///webpack/bootstrap d7b9eb9a0f1489c541a1","webpack:///./src/main.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.wks.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.js","webpack:///./src/vuex/mutation-types.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.core.js","webpack:///./~/babel-runtime/helpers/defineProperty.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.export.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.global.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.hide.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.iterators.js","webpack:///./~/vue/dist/vue.common.js","webpack:///./src/vuex/cart/getters.js","webpack:///./src/vuex/store.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.cof.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.ctx.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.defined.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.fails.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.has.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.property-desc.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.set-to-string-tag.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.to-integer.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.to-object.js","webpack:///./~/linq/linq.js","webpack:///./~/store/store.js","webpack:///./src/modules/api/shop.js","webpack:///./src/modules/api/twitter.js","webpack:///./src/router.js","webpack:///./src/vuex/cart/actions.js","webpack:///./src/vuex/cart/store.js","webpack:///./src/vuex/localstorage/store.js","webpack:///./src/vuex/timeline/actions.js","webpack:///./src/vuex/timeline/store.js","webpack:///HeaderBar.vue","webpack:///PostMessageComponent.vue","webpack:///TweetComponent.vue","webpack:///App.vue","webpack:///CartPage.vue","webpack:///TimelinePage.vue","webpack:///./~/babel-runtime/core-js/array/from.js","webpack:///./~/babel-runtime/core-js/object/assign.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/babel-runtime/helpers/toConsumableArray.js","webpack:///./~/babel-runtime/~/core-js/library/fn/array/from.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/assign.js","webpack:///./~/babel-runtime/~/core-js/library/fn/object/define-property.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.a-function.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.an-object.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.classof.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.descriptors.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.iobject.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.is-array-iter.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.is-object.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.iter-call.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.iter-create.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.iter-define.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.iter-detect.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.library.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.object-assign.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.redefine.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.shared.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.string-at.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.to-length.js","webpack:///./~/babel-runtime/~/core-js/library/modules/$.uid.js","webpack:///./~/babel-runtime/~/core-js/library/modules/core.get-iterator-method.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.array.from.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.object.assign.js","webpack:///./~/babel-runtime/~/core-js/library/modules/es6.string.iterator.js","webpack:///./~/dateformat/lib/dateformat.js","webpack:///./~/hammerjs/hammer.js","webpack:///./~/vue-animated-list/vue-animated-list.js","webpack:///./src/components/HeaderBar.vue?d3ba","webpack:///./src/components/PostMessageComponent.vue?51ad","webpack:///./src/components/TweetComponent.vue?0329","webpack:///./src/pages/App.vue?e16d","webpack:///./src/pages/CartPage.vue?3143","webpack:///./src/pages/TimelinePage.vue?cf4d","webpack:///./src/components/HeaderBar.vue","webpack:///./src/components/PostMessageComponent.vue","webpack:///./src/components/TweetComponent.vue","webpack:///./src/pages/App.vue","webpack:///./src/pages/CartPage.vue","webpack:///./src/pages/TimelinePage.vue","webpack:///./~/vue-router/dist/vue-router.js","webpack:///./~/vue-touch/vue-touch.js","webpack:///./~/vuex-router-sync/index.js","webpack:///./~/vuex/dist/vuex.js","webpack:///./~/vuex/logger.js","webpack:///(webpack)/buildin/amd-options.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_App","_App2","_router","_router2","_store","_store2","_vue","_vue2","_vueAnimatedList","_vueAnimatedList2","_vueTouch","_vueTouch2","_vuexRouterSync","use","config","swipe","threshold","sync","start","store","uid","Symbol","name","$Object","Object","create","getProto","getPrototypeOf","isEnum","propertyIsEnumerable","getDesc","getOwnPropertyDescriptor","setDesc","defineProperty","setDescs","defineProperties","getKeys","keys","getNames","getOwnPropertyNames","getSymbols","getOwnPropertySymbols","each","forEach","value","ADD_TO_CART","CHECKOUT_REQUEST","CHECKOUT_SUCCESS","CHECKOUT_FAILURE","RECEIVE_TIMELINE","ADD_TWEET","REMOVE_TWEET","SAVE_LOCALSTORAGE","core","version","__e","_defineProperty","_defineProperty2","key","enumerable","configurable","writable","global","ctx","PROTOTYPE","$export","type","source","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","S","IS_PROTO","P","IS_BIND","B","IS_WRAP","W","target","C","param","this","Function","window","Math","self","__g","$","createDesc","object","set","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","i","length","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","l","arguments","apply","toArray","list","ret","Array","extend","to","from","isObject","isPlainObject","OBJECT_STRING","def","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","arr","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","map","processFilterArg","dir","filters","push","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","index","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","el","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","ownerDocument","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","data","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","options","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","components","ids","Vue","guardProps","props","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","mixin","mixinOptions","prototype","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getter","setter","childOb","depend","e","newVal","initMixin","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","noop","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","queue","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","emit","watcher","run","pushWatcher","q","user","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","template","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","inlineProps","propsData","initProp","$get","_bindDir","propDef","Boolean","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","required","valid","expectedTypes","assertedType","assertType","expectedType","validator","coerce","String","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","j","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","update","computed","userDef","methods","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","watch","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","some","$broadcast","$dispatch","lifecycleAPI","ready","$compile","limitBy","filterBy","search","delimiter","convertArray","item","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","plugin","installed","unshift","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","shift","newer","older","returnEntry","freeze","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","_this","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","cartProducts","state","cart","added","quantity","product","products","all","find","title","price","cartCount","totalCount","_ref2","_vuex","_vuex2","_store3","_store4","_store5","_store6","_logger","_logger2","Store","timeline","localStorage","strict","middlewares","it","aFunction","that","TypeError","bitmap","TAG","stat","ceil","defined","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","Functions","Identity","x","True","Blank","Types","Undefined","funcCache","","Utils","createLambda","regexp","maxLength","paramNumber","argArray","dollar","expr","isIEnumerable","Enumerator","methodName","compare","dispose","State","Before","Running","After","IEnumerator","initialize","tryGetNext","yielder","Yielder","moveNext","yieldReturn","yieldBreak","Enumerable","getEnumerator","createEnumerable","createEnumerator","extendTo","enumerableProto","typeProto","ArrayEnumerable","choice","random","cycle","repeat","enumerator","isFirst","atEnd","Windows","array","make","element","matches","input","pattern","flags","regex","step","rangeDown","rangeTo","take","repeatWithFinalize","initializer","finalizer","generate","toInfinity","toNegativeInfinity","unfold","seed","enumerableFactory","traverseBreadthFirst","resultSelector","nestLevel","buffer","selectMany","any","traverseDepthFirst","enumeratorStack","pop","flatten","middleEnumerator","pairwise","selector","scan","isUseSeed","WhereSelectEnumerable","collectionSelector","middleSeq","where","predicate","WhereEnumerable","choose","ofType","typeName","zip","second","firstEnumerator","secondEnumerator","enumerators","takeExceptLast","merge","inner","outerKeySelector","innerKeySelector","compareSelector","outerEnumerator","lookup","innerElements","innerCount","toLookup","innerElement","groupJoin","isEmpty","isEnumerated","alternate","alternateValueOrSequence","alternateSequence","alternateEnumerator","retVal","defaultIfEmpty","defaultValue","distinct","except","distinctUntilChanged","compareKey","initial","Dictionary","intersect","outs","sequenceEqual","union","keySelector","OrderedEnumerable","orderByDescending","reverse","shuffle","weightedSample","weightSelector","sortedByBound","totalWeight","weight","bound","draw","lower","groupBy","elementSelector","toEnumerable","partitionBy","hasResultSelector","group","Grouping","hasNext","aggregate","average","sum","max","min","maxBy","minBy","elementAt","found","Error","elementAtOrDefault","firstOrDefault","lastOrDefault","singleOrDefault","skipWhile","isSkipEnd","takeWhile","takeFromLast","sourceEnumerator","lastIndexOf","cast","asEnumerable","dict","Lookup","toObject","toDictionary","toJSONString","toJoinedString","separator","doAction","writeLine","writeln","force","letBind","share","sharedEnumerator","disposed","DisposableEnumerable","memoize","catchError","finallyAction","trace","message","descending","createOrderedEnumerable","thenBy","thenByDescending","indexes","sortContext","SortContext","GenerateKeys","orderedEnumerable","currentContext","len","index1","index2","comparison","getSource","prevSource","prevPredicate","composedPredicate","prevSelector","composedSelector","callHasOwnProperty","computeHashCode","HashEntry","EntryList","addLast","newEntry","countField","entryList","buckets","currentEntry","dictionary","kvp","groupKey","elements","__WEBPACK_AMD_DEFINE_FACTORY__","isLocalStorageNameSupported","localStorageName","win","err","storage","scriptTag","disabled","defaultVal","transact","transactionFn","getAll","serialize","deserialize","setItem","getItem","removeItem","callback","addBehavior","storageOwner","storageContainer","ActiveXObject","frames","withIEStorage","storeFunction","load","forbiddenCharsRegex","ieKeyFix","XMLDocument","testKey","enabled","_products","inventory","getProducts","buyProducts","errorCb","_assign","_assign2","_linq","_linq2","_tweets","date","stub","getTimeline","isAsync","newStub","getNewTweet","newTweet","_CartPage","_CartPage2","_TimelinePage","_TimelinePage2","_vueRouter","_vueRouter2","router","history","/","/cart","/timeline","/timeline/:id","_interopRequireWildcard","newObj","checkout","_toConsumableArray2","_toConsumableArray3","_shop","_shop2","_mutationTypes","types","dispatch","savedCartItems","_mutations","_defineProperty3","lastCheckout","mutations","productId","record","newState","removeTweet","addTweet","_twitter","_twitter2","tweets","tweet","_ref3","targetTweet","round","_getters","vuex","getters","isShow","postMessage","saveStubMessage","_dateformat","_dateformat2","dateText","onSwipeRight","_HeaderBar","_HeaderBar2","HeaderBar","_actions","checkoutStatus","_TweetComponent","_TweetComponent2","_PostMessageComponent","_PostMessageComponent2","TweetComponent","PostMessageComponent","route","_from","_from2","arr2","assign","desc","cof","ARG","O","T","callee","Iterators","ITERATOR","ArrayProto","anObject","entries","setToStringTag","IteratorPrototype","Constructor","NAME","LIBRARY","redefine","hide","$iterCreate","BUGGY","FF_ITERATOR","KEYS","VALUES","returnThis","Base","DEFAULT","IS_SET","FORCED","getMethod","kind","proto","DEF_VALUES","VALUES_BUG","$native","$default","values","SAFE_CLOSING","riter","skipClosing","safe","iter","IObject","A","K","$$","$$len","SHARED","toInteger","TO_STRING","pos","px","classof","getIteratorMethod","isArrayIter","toLength","getIterFn","arrayLike","mapfn","mapping","iterFn","$at","iterated","_t","_i","point","pad","getWeek","targetThursday","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","getTimezoneOffset","setHours","getHours","weekDiff","getDayOfWeek","dow","kindOf","dateFormat","timezone","timezoneClip","mask","utc","gmt","masks","maskSlice","d","D","y","H","M","L","o","N","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","tt","TT","Z","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","exportName","setTimeoutContext","bindFn","invokeArrayArg","deprecate","deprecationMessage","stack","inherit","base","properties","childP","baseP","_super","boolOrFn","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","splitStr","removeEventListeners","hasParent","inStr","inArray","findByKey","uniqueArray","results","camelProp","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","defaultView","parentWindow","Input","manager","inputTarget","domHandler","ev","enable","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","pointersLen","pointers","changedPointersLen","changedPointers","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","deltaTime","angle","getAngle","distance","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","scale","getScale","rotation","getRotation","maxPointers","computeIntervalInputData","srcEvent","offsetDelta","prevDelta","velocity","velocityX","velocityY","lastInterval","COMPUTE_INTERVAL","v","clientX","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","touches","changed","changedTouches","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","dx","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","getTouchActionProps","NATIVE_TOUCH_ACTION","touchMap","cssSupports","CSS","supports","Recognizer","defaults","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","recognizers","preset","Manager","oldCssProps","touchAction","toggleCssProps","recognizeWith","requireFailure","cssProps","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","output","nextKey","dest","MOBILE_REGEX","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","TOUCH_ACTION_MAP","compute","getTouchAction","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","process","attrTest","optionPointers","isRecognized","isValid","directionTest","hasMoved","inOut","time","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stopped","curRecognizer","existing","Tap","Pan","Swipe","Pinch","Rotate","Press","freeGlobal","prepareMoveTransition","moveClass","moving","_pendingMoveCb","hasTransition","transitionedProps","_oldPos","applyMoveTransition","oldPos","moved","newPos","top","transform","WebkitTransform","transitionDuration","needMoveTransition","__vue_script__","__vue_template__","Target","matcher","delegate","Matcher","routes","generateMatch","startingPath","nestedCallback","fullPath","addRoute","routeArray","substr","eachRoute","baseRoute","binding","addRouteCallback","msg","noWarning","error","tryDecode","uri","asComponent","decodeURIComponent","decodeURI","StaticSegment","string","DynamicSegment","StarSegment","EpsilonSegment","specificity","segments","segment","charSpec","nextStates","sortSolutions","states","recognizeChar","RecognizeResults","queryParams","findHandler","captures","currentCapture","isDynamic","addSegment","currentState","eachChar","decodeQueryParamPart","part","warn$1","resolvePath","relative","isPromise","then","getRouteConfig","resolveAsyncComponent","resolver","resolve","exports$1","mapParams","genQuery","canReuse","view","canReuseFn","canDeactivate","fromComponent","expectBoolean","canActivate","aborted","deactivate","callHooks","reuse","activateQueue","saveChildView","activateHook","dataHook","waitForData","activated","loading","$loadingRouteData","_routerView","cachedChildView","_keepAliveRouterView","childView","_rendered","_transitionOnLoad","setCurrent","afterData","afterActivate","loadData","postActivate","processData","promises","resolvedVal","isPlainOjbect","applyOverride","_Vue$util","_parent","$router","$route","_children","_defineMeta","hooksToMergeRE","View","componentDef","viewDef","_isDynamicLiteral","parentView","_rootView","_currentTransition","elementDirective","Link","sameOrigin","link","protocol","location","hostname","port","toggleClasses","onPriority","LINK_UPDATE","activeId","childLinks","existingId","activeIds","updateClasses","onRouteUpdate","onClick","exact","prevActiveClass","activeClass","metaKey","ctrlKey","shiftKey","defaultPrevented","go","pathname","rootRE","newPath","stringifyPath","updateActiveMatch","updateHref","activeRE","queryStringRE","isAbsolute","href","formatPath","_linkActiveClass","trailingSlashRE","guardComponent","comp","babelHelpers","classCallCheck","instance","willAddRoute","addChild","contextEntered","specials","validChars","invalidChars","isEqual","chars","returned","oCreate","RouteRecognizer","rootState","allSegments","as","handlersFor","hasRoute","generateQueryString","pairs","pair","encodeURIComponent","arrayPair","parseQueryString","queryString","keyLength","pathLen","queryStart","isSlashDropped","solutions","hashRE","HTML5History","onChange","baseEl","url","replaceState","pageXOffset","pageYOffset","pushState","hashMatch","HashHistory","hashbang","formattedPath","isAbsoloute","AbstractHistory","currentPath","RouteTransition","abort","abortingOnLoad","redirect","deactivateQueue","reverseDeactivateQueue","reuseQueue","runQueue","_onTransitionValidated","_view","_ref$expectBoolean","_ref$postActivate","nextCalled","onError","_suppress","onPromiseError","nextWithBoolean","ok","nextWithData","exposed","internalKeysRE","Route","_recognizer","_notFoundHandler","historyBackends","abstract","html5","Router","_ref$hashbang","_ref$abstract","_ref$history","_ref$saveScrollPosition","saveScrollPosition","_ref$transitionOnLoad","transitionOnLoad","_ref$suppressTransitionError","suppressTransitionError","_ref$root","_ref$linkActiveClass","linkActiveClass","app","_guardRecognizer","_started","_startCb","_currentRoute","_previousTransition","_notFoundRedirect","_beforeEachHooks","_afterEachHooks","_root","_abstract","_hashbang","hasPushState","_history","_historyFallback","History","_match","_saveScrollPosition","_map","rootPath","_notFound","_addRoute","_addRedirect","_addAlias","beforeEach","afterEach","App","_appContainer","Ctor","_appConstructor","_location","generatedPath","currentParams","targetParams","encodeURI","subRoutes","subPath","redirectPath","_addGuard","aliasPath","mappedPath","_handler","_this2","realPath","_checkGuard","_this3","currentRoute","currentTransition","_prevTransition","beforeHooks","startTransition","_postTransition","scrollTo","scrollX","offsetTop","externalVue","guardDirections","hammerDirection","directions","vueTouch","gestures","customEvents","hammer","mc","recognizerType","custom","globalOptions","localOptions","hammerOptions","opts","registerCustomEvent","patchStore","_vm","_dispatching","hotUpdate","router/ROUTE_CHANGED","isTimeTraveling","mergeObjects","deepClone","getWatcher","getDep","override","vuexInit","$store","defineVuexGetter","makeBoundAction","_getterCacheId","computedGetter","_len","_key2","_Vue","createLogger","protoProps","staticProps","toConsumableArray","devtoolMiddleware","onInit","targetState","onMutation","mutation","_ref$state","_ref$mutations","_ref$modules","_ref$middlewares","_ref$strict","_rootMutations","_modules","_setupModuleState","_setupModuleMutations","_setupMiddlewares","_setupMutationCheck","_len2","payload","_applyMiddlewares","updatedModules","allMutations","_len3","_key3","_this4","_middlewares","_needSnapshots","snapshot","initialSnapshot","_prevSnapshot","_this5","prevSnapshot","clonedPayload","_ref$collapsed","collapsed","_ref$mutationTransfor","transformer","mutationTransformer","mut","nextState","prevState","formattedTime","getMinutes","getSeconds","getMilliseconds","formattedMutation","startMessage","groupCollapsed","groupEnd","times","num","__webpack_amd_options__"],"mappings":"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","file":"app.67f29fe56e150b71cf96.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _App = __webpack_require__(85);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _router = __webpack_require__(26);\n\t\n\tvar _router2 = _interopRequireDefault(_router);\n\t\n\tvar _store = __webpack_require__(12);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _vue = __webpack_require__(10);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueAnimatedList = __webpack_require__(75);\n\t\n\tvar _vueAnimatedList2 = _interopRequireDefault(_vueAnimatedList);\n\t\n\tvar _vueTouch = __webpack_require__(89);\n\t\n\tvar _vueTouch2 = _interopRequireDefault(_vueTouch);\n\t\n\tvar _vuexRouterSync = __webpack_require__(90);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueAnimatedList2.default);\n\t\n\t_vue2.default.use(_vueTouch2.default);\n\t_vueTouch2.default.config.swipe = {\n\t  threshold: 10\n\t};\n\t\n\t(0, _vuexRouterSync.sync)(_store2.default, _router2.default);\n\t_router2.default.start(_App2.default, '#app');\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar store  = __webpack_require__(59)('wks')\n\t  , uid    = __webpack_require__(62)\n\t  , Symbol = __webpack_require__(7).Symbol;\n\tmodule.exports = function(name){\n\t  return store[name] || (store[name] =\n\t    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar $Object = Object;\n\tmodule.exports = {\n\t  create:     $Object.create,\n\t  getProto:   $Object.getPrototypeOf,\n\t  isEnum:     {}.propertyIsEnumerable,\n\t  getDesc:    $Object.getOwnPropertyDescriptor,\n\t  setDesc:    $Object.defineProperty,\n\t  setDescs:   $Object.defineProperties,\n\t  getKeys:    $Object.keys,\n\t  getNames:   $Object.getOwnPropertyNames,\n\t  getSymbols: $Object.getOwnPropertySymbols,\n\t  each:       [].forEach\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar ADD_TO_CART = exports.ADD_TO_CART = 'ADD_TO_CART';\n\tvar CHECKOUT_REQUEST = exports.CHECKOUT_REQUEST = 'CHECKOUT_REQUEST';\n\tvar CHECKOUT_SUCCESS = exports.CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS';\n\tvar CHECKOUT_FAILURE = exports.CHECKOUT_FAILURE = 'CHECKOUT_FAILURE';\n\t\n\tvar RECEIVE_TIMELINE = exports.RECEIVE_TIMELINE = 'RECEIVE_TIMELINE';\n\tvar ADD_TWEET = exports.ADD_TWEET = 'ADD_TWEET';\n\tvar REMOVE_TWEET = exports.REMOVE_TWEET = 'REMOVE_TWEET';\n\t\n\tvar SAVE_LOCALSTORAGE = exports.SAVE_LOCALSTORAGE = 'SAVE_LOCALSTORAGE';\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tvar core = module.exports = {version: '1.2.6'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _defineProperty = __webpack_require__(40);\n\t\n\tvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (obj, key, value) {\n\t  if (key in obj) {\n\t    (0, _defineProperty2.default)(obj, key, {\n\t      value: value,\n\t      enumerable: true,\n\t      configurable: true,\n\t      writable: true\n\t    });\n\t  } else {\n\t    obj[key] = value;\n\t  }\n\t\n\t  return obj;\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global    = __webpack_require__(7)\n\t  , core      = __webpack_require__(4)\n\t  , ctx       = __webpack_require__(14)\n\t  , PROTOTYPE = 'prototype';\n\t\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && key in target;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(param){\n\t        return this instanceof C ? new C(param) : C(param);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;  // forced\n\t$export.G = 2;  // global\n\t$export.S = 4;  // static\n\t$export.P = 8;  // proto\n\t$export.B = 16; // bind\n\t$export.W = 32; // wrap\n\tmodule.exports = $export;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $          = __webpack_require__(2)\n\t  , createDesc = __webpack_require__(18);\n\tmodule.exports = __webpack_require__(48) ? function(object, key, value){\n\t  return $.setDesc(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (false) {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (false) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (false) {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (false) {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (false) {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (false) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar cartProducts = exports.cartProducts = function cartProducts(state) {\n\t  return state.cart.added.map(function (_ref) {\n\t    var id = _ref.id;\n\t    var quantity = _ref.quantity;\n\t\n\t    var product = state.products.all.find(function (p) {\n\t      return p.id === id;\n\t    });\n\t    return {\n\t      title: product.title,\n\t      price: product.price,\n\t      quantity: quantity\n\t    };\n\t  });\n\t};\n\t\n\tvar cartCount = exports.cartCount = function cartCount(state) {\n\t  var totalCount = 0;\n\t  state.cart.added.forEach(function (_ref2) {\n\t    var quantity = _ref2.quantity;\n\t\n\t    totalCount += quantity;\n\t  });\n\t\n\t  return totalCount;\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vue = __webpack_require__(10);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vuex = __webpack_require__(91);\n\t\n\tvar _vuex2 = _interopRequireDefault(_vuex);\n\t\n\tvar _store = __webpack_require__(28);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _store3 = __webpack_require__(31);\n\t\n\tvar _store4 = _interopRequireDefault(_store3);\n\t\n\tvar _store5 = __webpack_require__(29);\n\t\n\tvar _store6 = _interopRequireDefault(_store5);\n\t\n\tvar _logger = __webpack_require__(92);\n\t\n\tvar _logger2 = _interopRequireDefault(_logger);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vuex2.default);\n\t_vue2.default.config.debug = true;\n\t\n\tvar debug = (\"production\") !== 'production';\n\t\n\texports.default = new _vuex2.default.Store({\n\t  modules: {\n\t    cart: _store2.default,\n\t    timeline: _store4.default,\n\t    localStorage: _store6.default\n\t  },\n\t  strict: debug,\n\t  middlewares: debug ? [(0, _logger2.default)()] : []\n\t});\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tvar toString = {}.toString;\n\t\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __webpack_require__(45);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar def = __webpack_require__(2).setDesc\n\t  , has = __webpack_require__(17)\n\t  , TAG = __webpack_require__(1)('toStringTag');\n\t\n\tmodule.exports = function(it, tag, stat){\n\t  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __webpack_require__(15);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*--------------------------------------------------------------------------\r\n\t * linq.js - LINQ for JavaScript\r\n\t * ver 3.0.4-Beta5 (Jun. 20th, 2013)\r\n\t *\r\n\t * created and maintained by neuecc <ils@neue.cc>\r\n\t * licensed under MIT License\r\n\t * http://linqjs.codeplex.com/\r\n\t *------------------------------------------------------------------------*/\r\n\t\r\n\t(function (root, undefined) {\r\n\t    // ReadOnly Function\r\n\t    var Functions = {\r\n\t        Identity: function (x) { return x; },\r\n\t        True: function () { return true; },\r\n\t        Blank: function () { }\r\n\t    };\r\n\t\r\n\t    // const Type\r\n\t    var Types = {\r\n\t        Boolean: typeof true,\r\n\t        Number: typeof 0,\r\n\t        String: typeof \"\",\r\n\t        Object: typeof {},\r\n\t        Undefined: typeof undefined,\r\n\t        Function: typeof function () { }\r\n\t    };\r\n\t\r\n\t    // createLambda cache\r\n\t    var funcCache = { \"\": Functions.Identity };\r\n\t\r\n\t    // private utility methods\r\n\t    var Utils = {\r\n\t        // Create anonymous function from lambda expression string\r\n\t        createLambda: function (expression) {\r\n\t            if (expression == null) return Functions.Identity;\r\n\t            if (typeof expression === Types.String) {\r\n\t                // get from cache\r\n\t                var f = funcCache[expression];\r\n\t                if (f != null) {\r\n\t                    return f;\r\n\t                }\r\n\t\r\n\t                if (expression.indexOf(\"=>\") === -1) {\r\n\t                    var regexp = new RegExp(\"[$]+\", \"g\");\r\n\t\r\n\t                    var maxLength = 0;\r\n\t                    var match;\r\n\t                    while ((match = regexp.exec(expression)) != null) {\r\n\t                        var paramNumber = match[0].length;\r\n\t                        if (paramNumber > maxLength) {\r\n\t                            maxLength = paramNumber;\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    var argArray = [];\r\n\t                    for (var i = 1; i <= maxLength; i++) {\r\n\t                        var dollar = \"\";\r\n\t                        for (var j = 0; j < i; j++) {\r\n\t                            dollar += \"$\";\r\n\t                        }\r\n\t                        argArray.push(dollar);\r\n\t                    }\r\n\t\r\n\t                    var args = Array.prototype.join.call(argArray, \",\");\r\n\t\r\n\t                    f = new Function(args, \"return \" + expression);\r\n\t                    funcCache[expression] = f;\r\n\t                    return f;\r\n\t                }\r\n\t                else {\r\n\t                    var expr = expression.match(/^[(\\s]*([^()]*?)[)\\s]*=>(.*)/);\r\n\t                    f = new Function(expr[1], \"return \" + expr[2]);\r\n\t                    funcCache[expression] = f;\r\n\t                    return f;\r\n\t                }\r\n\t            }\r\n\t            return expression;\r\n\t        },\r\n\t\r\n\t        isIEnumerable: function (obj) {\r\n\t            if (typeof Enumerator !== Types.Undefined) {\r\n\t                try {\r\n\t                    new Enumerator(obj); // check JScript(IE)'s Enumerator\r\n\t                    return true;\r\n\t                }\r\n\t                catch (e) { }\r\n\t            }\r\n\t\r\n\t            return false;\r\n\t        },\r\n\t\r\n\t        // IE8's defineProperty is defined but cannot use, therefore check defineProperties\r\n\t        defineProperty: (Object.defineProperties != null)\r\n\t            ? function (target, methodName, value) {\r\n\t                Object.defineProperty(target, methodName, {\r\n\t                    enumerable: false,\r\n\t                    configurable: true,\r\n\t                    writable: true,\r\n\t                    value: value\r\n\t                })\r\n\t            }\r\n\t            : function (target, methodName, value) {\r\n\t                target[methodName] = value;\r\n\t            },\r\n\t\r\n\t        compare: function (a, b) {\r\n\t            return (a === b) ? 0\r\n\t                 : (a > b) ? 1\r\n\t                 : -1;\r\n\t        },\r\n\t\r\n\t        dispose: function (obj) {\r\n\t            if (obj != null) obj.dispose();\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // IEnumerator State\r\n\t    var State = { Before: 0, Running: 1, After: 2 };\r\n\t\r\n\t    // \"Enumerator\" is conflict JScript's \"Enumerator\"\r\n\t    var IEnumerator = function (initialize, tryGetNext, dispose) {\r\n\t        var yielder = new Yielder();\r\n\t        var state = State.Before;\r\n\t\r\n\t        this.current = yielder.current;\r\n\t\r\n\t        this.moveNext = function () {\r\n\t            try {\r\n\t                switch (state) {\r\n\t                    case State.Before:\r\n\t                        state = State.Running;\r\n\t                        initialize();\r\n\t                        // fall through\r\n\t                    case State.Running:\r\n\t                        if (tryGetNext.apply(yielder)) {\r\n\t                            return true;\r\n\t                        }\r\n\t                        else {\r\n\t                            this.dispose();\r\n\t                            return false;\r\n\t                        }\r\n\t                    case State.After:\r\n\t                        return false;\r\n\t                }\r\n\t            }\r\n\t            catch (e) {\r\n\t                this.dispose();\r\n\t                throw e;\r\n\t            }\r\n\t        };\r\n\t\r\n\t        this.dispose = function () {\r\n\t            if (state != State.Running) return;\r\n\t\r\n\t            try {\r\n\t                dispose();\r\n\t            }\r\n\t            finally {\r\n\t                state = State.After;\r\n\t            }\r\n\t        };\r\n\t    };\r\n\t\r\n\t    // for tryGetNext\r\n\t    var Yielder = function () {\r\n\t        var current = null;\r\n\t        this.current = function () { return current; };\r\n\t        this.yieldReturn = function (value) {\r\n\t            current = value;\r\n\t            return true;\r\n\t        };\r\n\t        this.yieldBreak = function () {\r\n\t            return false;\r\n\t        };\r\n\t    };\r\n\t\r\n\t    // Enumerable constuctor\r\n\t    var Enumerable = function (getEnumerator) {\r\n\t        this.getEnumerator = getEnumerator;\r\n\t    };\r\n\t\r\n\t    // Utility\r\n\t\r\n\t    Enumerable.Utils = {}; // container\r\n\t\r\n\t    Enumerable.Utils.createLambda = function (expression) {\r\n\t        return Utils.createLambda(expression);\r\n\t    };\r\n\t\r\n\t    Enumerable.Utils.createEnumerable = function (getEnumerator) {\r\n\t        return new Enumerable(getEnumerator);\r\n\t    };\r\n\t\r\n\t    Enumerable.Utils.createEnumerator = function (initialize, tryGetNext, dispose) {\r\n\t        return new IEnumerator(initialize, tryGetNext, dispose);\r\n\t    };\r\n\t\r\n\t    Enumerable.Utils.extendTo = function (type) {\r\n\t        var typeProto = type.prototype;\r\n\t        var enumerableProto;\r\n\t\r\n\t        if (type === Array) {\r\n\t            enumerableProto = ArrayEnumerable.prototype;\r\n\t            Utils.defineProperty(typeProto, \"getSource\", function () {\r\n\t                return this;\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            enumerableProto = Enumerable.prototype;\r\n\t            Utils.defineProperty(typeProto, \"getEnumerator\", function () {\r\n\t                return Enumerable.from(this).getEnumerator();\r\n\t            });\r\n\t        }\r\n\t\r\n\t        for (var methodName in enumerableProto) {\r\n\t            var func = enumerableProto[methodName];\r\n\t\r\n\t            // already extended\r\n\t            if (typeProto[methodName] == func) continue;\r\n\t\r\n\t            // already defined(example Array#reverse/join/forEach...)\r\n\t            if (typeProto[methodName] != null) {\r\n\t                methodName = methodName + \"ByLinq\";\r\n\t                if (typeProto[methodName] == func) continue; // recheck\r\n\t            }\r\n\t\r\n\t            if (func instanceof Function) {\r\n\t                Utils.defineProperty(typeProto, methodName, func);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Generator\r\n\t\r\n\t    Enumerable.choice = function () // variable argument\r\n\t    {\r\n\t        var args = arguments;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    args = (args[0] instanceof Array) ? args[0]\r\n\t                        : (args[0].getEnumerator != null) ? args[0].toArray()\r\n\t                        : args;\r\n\t                },\r\n\t                function () {\r\n\t                    return this.yieldReturn(args[Math.floor(Math.random() * args.length)]);\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.cycle = function () // variable argument\r\n\t    {\r\n\t        var args = arguments;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var index = 0;\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    args = (args[0] instanceof Array) ? args[0]\r\n\t                        : (args[0].getEnumerator != null) ? args[0].toArray()\r\n\t                        : args;\r\n\t                },\r\n\t                function () {\r\n\t                    if (index >= args.length) index = 0;\r\n\t                    return this.yieldReturn(args[index++]);\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.empty = function () {\r\n\t        return new Enumerable(function () {\r\n\t            return new IEnumerator(\r\n\t                Functions.Blank,\r\n\t                function () { return false; },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.from = function (obj) {\r\n\t        if (obj == null) {\r\n\t            return Enumerable.empty();\r\n\t        }\r\n\t        if (obj instanceof Enumerable) {\r\n\t            return obj;\r\n\t        }\r\n\t        if (typeof obj == Types.Number || typeof obj == Types.Boolean) {\r\n\t            return Enumerable.repeat(obj, 1);\r\n\t        }\r\n\t        if (typeof obj == Types.String) {\r\n\t            return new Enumerable(function () {\r\n\t                var index = 0;\r\n\t                return new IEnumerator(\r\n\t                    Functions.Blank,\r\n\t                    function () {\r\n\t                        return (index < obj.length) ? this.yieldReturn(obj.charAt(index++)) : false;\r\n\t                    },\r\n\t                    Functions.Blank);\r\n\t            });\r\n\t        }\r\n\t        if (typeof obj != Types.Function) {\r\n\t            // array or array like object\r\n\t            if (typeof obj.length == Types.Number) {\r\n\t                return new ArrayEnumerable(obj);\r\n\t            }\r\n\t\r\n\t            // JScript's IEnumerable\r\n\t            if (!(obj instanceof Object) && Utils.isIEnumerable(obj)) {\r\n\t                return new Enumerable(function () {\r\n\t                    var isFirst = true;\r\n\t                    var enumerator;\r\n\t                    return new IEnumerator(\r\n\t                        function () { enumerator = new Enumerator(obj); },\r\n\t                        function () {\r\n\t                            if (isFirst) isFirst = false;\r\n\t                            else enumerator.moveNext();\r\n\t\r\n\t                            return (enumerator.atEnd()) ? false : this.yieldReturn(enumerator.item());\r\n\t                        },\r\n\t                        Functions.Blank);\r\n\t                });\r\n\t            }\r\n\t\r\n\t            // WinMD IIterable<T>\r\n\t            if (typeof Windows === Types.Object && typeof obj.first === Types.Function) {\r\n\t                return new Enumerable(function () {\r\n\t                    var isFirst = true;\r\n\t                    var enumerator;\r\n\t                    return new IEnumerator(\r\n\t                        function () { enumerator = obj.first(); },\r\n\t                        function () {\r\n\t                            if (isFirst) isFirst = false;\r\n\t                            else enumerator.moveNext();\r\n\t\r\n\t                            return (enumerator.hasCurrent) ? this.yieldReturn(enumerator.current) : this.yieldBreak();\r\n\t                        },\r\n\t                        Functions.Blank);\r\n\t                });\r\n\t            }\r\n\t        }\r\n\t\r\n\t        // case function/object : Create keyValuePair[]\r\n\t        return new Enumerable(function () {\r\n\t            var array = [];\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    for (var key in obj) {\r\n\t                        var value = obj[key];\r\n\t                        if (!(value instanceof Function) && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n\t                            array.push({ key: key, value: value });\r\n\t                        }\r\n\t                    }\r\n\t                },\r\n\t                function () {\r\n\t                    return (index < array.length)\r\n\t                        ? this.yieldReturn(array[index++])\r\n\t                        : false;\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    },\r\n\t\r\n\t    Enumerable.make = function (element) {\r\n\t        return Enumerable.repeat(element, 1);\r\n\t    };\r\n\t\r\n\t    // Overload:function(input, pattern)\r\n\t    // Overload:function(input, pattern, flags)\r\n\t    Enumerable.matches = function (input, pattern, flags) {\r\n\t        if (flags == null) flags = \"\";\r\n\t        if (pattern instanceof RegExp) {\r\n\t            flags += (pattern.ignoreCase) ? \"i\" : \"\";\r\n\t            flags += (pattern.multiline) ? \"m\" : \"\";\r\n\t            pattern = pattern.source;\r\n\t        }\r\n\t        if (flags.indexOf(\"g\") === -1) flags += \"g\";\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var regex;\r\n\t            return new IEnumerator(\r\n\t                function () { regex = new RegExp(pattern, flags); },\r\n\t                function () {\r\n\t                    var match = regex.exec(input);\r\n\t                    return (match) ? this.yieldReturn(match) : false;\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(start, count)\r\n\t    // Overload:function(start, count, step)\r\n\t    Enumerable.range = function (start, count, step) {\r\n\t        if (step == null) step = 1;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var value;\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { value = start - step; },\r\n\t                function () {\r\n\t                    return (index++ < count)\r\n\t                        ? this.yieldReturn(value += step)\r\n\t                        : this.yieldBreak();\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(start, count)\r\n\t    // Overload:function(start, count, step)\r\n\t    Enumerable.rangeDown = function (start, count, step) {\r\n\t        if (step == null) step = 1;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var value;\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { value = start + step; },\r\n\t                function () {\r\n\t                    return (index++ < count)\r\n\t                        ? this.yieldReturn(value -= step)\r\n\t                        : this.yieldBreak();\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(start, to)\r\n\t    // Overload:function(start, to, step)\r\n\t    Enumerable.rangeTo = function (start, to, step) {\r\n\t        if (step == null) step = 1;\r\n\t\r\n\t        if (start < to) {\r\n\t            return new Enumerable(function () {\r\n\t                var value;\r\n\t\r\n\t                return new IEnumerator(\r\n\t                function () { value = start - step; },\r\n\t                function () {\r\n\t                    var next = value += step;\r\n\t                    return (next <= to)\r\n\t                        ? this.yieldReturn(next)\r\n\t                        : this.yieldBreak();\r\n\t                },\r\n\t                Functions.Blank);\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            return new Enumerable(function () {\r\n\t                var value;\r\n\t\r\n\t                return new IEnumerator(\r\n\t                function () { value = start + step; },\r\n\t                function () {\r\n\t                    var next = value -= step;\r\n\t                    return (next >= to)\r\n\t                        ? this.yieldReturn(next)\r\n\t                        : this.yieldBreak();\r\n\t                },\r\n\t                Functions.Blank);\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Overload:function(element)\r\n\t    // Overload:function(element, count)\r\n\t    Enumerable.repeat = function (element, count) {\r\n\t        if (count != null) return Enumerable.repeat(element).take(count);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            return new IEnumerator(\r\n\t                Functions.Blank,\r\n\t                function () { return this.yieldReturn(element); },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.repeatWithFinalize = function (initializer, finalizer) {\r\n\t        initializer = Utils.createLambda(initializer);\r\n\t        finalizer = Utils.createLambda(finalizer);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var element;\r\n\t            return new IEnumerator(\r\n\t                function () { element = initializer(); },\r\n\t                function () { return this.yieldReturn(element); },\r\n\t                function () {\r\n\t                    if (element != null) {\r\n\t                        finalizer(element);\r\n\t                        element = null;\r\n\t                    }\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(func)\r\n\t    // Overload:function(func, count)\r\n\t    Enumerable.generate = function (func, count) {\r\n\t        if (count != null) return Enumerable.generate(func).take(count);\r\n\t        func = Utils.createLambda(func);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            return new IEnumerator(\r\n\t                Functions.Blank,\r\n\t                function () { return this.yieldReturn(func()); },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(start)\r\n\t    // Overload:function(start, step)\r\n\t    Enumerable.toInfinity = function (start, step) {\r\n\t        if (start == null) start = 0;\r\n\t        if (step == null) step = 1;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var value;\r\n\t            return new IEnumerator(\r\n\t                function () { value = start - step; },\r\n\t                function () { return this.yieldReturn(value += step); },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(start)\r\n\t    // Overload:function(start, step)\r\n\t    Enumerable.toNegativeInfinity = function (start, step) {\r\n\t        if (start == null) start = 0;\r\n\t        if (step == null) step = 1;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var value;\r\n\t            return new IEnumerator(\r\n\t                function () { value = start + step; },\r\n\t                function () { return this.yieldReturn(value -= step); },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.unfold = function (seed, func) {\r\n\t        func = Utils.createLambda(func);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var isFirst = true;\r\n\t            var value;\r\n\t            return new IEnumerator(\r\n\t                Functions.Blank,\r\n\t                function () {\r\n\t                    if (isFirst) {\r\n\t                        isFirst = false;\r\n\t                        value = seed;\r\n\t                        return this.yieldReturn(value);\r\n\t                    }\r\n\t                    value = func(value);\r\n\t                    return this.yieldReturn(value);\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.defer = function (enumerableFactory) {\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = Enumerable.from(enumerableFactory()).getEnumerator(); },\r\n\t                function () {\r\n\t                    return (enumerator.moveNext())\r\n\t                        ? this.yieldReturn(enumerator.current())\r\n\t                        : this.yieldBreak();\r\n\t                },\r\n\t                function () {\r\n\t                    Utils.dispose(enumerator);\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Extension Methods\r\n\t\r\n\t    /* Projection and Filtering Methods */\r\n\t\r\n\t    // Overload:function(func)\r\n\t    // Overload:function(func, resultSelector<element>)\r\n\t    // Overload:function(func, resultSelector<element, nestLevel>)\r\n\t    Enumerable.prototype.traverseBreadthFirst = function (func, resultSelector) {\r\n\t        var source = this;\r\n\t        func = Utils.createLambda(func);\r\n\t        resultSelector = Utils.createLambda(resultSelector);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var nestLevel = 0;\r\n\t            var buffer = [];\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    while (true) {\r\n\t                        if (enumerator.moveNext()) {\r\n\t                            buffer.push(enumerator.current());\r\n\t                            return this.yieldReturn(resultSelector(enumerator.current(), nestLevel));\r\n\t                        }\r\n\t\r\n\t                        var next = Enumerable.from(buffer).selectMany(function (x) { return func(x); });\r\n\t                        if (!next.any()) {\r\n\t                            return false;\r\n\t                        }\r\n\t                        else {\r\n\t                            nestLevel++;\r\n\t                            buffer = [];\r\n\t                            Utils.dispose(enumerator);\r\n\t                            enumerator = next.getEnumerator();\r\n\t                        }\r\n\t                    }\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(func)\r\n\t    // Overload:function(func, resultSelector<element>)\r\n\t    // Overload:function(func, resultSelector<element, nestLevel>)\r\n\t    Enumerable.prototype.traverseDepthFirst = function (func, resultSelector) {\r\n\t        var source = this;\r\n\t        func = Utils.createLambda(func);\r\n\t        resultSelector = Utils.createLambda(resultSelector);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumeratorStack = [];\r\n\t            var enumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    while (true) {\r\n\t                        if (enumerator.moveNext()) {\r\n\t                            var value = resultSelector(enumerator.current(), enumeratorStack.length);\r\n\t                            enumeratorStack.push(enumerator);\r\n\t                            enumerator = Enumerable.from(func(enumerator.current())).getEnumerator();\r\n\t                            return this.yieldReturn(value);\r\n\t                        }\r\n\t\r\n\t                        if (enumeratorStack.length <= 0) return false;\r\n\t                        Utils.dispose(enumerator);\r\n\t                        enumerator = enumeratorStack.pop();\r\n\t                    }\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(enumerator);\r\n\t                    }\r\n\t                    finally {\r\n\t                        Enumerable.from(enumeratorStack).forEach(function (s) { s.dispose(); });\r\n\t                    }\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.flatten = function () {\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var middleEnumerator = null;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    while (true) {\r\n\t                        if (middleEnumerator != null) {\r\n\t                            if (middleEnumerator.moveNext()) {\r\n\t                                return this.yieldReturn(middleEnumerator.current());\r\n\t                            }\r\n\t                            else {\r\n\t                                middleEnumerator = null;\r\n\t                            }\r\n\t                        }\r\n\t\r\n\t                        if (enumerator.moveNext()) {\r\n\t                            if (enumerator.current() instanceof Array) {\r\n\t                                Utils.dispose(middleEnumerator);\r\n\t                                middleEnumerator = Enumerable.from(enumerator.current())\r\n\t                                    .selectMany(Functions.Identity)\r\n\t                                    .flatten()\r\n\t                                    .getEnumerator();\r\n\t                                continue;\r\n\t                            }\r\n\t                            else {\r\n\t                                return this.yieldReturn(enumerator.current());\r\n\t                            }\r\n\t                        }\r\n\t\r\n\t                        return false;\r\n\t                    }\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(enumerator);\r\n\t                    }\r\n\t                    finally {\r\n\t                        Utils.dispose(middleEnumerator);\r\n\t                    }\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.pairwise = function (selector) {\r\n\t        var source = this;\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = source.getEnumerator();\r\n\t                    enumerator.moveNext();\r\n\t                },\r\n\t                function () {\r\n\t                    var prev = enumerator.current();\r\n\t                    return (enumerator.moveNext())\r\n\t                        ? this.yieldReturn(selector(prev, enumerator.current()))\r\n\t                        : false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(func)\r\n\t    // Overload:function(seed,func<value,element>)\r\n\t    Enumerable.prototype.scan = function (seed, func) {\r\n\t        var isUseSeed;\r\n\t        if (func == null) {\r\n\t            func = Utils.createLambda(seed); // arguments[0]\r\n\t            isUseSeed = false;\r\n\t        } else {\r\n\t            func = Utils.createLambda(func);\r\n\t            isUseSeed = true;\r\n\t        }\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var value;\r\n\t            var isFirst = true;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    if (isFirst) {\r\n\t                        isFirst = false;\r\n\t                        if (!isUseSeed) {\r\n\t                            if (enumerator.moveNext()) {\r\n\t                                return this.yieldReturn(value = enumerator.current());\r\n\t                            }\r\n\t                        }\r\n\t                        else {\r\n\t                            return this.yieldReturn(value = seed);\r\n\t                        }\r\n\t                    }\r\n\t\r\n\t                    return (enumerator.moveNext())\r\n\t                        ? this.yieldReturn(value = func(value, enumerator.current()))\r\n\t                        : false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(selector<element>)\r\n\t    // Overload:function(selector<element,index>)\r\n\t    Enumerable.prototype.select = function (selector) {\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        if (selector.length <= 1) {\r\n\t            return new WhereSelectEnumerable(this, null, selector);\r\n\t        }\r\n\t        else {\r\n\t            var source = this;\r\n\t\r\n\t            return new Enumerable(function () {\r\n\t                var enumerator;\r\n\t                var index = 0;\r\n\t\r\n\t                return new IEnumerator(\r\n\t                    function () { enumerator = source.getEnumerator(); },\r\n\t                    function () {\r\n\t                        return (enumerator.moveNext())\r\n\t                            ? this.yieldReturn(selector(enumerator.current(), index++))\r\n\t                            : false;\r\n\t                    },\r\n\t                    function () { Utils.dispose(enumerator); });\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Overload:function(collectionSelector<element>)\r\n\t    // Overload:function(collectionSelector<element,index>)\r\n\t    // Overload:function(collectionSelector<element>,resultSelector)\r\n\t    // Overload:function(collectionSelector<element,index>,resultSelector)\r\n\t    Enumerable.prototype.selectMany = function (collectionSelector, resultSelector) {\r\n\t        var source = this;\r\n\t        collectionSelector = Utils.createLambda(collectionSelector);\r\n\t        if (resultSelector == null) resultSelector = function (a, b) { return b; };\r\n\t        resultSelector = Utils.createLambda(resultSelector);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var middleEnumerator = undefined;\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    if (middleEnumerator === undefined) {\r\n\t                        if (!enumerator.moveNext()) return false;\r\n\t                    }\r\n\t                    do {\r\n\t                        if (middleEnumerator == null) {\r\n\t                            var middleSeq = collectionSelector(enumerator.current(), index++);\r\n\t                            middleEnumerator = Enumerable.from(middleSeq).getEnumerator();\r\n\t                        }\r\n\t                        if (middleEnumerator.moveNext()) {\r\n\t                            return this.yieldReturn(resultSelector(enumerator.current(), middleEnumerator.current()));\r\n\t                        }\r\n\t                        Utils.dispose(middleEnumerator);\r\n\t                        middleEnumerator = null;\r\n\t                    } while (enumerator.moveNext());\r\n\t                    return false;\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(enumerator);\r\n\t                    }\r\n\t                    finally {\r\n\t                        Utils.dispose(middleEnumerator);\r\n\t                    }\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(predicate<element>)\r\n\t    // Overload:function(predicate<element,index>)\r\n\t    Enumerable.prototype.where = function (predicate) {\r\n\t        predicate = Utils.createLambda(predicate);\r\n\t\r\n\t        if (predicate.length <= 1) {\r\n\t            return new WhereEnumerable(this, predicate);\r\n\t        }\r\n\t        else {\r\n\t            var source = this;\r\n\t\r\n\t            return new Enumerable(function () {\r\n\t                var enumerator;\r\n\t                var index = 0;\r\n\t\r\n\t                return new IEnumerator(\r\n\t                    function () { enumerator = source.getEnumerator(); },\r\n\t                    function () {\r\n\t                        while (enumerator.moveNext()) {\r\n\t                            if (predicate(enumerator.current(), index++)) {\r\n\t                                return this.yieldReturn(enumerator.current());\r\n\t                            }\r\n\t                        }\r\n\t                        return false;\r\n\t                    },\r\n\t                    function () { Utils.dispose(enumerator); });\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    // Overload:function(selector<element>)\r\n\t    // Overload:function(selector<element,index>)\r\n\t    Enumerable.prototype.choose = function (selector) {\r\n\t        selector = Utils.createLambda(selector);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    while (enumerator.moveNext()) {\r\n\t                        var result = selector(enumerator.current(), index++);\r\n\t                        if (result != null) {\r\n\t                            return this.yieldReturn(result);\r\n\t                        }\r\n\t                    }\r\n\t                    return this.yieldBreak();\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.ofType = function (type) {\r\n\t        var typeName;\r\n\t        switch (type) {\r\n\t            case Number:\r\n\t                typeName = Types.Number;\r\n\t                break;\r\n\t            case String:\r\n\t                typeName = Types.String;\r\n\t                break;\r\n\t            case Boolean:\r\n\t                typeName = Types.Boolean;\r\n\t                break;\r\n\t            case Function:\r\n\t                typeName = Types.Function;\r\n\t                break;\r\n\t            default:\r\n\t                typeName = null;\r\n\t                break;\r\n\t        }\r\n\t        return (typeName === null)\r\n\t            ? this.where(function (x) { return x instanceof type; })\r\n\t            : this.where(function (x) { return typeof x === typeName; });\r\n\t    };\r\n\t\r\n\t    // mutiple arguments, last one is selector, others are enumerable\r\n\t    Enumerable.prototype.zip = function () {\r\n\t        var args = arguments;\r\n\t        var selector = Utils.createLambda(arguments[arguments.length - 1]);\r\n\t\r\n\t        var source = this;\r\n\t        // optimized case:argument is 2\r\n\t        if (arguments.length == 2) {\r\n\t            var second = arguments[0];\r\n\t\r\n\t            return new Enumerable(function () {\r\n\t                var firstEnumerator;\r\n\t                var secondEnumerator;\r\n\t                var index = 0;\r\n\t\r\n\t                return new IEnumerator(\r\n\t                function () {\r\n\t                    firstEnumerator = source.getEnumerator();\r\n\t                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n\t                },\r\n\t                function () {\r\n\t                    if (firstEnumerator.moveNext() && secondEnumerator.moveNext()) {\r\n\t                        return this.yieldReturn(selector(firstEnumerator.current(), secondEnumerator.current(), index++));\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(firstEnumerator);\r\n\t                    } finally {\r\n\t                        Utils.dispose(secondEnumerator);\r\n\t                    }\r\n\t                });\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            return new Enumerable(function () {\r\n\t                var enumerators;\r\n\t                var index = 0;\r\n\t\r\n\t                return new IEnumerator(\r\n\t                function () {\r\n\t                    var array = Enumerable.make(source)\r\n\t                        .concat(Enumerable.from(args).takeExceptLast().select(Enumerable.from))\r\n\t                        .select(function (x) { return x.getEnumerator() })\r\n\t                        .toArray();\r\n\t                    enumerators = Enumerable.from(array);\r\n\t                },\r\n\t                function () {\r\n\t                    if (enumerators.all(function (x) { return x.moveNext() })) {\r\n\t                        var array = enumerators\r\n\t                            .select(function (x) { return x.current() })\r\n\t                            .toArray();\r\n\t                        array.push(index++);\r\n\t                        return this.yieldReturn(selector.apply(null, array));\r\n\t                    }\r\n\t                    else {\r\n\t                        return this.yieldBreak();\r\n\t                    }\r\n\t                },\r\n\t                function () {\r\n\t                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n\t                });\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // mutiple arguments\r\n\t    Enumerable.prototype.merge = function () {\r\n\t        var args = arguments;\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerators;\r\n\t            var index = -1;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerators = Enumerable.make(source)\r\n\t                        .concat(Enumerable.from(args).select(Enumerable.from))\r\n\t                        .select(function (x) { return x.getEnumerator() })\r\n\t                        .toArray();\r\n\t                },\r\n\t                function () {\r\n\t                    while (enumerators.length > 0) {\r\n\t                        index = (index >= enumerators.length - 1) ? 0 : index + 1;\r\n\t                        var enumerator = enumerators[index];\r\n\t\r\n\t                        if (enumerator.moveNext()) {\r\n\t                            return this.yieldReturn(enumerator.current());\r\n\t                        }\r\n\t                        else {\r\n\t                            enumerator.dispose();\r\n\t                            enumerators.splice(index--, 1);\r\n\t                        }\r\n\t                    }\r\n\t                    return this.yieldBreak();\r\n\t                },\r\n\t                function () {\r\n\t                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /* Join Methods */\r\n\t\r\n\t    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n\t    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\n\t    Enumerable.prototype.join = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n\t        outerKeySelector = Utils.createLambda(outerKeySelector);\r\n\t        innerKeySelector = Utils.createLambda(innerKeySelector);\r\n\t        resultSelector = Utils.createLambda(resultSelector);\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var outerEnumerator;\r\n\t            var lookup;\r\n\t            var innerElements = null;\r\n\t            var innerCount = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    outerEnumerator = source.getEnumerator();\r\n\t                    lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n\t                },\r\n\t                function () {\r\n\t                    while (true) {\r\n\t                        if (innerElements != null) {\r\n\t                            var innerElement = innerElements[innerCount++];\r\n\t                            if (innerElement !== undefined) {\r\n\t                                return this.yieldReturn(resultSelector(outerEnumerator.current(), innerElement));\r\n\t                            }\r\n\t\r\n\t                            innerElement = null;\r\n\t                            innerCount = 0;\r\n\t                        }\r\n\t\r\n\t                        if (outerEnumerator.moveNext()) {\r\n\t                            var key = outerKeySelector(outerEnumerator.current());\r\n\t                            innerElements = lookup.get(key).toArray();\r\n\t                        } else {\r\n\t                            return false;\r\n\t                        }\r\n\t                    }\r\n\t                },\r\n\t                function () { Utils.dispose(outerEnumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n\t    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\n\t    Enumerable.prototype.groupJoin = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n\t        outerKeySelector = Utils.createLambda(outerKeySelector);\r\n\t        innerKeySelector = Utils.createLambda(innerKeySelector);\r\n\t        resultSelector = Utils.createLambda(resultSelector);\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator = source.getEnumerator();\r\n\t            var lookup = null;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = source.getEnumerator();\r\n\t                    lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n\t                },\r\n\t                function () {\r\n\t                    if (enumerator.moveNext()) {\r\n\t                        var innerElement = lookup.get(outerKeySelector(enumerator.current()));\r\n\t                        return this.yieldReturn(resultSelector(enumerator.current(), innerElement));\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /* Set Methods */\r\n\t\r\n\t    Enumerable.prototype.all = function (predicate) {\r\n\t        predicate = Utils.createLambda(predicate);\r\n\t\r\n\t        var result = true;\r\n\t        this.forEach(function (x) {\r\n\t            if (!predicate(x)) {\r\n\t                result = false;\r\n\t                return false; // break\r\n\t            }\r\n\t        });\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(predicate)\r\n\t    Enumerable.prototype.any = function (predicate) {\r\n\t        predicate = Utils.createLambda(predicate);\r\n\t\r\n\t        var enumerator = this.getEnumerator();\r\n\t        try {\r\n\t            if (arguments.length == 0) return enumerator.moveNext(); // case:function()\r\n\t\r\n\t            while (enumerator.moveNext()) // case:function(predicate)\r\n\t            {\r\n\t                if (predicate(enumerator.current())) return true;\r\n\t            }\r\n\t            return false;\r\n\t        }\r\n\t        finally {\r\n\t            Utils.dispose(enumerator);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.isEmpty = function () {\r\n\t        return !this.any();\r\n\t    };\r\n\t\r\n\t    // multiple arguments\r\n\t    Enumerable.prototype.concat = function () {\r\n\t        var source = this;\r\n\t\r\n\t        if (arguments.length == 1) {\r\n\t            var second = arguments[0];\r\n\t\r\n\t            return new Enumerable(function () {\r\n\t                var firstEnumerator;\r\n\t                var secondEnumerator;\r\n\t\r\n\t                return new IEnumerator(\r\n\t                function () { firstEnumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    if (secondEnumerator == null) {\r\n\t                        if (firstEnumerator.moveNext()) return this.yieldReturn(firstEnumerator.current());\r\n\t                        secondEnumerator = Enumerable.from(second).getEnumerator();\r\n\t                    }\r\n\t                    if (secondEnumerator.moveNext()) return this.yieldReturn(secondEnumerator.current());\r\n\t                    return false;\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(firstEnumerator);\r\n\t                    }\r\n\t                    finally {\r\n\t                        Utils.dispose(secondEnumerator);\r\n\t                    }\r\n\t                });\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            var args = arguments;\r\n\t\r\n\t            return new Enumerable(function () {\r\n\t                var enumerators;\r\n\t\r\n\t                return new IEnumerator(\r\n\t                    function () {\r\n\t                        enumerators = Enumerable.make(source)\r\n\t                            .concat(Enumerable.from(args).select(Enumerable.from))\r\n\t                            .select(function (x) { return x.getEnumerator() })\r\n\t                            .toArray();\r\n\t                    },\r\n\t                    function () {\r\n\t                        while (enumerators.length > 0) {\r\n\t                            var enumerator = enumerators[0];\r\n\t\r\n\t                            if (enumerator.moveNext()) {\r\n\t                                return this.yieldReturn(enumerator.current());\r\n\t                            }\r\n\t                            else {\r\n\t                                enumerator.dispose();\r\n\t                                enumerators.splice(0, 1);\r\n\t                            }\r\n\t                        }\r\n\t                        return this.yieldBreak();\r\n\t                    },\r\n\t                    function () {\r\n\t                        Enumerable.from(enumerators).forEach(Utils.dispose);\r\n\t                    });\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.insert = function (index, second) {\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var firstEnumerator;\r\n\t            var secondEnumerator;\r\n\t            var count = 0;\r\n\t            var isEnumerated = false;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    firstEnumerator = source.getEnumerator();\r\n\t                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n\t                },\r\n\t                function () {\r\n\t                    if (count == index && secondEnumerator.moveNext()) {\r\n\t                        isEnumerated = true;\r\n\t                        return this.yieldReturn(secondEnumerator.current());\r\n\t                    }\r\n\t                    if (firstEnumerator.moveNext()) {\r\n\t                        count++;\r\n\t                        return this.yieldReturn(firstEnumerator.current());\r\n\t                    }\r\n\t                    if (!isEnumerated && secondEnumerator.moveNext()) {\r\n\t                        return this.yieldReturn(secondEnumerator.current());\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(firstEnumerator);\r\n\t                    }\r\n\t                    finally {\r\n\t                        Utils.dispose(secondEnumerator);\r\n\t                    }\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.alternate = function (alternateValueOrSequence) {\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var buffer;\r\n\t            var enumerator;\r\n\t            var alternateSequence;\r\n\t            var alternateEnumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    if (alternateValueOrSequence instanceof Array || alternateValueOrSequence.getEnumerator != null) {\r\n\t                        alternateSequence = Enumerable.from(Enumerable.from(alternateValueOrSequence).toArray()); // freeze\r\n\t                    }\r\n\t                    else {\r\n\t                        alternateSequence = Enumerable.make(alternateValueOrSequence);\r\n\t                    }\r\n\t                    enumerator = source.getEnumerator();\r\n\t                    if (enumerator.moveNext()) buffer = enumerator.current();\r\n\t                },\r\n\t                function () {\r\n\t                    while (true) {\r\n\t                        if (alternateEnumerator != null) {\r\n\t                            if (alternateEnumerator.moveNext()) {\r\n\t                                return this.yieldReturn(alternateEnumerator.current());\r\n\t                            }\r\n\t                            else {\r\n\t                                alternateEnumerator = null;\r\n\t                            }\r\n\t                        }\r\n\t\r\n\t                        if (buffer == null && enumerator.moveNext()) {\r\n\t                            buffer = enumerator.current(); // hasNext\r\n\t                            alternateEnumerator = alternateSequence.getEnumerator();\r\n\t                            continue; // GOTO\r\n\t                        }\r\n\t                        else if (buffer != null) {\r\n\t                            var retVal = buffer;\r\n\t                            buffer = null;\r\n\t                            return this.yieldReturn(retVal);\r\n\t                        }\r\n\t\r\n\t                        return this.yieldBreak();\r\n\t                    }\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(enumerator);\r\n\t                    }\r\n\t                    finally {\r\n\t                        Utils.dispose(alternateEnumerator);\r\n\t                    }\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(value)\r\n\t    // Overload:function(value, compareSelector)\r\n\t    Enumerable.prototype.contains = function (value, compareSelector) {\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t        var enumerator = this.getEnumerator();\r\n\t        try {\r\n\t            while (enumerator.moveNext()) {\r\n\t                if (compareSelector(enumerator.current()) === value) return true;\r\n\t            }\r\n\t            return false;\r\n\t        }\r\n\t        finally {\r\n\t            Utils.dispose(enumerator);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.defaultIfEmpty = function (defaultValue) {\r\n\t        var source = this;\r\n\t        if (defaultValue === undefined) defaultValue = null;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var isFirst = true;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    if (enumerator.moveNext()) {\r\n\t                        isFirst = false;\r\n\t                        return this.yieldReturn(enumerator.current());\r\n\t                    }\r\n\t                    else if (isFirst) {\r\n\t                        isFirst = false;\r\n\t                        return this.yieldReturn(defaultValue);\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(compareSelector)\r\n\t    Enumerable.prototype.distinct = function (compareSelector) {\r\n\t        return this.except(Enumerable.empty(), compareSelector);\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.distinctUntilChanged = function (compareSelector) {\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var compareKey;\r\n\t            var initial;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = source.getEnumerator();\r\n\t                },\r\n\t                function () {\r\n\t                    while (enumerator.moveNext()) {\r\n\t                        var key = compareSelector(enumerator.current());\r\n\t\r\n\t                        if (initial) {\r\n\t                            initial = false;\r\n\t                            compareKey = key;\r\n\t                            return this.yieldReturn(enumerator.current());\r\n\t                        }\r\n\t\r\n\t                        if (compareKey === key) {\r\n\t                            continue;\r\n\t                        }\r\n\t\r\n\t                        compareKey = key;\r\n\t                        return this.yieldReturn(enumerator.current());\r\n\t                    }\r\n\t                    return this.yieldBreak();\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(second)\r\n\t    // Overload:function(second, compareSelector)\r\n\t    Enumerable.prototype.except = function (second, compareSelector) {\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var keys;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = source.getEnumerator();\r\n\t                    keys = new Dictionary(compareSelector);\r\n\t                    Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n\t                },\r\n\t                function () {\r\n\t                    while (enumerator.moveNext()) {\r\n\t                        var current = enumerator.current();\r\n\t                        if (!keys.contains(current)) {\r\n\t                            keys.add(current);\r\n\t                            return this.yieldReturn(current);\r\n\t                        }\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(second)\r\n\t    // Overload:function(second, compareSelector)\r\n\t    Enumerable.prototype.intersect = function (second, compareSelector) {\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var keys;\r\n\t            var outs;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = source.getEnumerator();\r\n\t\r\n\t                    keys = new Dictionary(compareSelector);\r\n\t                    Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n\t                    outs = new Dictionary(compareSelector);\r\n\t                },\r\n\t                function () {\r\n\t                    while (enumerator.moveNext()) {\r\n\t                        var current = enumerator.current();\r\n\t                        if (!outs.contains(current) && keys.contains(current)) {\r\n\t                            outs.add(current);\r\n\t                            return this.yieldReturn(current);\r\n\t                        }\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(second)\r\n\t    // Overload:function(second, compareSelector)\r\n\t    Enumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t\r\n\t        var firstEnumerator = this.getEnumerator();\r\n\t        try {\r\n\t            var secondEnumerator = Enumerable.from(second).getEnumerator();\r\n\t            try {\r\n\t                while (firstEnumerator.moveNext()) {\r\n\t                    if (!secondEnumerator.moveNext()\r\n\t                    || compareSelector(firstEnumerator.current()) !== compareSelector(secondEnumerator.current())) {\r\n\t                        return false;\r\n\t                    }\r\n\t                }\r\n\t\r\n\t                if (secondEnumerator.moveNext()) return false;\r\n\t                return true;\r\n\t            }\r\n\t            finally {\r\n\t                Utils.dispose(secondEnumerator);\r\n\t            }\r\n\t        }\r\n\t        finally {\r\n\t            Utils.dispose(firstEnumerator);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.union = function (second, compareSelector) {\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var firstEnumerator;\r\n\t            var secondEnumerator;\r\n\t            var keys;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    firstEnumerator = source.getEnumerator();\r\n\t                    keys = new Dictionary(compareSelector);\r\n\t                },\r\n\t                function () {\r\n\t                    var current;\r\n\t                    if (secondEnumerator === undefined) {\r\n\t                        while (firstEnumerator.moveNext()) {\r\n\t                            current = firstEnumerator.current();\r\n\t                            if (!keys.contains(current)) {\r\n\t                                keys.add(current);\r\n\t                                return this.yieldReturn(current);\r\n\t                            }\r\n\t                        }\r\n\t                        secondEnumerator = Enumerable.from(second).getEnumerator();\r\n\t                    }\r\n\t                    while (secondEnumerator.moveNext()) {\r\n\t                        current = secondEnumerator.current();\r\n\t                        if (!keys.contains(current)) {\r\n\t                            keys.add(current);\r\n\t                            return this.yieldReturn(current);\r\n\t                        }\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(firstEnumerator);\r\n\t                    }\r\n\t                    finally {\r\n\t                        Utils.dispose(secondEnumerator);\r\n\t                    }\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /* Ordering Methods */\r\n\t\r\n\t    Enumerable.prototype.orderBy = function (keySelector) {\r\n\t        return new OrderedEnumerable(this, keySelector, false);\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.orderByDescending = function (keySelector) {\r\n\t        return new OrderedEnumerable(this, keySelector, true);\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.reverse = function () {\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var buffer;\r\n\t            var index;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    buffer = source.toArray();\r\n\t                    index = buffer.length;\r\n\t                },\r\n\t                function () {\r\n\t                    return (index > 0)\r\n\t                        ? this.yieldReturn(buffer[--index])\r\n\t                        : false;\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.shuffle = function () {\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var buffer;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { buffer = source.toArray(); },\r\n\t                function () {\r\n\t                    if (buffer.length > 0) {\r\n\t                        var i = Math.floor(Math.random() * buffer.length);\r\n\t                        return this.yieldReturn(buffer.splice(i, 1)[0]);\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.weightedSample = function (weightSelector) {\r\n\t        weightSelector = Utils.createLambda(weightSelector);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var sortedByBound;\r\n\t            var totalWeight = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    sortedByBound = source\r\n\t                        .choose(function (x) {\r\n\t                            var weight = weightSelector(x);\r\n\t                            if (weight <= 0) return null; // ignore 0\r\n\t\r\n\t                            totalWeight += weight;\r\n\t                            return { value: x, bound: totalWeight };\r\n\t                        })\r\n\t                        .toArray();\r\n\t                },\r\n\t                function () {\r\n\t                    if (sortedByBound.length > 0) {\r\n\t                        var draw = Math.floor(Math.random() * totalWeight) + 1;\r\n\t\r\n\t                        var lower = -1;\r\n\t                        var upper = sortedByBound.length;\r\n\t                        while (upper - lower > 1) {\r\n\t                            var index = Math.floor((lower + upper) / 2);\r\n\t                            if (sortedByBound[index].bound >= draw) {\r\n\t                                upper = index;\r\n\t                            }\r\n\t                            else {\r\n\t                                lower = index;\r\n\t                            }\r\n\t                        }\r\n\t\r\n\t                        return this.yieldReturn(sortedByBound[upper].value);\r\n\t                    }\r\n\t\r\n\t                    return this.yieldBreak();\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /* Grouping Methods */\r\n\t\r\n\t    // Overload:function(keySelector)\r\n\t    // Overload:function(keySelector,elementSelector)\r\n\t    // Overload:function(keySelector,elementSelector,resultSelector)\r\n\t    // Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\n\t    Enumerable.prototype.groupBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n\t        var source = this;\r\n\t        keySelector = Utils.createLambda(keySelector);\r\n\t        elementSelector = Utils.createLambda(elementSelector);\r\n\t        if (resultSelector != null) resultSelector = Utils.createLambda(resultSelector);\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = source.toLookup(keySelector, elementSelector, compareSelector)\r\n\t                        .toEnumerable()\r\n\t                        .getEnumerator();\r\n\t                },\r\n\t                function () {\r\n\t                    while (enumerator.moveNext()) {\r\n\t                        return (resultSelector == null)\r\n\t                            ? this.yieldReturn(enumerator.current())\r\n\t                            : this.yieldReturn(resultSelector(enumerator.current().key(), enumerator.current()));\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(keySelector)\r\n\t    // Overload:function(keySelector,elementSelector)\r\n\t    // Overload:function(keySelector,elementSelector,resultSelector)\r\n\t    // Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\n\t    Enumerable.prototype.partitionBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n\t\r\n\t        var source = this;\r\n\t        keySelector = Utils.createLambda(keySelector);\r\n\t        elementSelector = Utils.createLambda(elementSelector);\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t        var hasResultSelector;\r\n\t        if (resultSelector == null) {\r\n\t            hasResultSelector = false;\r\n\t            resultSelector = function (key, group) { return new Grouping(key, group); };\r\n\t        }\r\n\t        else {\r\n\t            hasResultSelector = true;\r\n\t            resultSelector = Utils.createLambda(resultSelector);\r\n\t        }\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var key;\r\n\t            var compareKey;\r\n\t            var group = [];\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = source.getEnumerator();\r\n\t                    if (enumerator.moveNext()) {\r\n\t                        key = keySelector(enumerator.current());\r\n\t                        compareKey = compareSelector(key);\r\n\t                        group.push(elementSelector(enumerator.current()));\r\n\t                    }\r\n\t                },\r\n\t                function () {\r\n\t                    var hasNext;\r\n\t                    while ((hasNext = enumerator.moveNext()) == true) {\r\n\t                        if (compareKey === compareSelector(keySelector(enumerator.current()))) {\r\n\t                            group.push(elementSelector(enumerator.current()));\r\n\t                        }\r\n\t                        else break;\r\n\t                    }\r\n\t\r\n\t                    if (group.length > 0) {\r\n\t                        var result = (hasResultSelector)\r\n\t                            ? resultSelector(key, Enumerable.from(group))\r\n\t                            : resultSelector(key, group);\r\n\t                        if (hasNext) {\r\n\t                            key = keySelector(enumerator.current());\r\n\t                            compareKey = compareSelector(key);\r\n\t                            group = [elementSelector(enumerator.current())];\r\n\t                        }\r\n\t                        else group = [];\r\n\t\r\n\t                        return this.yieldReturn(result);\r\n\t                    }\r\n\t\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.buffer = function (count) {\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    var array = [];\r\n\t                    var index = 0;\r\n\t                    while (enumerator.moveNext()) {\r\n\t                        array.push(enumerator.current());\r\n\t                        if (++index >= count) return this.yieldReturn(array);\r\n\t                    }\r\n\t                    if (array.length > 0) return this.yieldReturn(array);\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /* Aggregate Methods */\r\n\t\r\n\t    // Overload:function(func)\r\n\t    // Overload:function(seed,func)\r\n\t    // Overload:function(seed,func,resultSelector)\r\n\t    Enumerable.prototype.aggregate = function (seed, func, resultSelector) {\r\n\t        resultSelector = Utils.createLambda(resultSelector);\r\n\t        return resultSelector(this.scan(seed, func, resultSelector).last());\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(selector)\r\n\t    Enumerable.prototype.average = function (selector) {\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        var sum = 0;\r\n\t        var count = 0;\r\n\t        this.forEach(function (x) {\r\n\t            sum += selector(x);\r\n\t            ++count;\r\n\t        });\r\n\t\r\n\t        return sum / count;\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(predicate)\r\n\t    Enumerable.prototype.count = function (predicate) {\r\n\t        predicate = (predicate == null) ? Functions.True : Utils.createLambda(predicate);\r\n\t\r\n\t        var count = 0;\r\n\t        this.forEach(function (x, i) {\r\n\t            if (predicate(x, i))++count;\r\n\t        });\r\n\t        return count;\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(selector)\r\n\t    Enumerable.prototype.max = function (selector) {\r\n\t        if (selector == null) selector = Functions.Identity;\r\n\t        return this.select(selector).aggregate(function (a, b) { return (a > b) ? a : b; });\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(selector)\r\n\t    Enumerable.prototype.min = function (selector) {\r\n\t        if (selector == null) selector = Functions.Identity;\r\n\t        return this.select(selector).aggregate(function (a, b) { return (a < b) ? a : b; });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.maxBy = function (keySelector) {\r\n\t        keySelector = Utils.createLambda(keySelector);\r\n\t        return this.aggregate(function (a, b) { return (keySelector(a) > keySelector(b)) ? a : b; });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.minBy = function (keySelector) {\r\n\t        keySelector = Utils.createLambda(keySelector);\r\n\t        return this.aggregate(function (a, b) { return (keySelector(a) < keySelector(b)) ? a : b; });\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(selector)\r\n\t    Enumerable.prototype.sum = function (selector) {\r\n\t        if (selector == null) selector = Functions.Identity;\r\n\t        return this.select(selector).aggregate(0, function (a, b) { return a + b; });\r\n\t    };\r\n\t\r\n\t    /* Paging Methods */\r\n\t\r\n\t    Enumerable.prototype.elementAt = function (index) {\r\n\t        var value;\r\n\t        var found = false;\r\n\t        this.forEach(function (x, i) {\r\n\t            if (i == index) {\r\n\t                value = x;\r\n\t                found = true;\r\n\t                return false;\r\n\t            }\r\n\t        });\r\n\t\r\n\t        if (!found) throw new Error(\"index is less than 0 or greater than or equal to the number of elements in source.\");\r\n\t        return value;\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n\t        if (defaultValue === undefined) defaultValue = null;\r\n\t        var value;\r\n\t        var found = false;\r\n\t        this.forEach(function (x, i) {\r\n\t            if (i == index) {\r\n\t                value = x;\r\n\t                found = true;\r\n\t                return false;\r\n\t            }\r\n\t        });\r\n\t\r\n\t        return (!found) ? defaultValue : value;\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(predicate)\r\n\t    Enumerable.prototype.first = function (predicate) {\r\n\t        if (predicate != null) return this.where(predicate).first();\r\n\t\r\n\t        var value;\r\n\t        var found = false;\r\n\t        this.forEach(function (x) {\r\n\t            value = x;\r\n\t            found = true;\r\n\t            return false;\r\n\t        });\r\n\t\r\n\t        if (!found) throw new Error(\"first:No element satisfies the condition.\");\r\n\t        return value;\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n\t        if (defaultValue === undefined) defaultValue = null;\r\n\t        if (predicate != null) return this.where(predicate).firstOrDefault(null, defaultValue);\r\n\t\r\n\t        var value;\r\n\t        var found = false;\r\n\t        this.forEach(function (x) {\r\n\t            value = x;\r\n\t            found = true;\r\n\t            return false;\r\n\t        });\r\n\t        return (!found) ? defaultValue : value;\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(predicate)\r\n\t    Enumerable.prototype.last = function (predicate) {\r\n\t        if (predicate != null) return this.where(predicate).last();\r\n\t\r\n\t        var value;\r\n\t        var found = false;\r\n\t        this.forEach(function (x) {\r\n\t            found = true;\r\n\t            value = x;\r\n\t        });\r\n\t\r\n\t        if (!found) throw new Error(\"last:No element satisfies the condition.\");\r\n\t        return value;\r\n\t    };\r\n\t\r\n\t    // Overload:function(defaultValue)\r\n\t    // Overload:function(defaultValue,predicate)\r\n\t    Enumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n\t        if (defaultValue === undefined) defaultValue = null;\r\n\t        if (predicate != null) return this.where(predicate).lastOrDefault(null, defaultValue);\r\n\t\r\n\t        var value;\r\n\t        var found = false;\r\n\t        this.forEach(function (x) {\r\n\t            found = true;\r\n\t            value = x;\r\n\t        });\r\n\t        return (!found) ? defaultValue : value;\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(predicate)\r\n\t    Enumerable.prototype.single = function (predicate) {\r\n\t        if (predicate != null) return this.where(predicate).single();\r\n\t\r\n\t        var value;\r\n\t        var found = false;\r\n\t        this.forEach(function (x) {\r\n\t            if (!found) {\r\n\t                found = true;\r\n\t                value = x;\r\n\t            } else throw new Error(\"single:sequence contains more than one element.\");\r\n\t        });\r\n\t\r\n\t        if (!found) throw new Error(\"single:No element satisfies the condition.\");\r\n\t        return value;\r\n\t    };\r\n\t\r\n\t    // Overload:function(defaultValue)\r\n\t    // Overload:function(defaultValue,predicate)\r\n\t    Enumerable.prototype.singleOrDefault = function (predicate, defaultValue) {\r\n\t        if (defaultValue === undefined) defaultValue = null;\r\n\t        if (predicate != null) return this.where(predicate).singleOrDefault(null, defaultValue);\r\n\t\r\n\t        var value;\r\n\t        var found = false;\r\n\t        this.forEach(function (x) {\r\n\t            if (!found) {\r\n\t                found = true;\r\n\t                value = x;\r\n\t            } else throw new Error(\"single:sequence contains more than one element.\");\r\n\t        });\r\n\t\r\n\t        return (!found) ? defaultValue : value;\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.skip = function (count) {\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = source.getEnumerator();\r\n\t                    while (index++ < count && enumerator.moveNext()) {\r\n\t                    }\r\n\t                    ;\r\n\t                },\r\n\t                function () {\r\n\t                    return (enumerator.moveNext())\r\n\t                        ? this.yieldReturn(enumerator.current())\r\n\t                        : false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(predicate<element>)\r\n\t    // Overload:function(predicate<element,index>)\r\n\t    Enumerable.prototype.skipWhile = function (predicate) {\r\n\t        predicate = Utils.createLambda(predicate);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var index = 0;\r\n\t            var isSkipEnd = false;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    while (!isSkipEnd) {\r\n\t                        if (enumerator.moveNext()) {\r\n\t                            if (!predicate(enumerator.current(), index++)) {\r\n\t                                isSkipEnd = true;\r\n\t                                return this.yieldReturn(enumerator.current());\r\n\t                            }\r\n\t                            continue;\r\n\t                        } else return false;\r\n\t                    }\r\n\t\r\n\t                    return (enumerator.moveNext())\r\n\t                        ? this.yieldReturn(enumerator.current())\r\n\t                        : false;\r\n\t\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.take = function (count) {\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    return (index++ < count && enumerator.moveNext())\r\n\t                        ? this.yieldReturn(enumerator.current())\r\n\t                        : false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); }\r\n\t            );\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(predicate<element>)\r\n\t    // Overload:function(predicate<element,index>)\r\n\t    Enumerable.prototype.takeWhile = function (predicate) {\r\n\t        predicate = Utils.createLambda(predicate);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    return (enumerator.moveNext() && predicate(enumerator.current(), index++))\r\n\t                        ? this.yieldReturn(enumerator.current())\r\n\t                        : false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(count)\r\n\t    Enumerable.prototype.takeExceptLast = function (count) {\r\n\t        if (count == null) count = 1;\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            if (count <= 0) return source.getEnumerator(); // do nothing\r\n\t\r\n\t            var enumerator;\r\n\t            var q = [];\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    while (enumerator.moveNext()) {\r\n\t                        if (q.length == count) {\r\n\t                            q.push(enumerator.current());\r\n\t                            return this.yieldReturn(q.shift());\r\n\t                        }\r\n\t                        q.push(enumerator.current());\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.takeFromLast = function (count) {\r\n\t        if (count <= 0 || count == null) return Enumerable.empty();\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var sourceEnumerator;\r\n\t            var enumerator;\r\n\t            var q = [];\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { sourceEnumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    while (sourceEnumerator.moveNext()) {\r\n\t                        if (q.length == count) q.shift();\r\n\t                        q.push(sourceEnumerator.current());\r\n\t                    }\r\n\t                    if (enumerator == null) {\r\n\t                        enumerator = Enumerable.from(q).getEnumerator();\r\n\t                    }\r\n\t                    return (enumerator.moveNext())\r\n\t                        ? this.yieldReturn(enumerator.current())\r\n\t                        : false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(item)\r\n\t    // Overload:function(predicate)\r\n\t    Enumerable.prototype.indexOf = function (item) {\r\n\t        var found = null;\r\n\t\r\n\t        // item as predicate\r\n\t        if (typeof (item) === Types.Function) {\r\n\t            this.forEach(function (x, i) {\r\n\t                if (item(x, i)) {\r\n\t                    found = i;\r\n\t                    return false;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            this.forEach(function (x, i) {\r\n\t                if (x === item) {\r\n\t                    found = i;\r\n\t                    return false;\r\n\t                }\r\n\t            });\r\n\t        }\r\n\t\r\n\t        return (found !== null) ? found : -1;\r\n\t    };\r\n\t\r\n\t    // Overload:function(item)\r\n\t    // Overload:function(predicate)\r\n\t    Enumerable.prototype.lastIndexOf = function (item) {\r\n\t        var result = -1;\r\n\t\r\n\t        // item as predicate\r\n\t        if (typeof (item) === Types.Function) {\r\n\t            this.forEach(function (x, i) {\r\n\t                if (item(x, i)) result = i;\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            this.forEach(function (x, i) {\r\n\t                if (x === item) result = i;\r\n\t            });\r\n\t        }\r\n\t\r\n\t        return result;\r\n\t    };\r\n\t\r\n\t    /* Convert Methods */\r\n\t\r\n\t    Enumerable.prototype.cast = function () {\r\n\t        return this;\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.asEnumerable = function () {\r\n\t        return Enumerable.from(this);\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.toArray = function () {\r\n\t        var array = [];\r\n\t        this.forEach(function (x) { array.push(x); });\r\n\t        return array;\r\n\t    };\r\n\t\r\n\t    // Overload:function(keySelector)\r\n\t    // Overload:function(keySelector, elementSelector)\r\n\t    // Overload:function(keySelector, elementSelector, compareSelector)\r\n\t    Enumerable.prototype.toLookup = function (keySelector, elementSelector, compareSelector) {\r\n\t        keySelector = Utils.createLambda(keySelector);\r\n\t        elementSelector = Utils.createLambda(elementSelector);\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t\r\n\t        var dict = new Dictionary(compareSelector);\r\n\t        this.forEach(function (x) {\r\n\t            var key = keySelector(x);\r\n\t            var element = elementSelector(x);\r\n\t\r\n\t            var array = dict.get(key);\r\n\t            if (array !== undefined) array.push(element);\r\n\t            else dict.add(key, [element]);\r\n\t        });\r\n\t        return new Lookup(dict);\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.toObject = function (keySelector, elementSelector) {\r\n\t        keySelector = Utils.createLambda(keySelector);\r\n\t        elementSelector = Utils.createLambda(elementSelector);\r\n\t\r\n\t        var obj = {};\r\n\t        this.forEach(function (x) {\r\n\t            obj[keySelector(x)] = elementSelector(x);\r\n\t        });\r\n\t        return obj;\r\n\t    };\r\n\t\r\n\t    // Overload:function(keySelector, elementSelector)\r\n\t    // Overload:function(keySelector, elementSelector, compareSelector)\r\n\t    Enumerable.prototype.toDictionary = function (keySelector, elementSelector, compareSelector) {\r\n\t        keySelector = Utils.createLambda(keySelector);\r\n\t        elementSelector = Utils.createLambda(elementSelector);\r\n\t        compareSelector = Utils.createLambda(compareSelector);\r\n\t\r\n\t        var dict = new Dictionary(compareSelector);\r\n\t        this.forEach(function (x) {\r\n\t            dict.add(keySelector(x), elementSelector(x));\r\n\t        });\r\n\t        return dict;\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(replacer)\r\n\t    // Overload:function(replacer, space)\r\n\t    Enumerable.prototype.toJSONString = function (replacer, space) {\r\n\t        if (typeof JSON === Types.Undefined || JSON.stringify == null) {\r\n\t            throw new Error(\"toJSONString can't find JSON.stringify. This works native JSON support Browser or include json2.js\");\r\n\t        }\r\n\t        return JSON.stringify(this.toArray(), replacer, space);\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(separator)\r\n\t    // Overload:function(separator,selector)\r\n\t    Enumerable.prototype.toJoinedString = function (separator, selector) {\r\n\t        if (separator == null) separator = \"\";\r\n\t        if (selector == null) selector = Functions.Identity;\r\n\t\r\n\t        return this.select(selector).toArray().join(separator);\r\n\t    };\r\n\t\r\n\t\r\n\t    /* Action Methods */\r\n\t\r\n\t    // Overload:function(action<element>)\r\n\t    // Overload:function(action<element,index>)\r\n\t    Enumerable.prototype.doAction = function (action) {\r\n\t        var source = this;\r\n\t        action = Utils.createLambda(action);\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t            var index = 0;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    if (enumerator.moveNext()) {\r\n\t                        action(enumerator.current(), index++);\r\n\t                        return this.yieldReturn(enumerator.current());\r\n\t                    }\r\n\t                    return false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function(action<element>)\r\n\t    // Overload:function(action<element,index>)\r\n\t    // Overload:function(func<element,bool>)\r\n\t    // Overload:function(func<element,index,bool>)\r\n\t    Enumerable.prototype.forEach = function (action) {\r\n\t        action = Utils.createLambda(action);\r\n\t\r\n\t        var index = 0;\r\n\t        var enumerator = this.getEnumerator();\r\n\t        try {\r\n\t            while (enumerator.moveNext()) {\r\n\t                if (action(enumerator.current(), index++) === false) break;\r\n\t            }\r\n\t        } finally {\r\n\t            Utils.dispose(enumerator);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(separator)\r\n\t    // Overload:function(separator,selector)\r\n\t    Enumerable.prototype.write = function (separator, selector) {\r\n\t        if (separator == null) separator = \"\";\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        var isFirst = true;\r\n\t        this.forEach(function (item) {\r\n\t            if (isFirst) isFirst = false;\r\n\t            else document.write(separator);\r\n\t            document.write(selector(item));\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(selector)\r\n\t    Enumerable.prototype.writeLine = function (selector) {\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        this.forEach(function (item) {\r\n\t            document.writeln(selector(item) + \"<br />\");\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.force = function () {\r\n\t        var enumerator = this.getEnumerator();\r\n\t\r\n\t        try {\r\n\t            while (enumerator.moveNext()) {\r\n\t            }\r\n\t        }\r\n\t        finally {\r\n\t            Utils.dispose(enumerator);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    /* Functional Methods */\r\n\t\r\n\t    Enumerable.prototype.letBind = function (func) {\r\n\t        func = Utils.createLambda(func);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    enumerator = Enumerable.from(func(source)).getEnumerator();\r\n\t                },\r\n\t                function () {\r\n\t                    return (enumerator.moveNext())\r\n\t                        ? this.yieldReturn(enumerator.current())\r\n\t                        : false;\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.share = function () {\r\n\t        var source = this;\r\n\t        var sharedEnumerator;\r\n\t        var disposed = false;\r\n\t\r\n\t        return new DisposableEnumerable(function () {\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    if (sharedEnumerator == null) {\r\n\t                        sharedEnumerator = source.getEnumerator();\r\n\t                    }\r\n\t                },\r\n\t                function () {\r\n\t                    if (disposed) throw new Error(\"enumerator is disposed\");\r\n\t\r\n\t                    return (sharedEnumerator.moveNext())\r\n\t                        ? this.yieldReturn(sharedEnumerator.current())\r\n\t                        : false;\r\n\t                },\r\n\t                Functions.Blank\r\n\t            );\r\n\t        }, function () {\r\n\t            disposed = true;\r\n\t            Utils.dispose(sharedEnumerator);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.memoize = function () {\r\n\t        var source = this;\r\n\t        var cache;\r\n\t        var enumerator;\r\n\t        var disposed = false;\r\n\t\r\n\t        return new DisposableEnumerable(function () {\r\n\t            var index = -1;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    if (enumerator == null) {\r\n\t                        enumerator = source.getEnumerator();\r\n\t                        cache = [];\r\n\t                    }\r\n\t                },\r\n\t                function () {\r\n\t                    if (disposed) throw new Error(\"enumerator is disposed\");\r\n\t\r\n\t                    index++;\r\n\t                    if (cache.length <= index) {\r\n\t                        return (enumerator.moveNext())\r\n\t                            ? this.yieldReturn(cache[index] = enumerator.current())\r\n\t                            : false;\r\n\t                    }\r\n\t\r\n\t                    return this.yieldReturn(cache[index]);\r\n\t                },\r\n\t                Functions.Blank\r\n\t            );\r\n\t        }, function () {\r\n\t            disposed = true;\r\n\t            Utils.dispose(enumerator);\r\n\t            cache = null;\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /* Error Handling Methods */\r\n\t\r\n\t    Enumerable.prototype.catchError = function (handler) {\r\n\t        handler = Utils.createLambda(handler);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    try {\r\n\t                        return (enumerator.moveNext())\r\n\t                            ? this.yieldReturn(enumerator.current())\r\n\t                            : false;\r\n\t                    } catch (e) {\r\n\t                        handler(e);\r\n\t                        return false;\r\n\t                    }\r\n\t                },\r\n\t                function () { Utils.dispose(enumerator); });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    Enumerable.prototype.finallyAction = function (finallyAction) {\r\n\t        finallyAction = Utils.createLambda(finallyAction);\r\n\t        var source = this;\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var enumerator;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { enumerator = source.getEnumerator(); },\r\n\t                function () {\r\n\t                    return (enumerator.moveNext())\r\n\t                        ? this.yieldReturn(enumerator.current())\r\n\t                        : false;\r\n\t                },\r\n\t                function () {\r\n\t                    try {\r\n\t                        Utils.dispose(enumerator);\r\n\t                    } finally {\r\n\t                        finallyAction();\r\n\t                    }\r\n\t                });\r\n\t        });\r\n\t    };\r\n\t\r\n\t    /* For Debug Methods */\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(selector)\r\n\t    Enumerable.prototype.log = function (selector) {\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        return this.doAction(function (item) {\r\n\t            if (typeof console !== Types.Undefined) {\r\n\t                console.log(selector(item));\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // Overload:function()\r\n\t    // Overload:function(message)\r\n\t    // Overload:function(message,selector)\r\n\t    Enumerable.prototype.trace = function (message, selector) {\r\n\t        if (message == null) message = \"Trace\";\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        return this.doAction(function (item) {\r\n\t            if (typeof console !== Types.Undefined) {\r\n\t                console.log(message, selector(item));\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t\r\n\t    // private\r\n\t\r\n\t    var OrderedEnumerable = function (source, keySelector, descending, parent) {\r\n\t        this.source = source;\r\n\t        this.keySelector = Utils.createLambda(keySelector);\r\n\t        this.descending = descending;\r\n\t        this.parent = parent;\r\n\t    };\r\n\t    OrderedEnumerable.prototype = new Enumerable();\r\n\t\r\n\t    OrderedEnumerable.prototype.createOrderedEnumerable = function (keySelector, descending) {\r\n\t        return new OrderedEnumerable(this.source, keySelector, descending, this);\r\n\t    };\r\n\t\r\n\t    OrderedEnumerable.prototype.thenBy = function (keySelector) {\r\n\t        return this.createOrderedEnumerable(keySelector, false);\r\n\t    };\r\n\t\r\n\t    OrderedEnumerable.prototype.thenByDescending = function (keySelector) {\r\n\t        return this.createOrderedEnumerable(keySelector, true);\r\n\t    };\r\n\t\r\n\t    OrderedEnumerable.prototype.getEnumerator = function () {\r\n\t        var self = this;\r\n\t        var buffer;\r\n\t        var indexes;\r\n\t        var index = 0;\r\n\t\r\n\t        return new IEnumerator(\r\n\t            function () {\r\n\t                buffer = [];\r\n\t                indexes = [];\r\n\t                self.source.forEach(function (item, index) {\r\n\t                    buffer.push(item);\r\n\t                    indexes.push(index);\r\n\t                });\r\n\t                var sortContext = SortContext.create(self, null);\r\n\t                sortContext.GenerateKeys(buffer);\r\n\t\r\n\t                indexes.sort(function (a, b) { return sortContext.compare(a, b); });\r\n\t            },\r\n\t            function () {\r\n\t                return (index < indexes.length)\r\n\t                    ? this.yieldReturn(buffer[indexes[index++]])\r\n\t                    : false;\r\n\t            },\r\n\t            Functions.Blank\r\n\t        );\r\n\t    };\r\n\t\r\n\t    var SortContext = function (keySelector, descending, child) {\r\n\t        this.keySelector = keySelector;\r\n\t        this.descending = descending;\r\n\t        this.child = child;\r\n\t        this.keys = null;\r\n\t    };\r\n\t\r\n\t    SortContext.create = function (orderedEnumerable, currentContext) {\r\n\t        var context = new SortContext(orderedEnumerable.keySelector, orderedEnumerable.descending, currentContext);\r\n\t        if (orderedEnumerable.parent != null) return SortContext.create(orderedEnumerable.parent, context);\r\n\t        return context;\r\n\t    };\r\n\t\r\n\t    SortContext.prototype.GenerateKeys = function (source) {\r\n\t        var len = source.length;\r\n\t        var keySelector = this.keySelector;\r\n\t        var keys = new Array(len);\r\n\t        for (var i = 0; i < len; i++) keys[i] = keySelector(source[i]);\r\n\t        this.keys = keys;\r\n\t\r\n\t        if (this.child != null) this.child.GenerateKeys(source);\r\n\t    };\r\n\t\r\n\t    SortContext.prototype.compare = function (index1, index2) {\r\n\t        var comparison = Utils.compare(this.keys[index1], this.keys[index2]);\r\n\t\r\n\t        if (comparison == 0) {\r\n\t            if (this.child != null) return this.child.compare(index1, index2);\r\n\t            return Utils.compare(index1, index2);\r\n\t        }\r\n\t\r\n\t        return (this.descending) ? -comparison : comparison;\r\n\t    };\r\n\t\r\n\t    var DisposableEnumerable = function (getEnumerator, dispose) {\r\n\t        this.dispose = dispose;\r\n\t        Enumerable.call(this, getEnumerator);\r\n\t    };\r\n\t    DisposableEnumerable.prototype = new Enumerable();\r\n\t\r\n\t    // optimize array or arraylike object\r\n\t\r\n\t    var ArrayEnumerable = function (source) {\r\n\t        this.getSource = function () { return source; };\r\n\t    };\r\n\t    ArrayEnumerable.prototype = new Enumerable();\r\n\t\r\n\t    ArrayEnumerable.prototype.any = function (predicate) {\r\n\t        return (predicate == null)\r\n\t            ? (this.getSource().length > 0)\r\n\t            : Enumerable.prototype.any.apply(this, arguments);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.count = function (predicate) {\r\n\t        return (predicate == null)\r\n\t            ? this.getSource().length\r\n\t            : Enumerable.prototype.count.apply(this, arguments);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.elementAt = function (index) {\r\n\t        var source = this.getSource();\r\n\t        return (0 <= index && index < source.length)\r\n\t            ? source[index]\r\n\t            : Enumerable.prototype.elementAt.apply(this, arguments);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n\t        if (defaultValue === undefined) defaultValue = null;\r\n\t        var source = this.getSource();\r\n\t        return (0 <= index && index < source.length)\r\n\t            ? source[index]\r\n\t            : defaultValue;\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.first = function (predicate) {\r\n\t        var source = this.getSource();\r\n\t        return (predicate == null && source.length > 0)\r\n\t            ? source[0]\r\n\t            : Enumerable.prototype.first.apply(this, arguments);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n\t        if (defaultValue === undefined) defaultValue = null;\r\n\t        if (predicate != null) {\r\n\t            return Enumerable.prototype.firstOrDefault.apply(this, arguments);\r\n\t        }\r\n\t\r\n\t        var source = this.getSource();\r\n\t        return source.length > 0 ? source[0] : defaultValue;\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.last = function (predicate) {\r\n\t        var source = this.getSource();\r\n\t        return (predicate == null && source.length > 0)\r\n\t            ? source[source.length - 1]\r\n\t            : Enumerable.prototype.last.apply(this, arguments);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n\t        if (defaultValue === undefined) defaultValue = null;\r\n\t        if (predicate != null) {\r\n\t            return Enumerable.prototype.lastOrDefault.apply(this, arguments);\r\n\t        }\r\n\t\r\n\t        var source = this.getSource();\r\n\t        return source.length > 0 ? source[source.length - 1] : defaultValue;\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.skip = function (count) {\r\n\t        var source = this.getSource();\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var index;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () { index = (count < 0) ? 0 : count; },\r\n\t                function () {\r\n\t                    return (index < source.length)\r\n\t                        ? this.yieldReturn(source[index++])\r\n\t                        : false;\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.takeExceptLast = function (count) {\r\n\t        if (count == null) count = 1;\r\n\t        return this.take(this.getSource().length - count);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.takeFromLast = function (count) {\r\n\t        return this.skip(this.getSource().length - count);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.reverse = function () {\r\n\t        var source = this.getSource();\r\n\t\r\n\t        return new Enumerable(function () {\r\n\t            var index;\r\n\t\r\n\t            return new IEnumerator(\r\n\t                function () {\r\n\t                    index = source.length;\r\n\t                },\r\n\t                function () {\r\n\t                    return (index > 0)\r\n\t                        ? this.yieldReturn(source[--index])\r\n\t                        : false;\r\n\t                },\r\n\t                Functions.Blank);\r\n\t        });\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n\t        if ((second instanceof ArrayEnumerable || second instanceof Array)\r\n\t            && compareSelector == null\r\n\t            && Enumerable.from(second).count() != this.count()) {\r\n\t            return false;\r\n\t        }\r\n\t\r\n\t        return Enumerable.prototype.sequenceEqual.apply(this, arguments);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.toJoinedString = function (separator, selector) {\r\n\t        var source = this.getSource();\r\n\t        if (selector != null || !(source instanceof Array)) {\r\n\t            return Enumerable.prototype.toJoinedString.apply(this, arguments);\r\n\t        }\r\n\t\r\n\t        if (separator == null) separator = \"\";\r\n\t        return source.join(separator);\r\n\t    };\r\n\t\r\n\t    ArrayEnumerable.prototype.getEnumerator = function () {\r\n\t        var source = this.getSource();\r\n\t        var index = -1;\r\n\t\r\n\t        // fast and simple enumerator\r\n\t        return {\r\n\t            current: function () { return source[index]; },\r\n\t            moveNext: function () {\r\n\t                return ++index < source.length;\r\n\t            },\r\n\t            dispose: Functions.Blank\r\n\t        };\r\n\t    };\r\n\t\r\n\t    // optimization for multiple where and multiple select and whereselect\r\n\t\r\n\t    var WhereEnumerable = function (source, predicate) {\r\n\t        this.prevSource = source;\r\n\t        this.prevPredicate = predicate; // predicate.length always <= 1\r\n\t    };\r\n\t    WhereEnumerable.prototype = new Enumerable();\r\n\t\r\n\t    WhereEnumerable.prototype.where = function (predicate) {\r\n\t        predicate = Utils.createLambda(predicate);\r\n\t\r\n\t        if (predicate.length <= 1) {\r\n\t            var prevPredicate = this.prevPredicate;\r\n\t            var composedPredicate = function (x) { return prevPredicate(x) && predicate(x); };\r\n\t            return new WhereEnumerable(this.prevSource, composedPredicate);\r\n\t        }\r\n\t        else {\r\n\t            // if predicate use index, can't compose\r\n\t            return Enumerable.prototype.where.call(this, predicate);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    WhereEnumerable.prototype.select = function (selector) {\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        return (selector.length <= 1)\r\n\t            ? new WhereSelectEnumerable(this.prevSource, this.prevPredicate, selector)\r\n\t            : Enumerable.prototype.select.call(this, selector);\r\n\t    };\r\n\t\r\n\t    WhereEnumerable.prototype.getEnumerator = function () {\r\n\t        var predicate = this.prevPredicate;\r\n\t        var source = this.prevSource;\r\n\t        var enumerator;\r\n\t\r\n\t        return new IEnumerator(\r\n\t            function () { enumerator = source.getEnumerator(); },\r\n\t            function () {\r\n\t                while (enumerator.moveNext()) {\r\n\t                    if (predicate(enumerator.current())) {\r\n\t                        return this.yieldReturn(enumerator.current());\r\n\t                    }\r\n\t                }\r\n\t                return false;\r\n\t            },\r\n\t            function () { Utils.dispose(enumerator); });\r\n\t    };\r\n\t\r\n\t    var WhereSelectEnumerable = function (source, predicate, selector) {\r\n\t        this.prevSource = source;\r\n\t        this.prevPredicate = predicate; // predicate.length always <= 1 or null\r\n\t        this.prevSelector = selector; // selector.length always <= 1\r\n\t    };\r\n\t    WhereSelectEnumerable.prototype = new Enumerable();\r\n\t\r\n\t    WhereSelectEnumerable.prototype.where = function (predicate) {\r\n\t        predicate = Utils.createLambda(predicate);\r\n\t\r\n\t        return (predicate.length <= 1)\r\n\t            ? new WhereEnumerable(this, predicate)\r\n\t            : Enumerable.prototype.where.call(this, predicate);\r\n\t    };\r\n\t\r\n\t    WhereSelectEnumerable.prototype.select = function (selector) {\r\n\t        selector = Utils.createLambda(selector);\r\n\t\r\n\t        if (selector.length <= 1) {\r\n\t            var prevSelector = this.prevSelector;\r\n\t            var composedSelector = function (x) { return selector(prevSelector(x)); };\r\n\t            return new WhereSelectEnumerable(this.prevSource, this.prevPredicate, composedSelector);\r\n\t        }\r\n\t        else {\r\n\t            // if selector use index, can't compose\r\n\t            return Enumerable.prototype.select.call(this, selector);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    WhereSelectEnumerable.prototype.getEnumerator = function () {\r\n\t        var predicate = this.prevPredicate;\r\n\t        var selector = this.prevSelector;\r\n\t        var source = this.prevSource;\r\n\t        var enumerator;\r\n\t\r\n\t        return new IEnumerator(\r\n\t            function () { enumerator = source.getEnumerator(); },\r\n\t            function () {\r\n\t                while (enumerator.moveNext()) {\r\n\t                    if (predicate == null || predicate(enumerator.current())) {\r\n\t                        return this.yieldReturn(selector(enumerator.current()));\r\n\t                    }\r\n\t                }\r\n\t                return false;\r\n\t            },\r\n\t            function () { Utils.dispose(enumerator); });\r\n\t    };\r\n\t\r\n\t    // Collections\r\n\t\r\n\t    var Dictionary = (function () {\r\n\t        // static utility methods\r\n\t        var callHasOwnProperty = function (target, key) {\r\n\t            return Object.prototype.hasOwnProperty.call(target, key);\r\n\t        };\r\n\t\r\n\t        var computeHashCode = function (obj) {\r\n\t            if (obj === null) return \"null\";\r\n\t            if (obj === undefined) return \"undefined\";\r\n\t\r\n\t            return (typeof obj.toString === Types.Function)\r\n\t                ? obj.toString()\r\n\t                : Object.prototype.toString.call(obj);\r\n\t        };\r\n\t\r\n\t        // LinkedList for Dictionary\r\n\t        var HashEntry = function (key, value) {\r\n\t            this.key = key;\r\n\t            this.value = value;\r\n\t            this.prev = null;\r\n\t            this.next = null;\r\n\t        };\r\n\t\r\n\t        var EntryList = function () {\r\n\t            this.first = null;\r\n\t            this.last = null;\r\n\t        };\r\n\t        EntryList.prototype =\r\n\t        {\r\n\t            addLast: function (entry) {\r\n\t                if (this.last != null) {\r\n\t                    this.last.next = entry;\r\n\t                    entry.prev = this.last;\r\n\t                    this.last = entry;\r\n\t                } else this.first = this.last = entry;\r\n\t            },\r\n\t\r\n\t            replace: function (entry, newEntry) {\r\n\t                if (entry.prev != null) {\r\n\t                    entry.prev.next = newEntry;\r\n\t                    newEntry.prev = entry.prev;\r\n\t                } else this.first = newEntry;\r\n\t\r\n\t                if (entry.next != null) {\r\n\t                    entry.next.prev = newEntry;\r\n\t                    newEntry.next = entry.next;\r\n\t                } else this.last = newEntry;\r\n\t\r\n\t            },\r\n\t\r\n\t            remove: function (entry) {\r\n\t                if (entry.prev != null) entry.prev.next = entry.next;\r\n\t                else this.first = entry.next;\r\n\t\r\n\t                if (entry.next != null) entry.next.prev = entry.prev;\r\n\t                else this.last = entry.prev;\r\n\t            }\r\n\t        };\r\n\t\r\n\t        // Overload:function()\r\n\t        // Overload:function(compareSelector)\r\n\t        var Dictionary = function (compareSelector) {\r\n\t            this.countField = 0;\r\n\t            this.entryList = new EntryList();\r\n\t            this.buckets = {}; // as Dictionary<string,List<object>>\r\n\t            this.compareSelector = (compareSelector == null) ? Functions.Identity : compareSelector;\r\n\t        };\r\n\t        Dictionary.prototype =\r\n\t        {\r\n\t            add: function (key, value) {\r\n\t                var compareKey = this.compareSelector(key);\r\n\t                var hash = computeHashCode(compareKey);\r\n\t                var entry = new HashEntry(key, value);\r\n\t                if (callHasOwnProperty(this.buckets, hash)) {\r\n\t                    var array = this.buckets[hash];\r\n\t                    for (var i = 0; i < array.length; i++) {\r\n\t                        if (this.compareSelector(array[i].key) === compareKey) {\r\n\t                            this.entryList.replace(array[i], entry);\r\n\t                            array[i] = entry;\r\n\t                            return;\r\n\t                        }\r\n\t                    }\r\n\t                    array.push(entry);\r\n\t                } else {\r\n\t                    this.buckets[hash] = [entry];\r\n\t                }\r\n\t                this.countField++;\r\n\t                this.entryList.addLast(entry);\r\n\t            },\r\n\t\r\n\t            get: function (key) {\r\n\t                var compareKey = this.compareSelector(key);\r\n\t                var hash = computeHashCode(compareKey);\r\n\t                if (!callHasOwnProperty(this.buckets, hash)) return undefined;\r\n\t\r\n\t                var array = this.buckets[hash];\r\n\t                for (var i = 0; i < array.length; i++) {\r\n\t                    var entry = array[i];\r\n\t                    if (this.compareSelector(entry.key) === compareKey) return entry.value;\r\n\t                }\r\n\t                return undefined;\r\n\t            },\r\n\t\r\n\t            set: function (key, value) {\r\n\t                var compareKey = this.compareSelector(key);\r\n\t                var hash = computeHashCode(compareKey);\r\n\t                if (callHasOwnProperty(this.buckets, hash)) {\r\n\t                    var array = this.buckets[hash];\r\n\t                    for (var i = 0; i < array.length; i++) {\r\n\t                        if (this.compareSelector(array[i].key) === compareKey) {\r\n\t                            var newEntry = new HashEntry(key, value);\r\n\t                            this.entryList.replace(array[i], newEntry);\r\n\t                            array[i] = newEntry;\r\n\t                            return true;\r\n\t                        }\r\n\t                    }\r\n\t                }\r\n\t                return false;\r\n\t            },\r\n\t\r\n\t            contains: function (key) {\r\n\t                var compareKey = this.compareSelector(key);\r\n\t                var hash = computeHashCode(compareKey);\r\n\t                if (!callHasOwnProperty(this.buckets, hash)) return false;\r\n\t\r\n\t                var array = this.buckets[hash];\r\n\t                for (var i = 0; i < array.length; i++) {\r\n\t                    if (this.compareSelector(array[i].key) === compareKey) return true;\r\n\t                }\r\n\t                return false;\r\n\t            },\r\n\t\r\n\t            clear: function () {\r\n\t                this.countField = 0;\r\n\t                this.buckets = {};\r\n\t                this.entryList = new EntryList();\r\n\t            },\r\n\t\r\n\t            remove: function (key) {\r\n\t                var compareKey = this.compareSelector(key);\r\n\t                var hash = computeHashCode(compareKey);\r\n\t                if (!callHasOwnProperty(this.buckets, hash)) return;\r\n\t\r\n\t                var array = this.buckets[hash];\r\n\t                for (var i = 0; i < array.length; i++) {\r\n\t                    if (this.compareSelector(array[i].key) === compareKey) {\r\n\t                        this.entryList.remove(array[i]);\r\n\t                        array.splice(i, 1);\r\n\t                        if (array.length == 0) delete this.buckets[hash];\r\n\t                        this.countField--;\r\n\t                        return;\r\n\t                    }\r\n\t                }\r\n\t            },\r\n\t\r\n\t            count: function () {\r\n\t                return this.countField;\r\n\t            },\r\n\t\r\n\t            toEnumerable: function () {\r\n\t                var self = this;\r\n\t                return new Enumerable(function () {\r\n\t                    var currentEntry;\r\n\t\r\n\t                    return new IEnumerator(\r\n\t                        function () { currentEntry = self.entryList.first; },\r\n\t                        function () {\r\n\t                            if (currentEntry != null) {\r\n\t                                var result = { key: currentEntry.key, value: currentEntry.value };\r\n\t                                currentEntry = currentEntry.next;\r\n\t                                return this.yieldReturn(result);\r\n\t                            }\r\n\t                            return false;\r\n\t                        },\r\n\t                        Functions.Blank);\r\n\t                });\r\n\t            }\r\n\t        };\r\n\t\r\n\t        return Dictionary;\r\n\t    })();\r\n\t\r\n\t    // dictionary = Dictionary<TKey, TValue[]>\r\n\t    var Lookup = function (dictionary) {\r\n\t        this.count = function () {\r\n\t            return dictionary.count();\r\n\t        };\r\n\t        this.get = function (key) {\r\n\t            return Enumerable.from(dictionary.get(key));\r\n\t        };\r\n\t        this.contains = function (key) {\r\n\t            return dictionary.contains(key);\r\n\t        };\r\n\t        this.toEnumerable = function () {\r\n\t            return dictionary.toEnumerable().select(function (kvp) {\r\n\t                return new Grouping(kvp.key, kvp.value);\r\n\t            });\r\n\t        };\r\n\t    };\r\n\t\r\n\t    var Grouping = function (groupKey, elements) {\r\n\t        this.key = function () {\r\n\t            return groupKey;\r\n\t        };\r\n\t        ArrayEnumerable.call(this, elements);\r\n\t    };\r\n\t    Grouping.prototype = new ArrayEnumerable();\r\n\t\r\n\t    // module export\r\n\t    if (\"function\" === Types.Function && __webpack_require__(93)) { // AMD\r\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () { return Enumerable; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t    }\r\n\t    else if (typeof module !== Types.Undefined && module.exports) { // Node\r\n\t        module.exports = Enumerable;\r\n\t    }\r\n\t    else {\r\n\t        root.Enumerable = Enumerable;\r\n\t    }\r\n\t})(this);\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {\"use strict\"\n\t// Module export pattern from\n\t// https://github.com/umdjs/umd/blob/master/returnExports.js\n\t;(function (root, factory) {\n\t    if (true) {\n\t        // AMD. Register as an anonymous module.\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        // Node. Does not work with strict CommonJS, but\n\t        // only CommonJS-like environments that support module.exports,\n\t        // like Node.\n\t        module.exports = factory();\n\t    } else {\n\t        // Browser globals (root is window)\n\t        root.store = factory();\n\t  }\n\t}(this, function () {\n\t\t\n\t\t// Store.js\n\t\tvar store = {},\n\t\t\twin = (typeof window != 'undefined' ? window : global),\n\t\t\tdoc = win.document,\n\t\t\tlocalStorageName = 'localStorage',\n\t\t\tscriptTag = 'script',\n\t\t\tstorage\n\t\n\t\tstore.disabled = false\n\t\tstore.version = '1.3.20'\n\t\tstore.set = function(key, value) {}\n\t\tstore.get = function(key, defaultVal) {}\n\t\tstore.has = function(key) { return store.get(key) !== undefined }\n\t\tstore.remove = function(key) {}\n\t\tstore.clear = function() {}\n\t\tstore.transact = function(key, defaultVal, transactionFn) {\n\t\t\tif (transactionFn == null) {\n\t\t\t\ttransactionFn = defaultVal\n\t\t\t\tdefaultVal = null\n\t\t\t}\n\t\t\tif (defaultVal == null) {\n\t\t\t\tdefaultVal = {}\n\t\t\t}\n\t\t\tvar val = store.get(key, defaultVal)\n\t\t\ttransactionFn(val)\n\t\t\tstore.set(key, val)\n\t\t}\n\t\tstore.getAll = function() {}\n\t\tstore.forEach = function() {}\n\t\n\t\tstore.serialize = function(value) {\n\t\t\treturn JSON.stringify(value)\n\t\t}\n\t\tstore.deserialize = function(value) {\n\t\t\tif (typeof value != 'string') { return undefined }\n\t\t\ttry { return JSON.parse(value) }\n\t\t\tcatch(e) { return value || undefined }\n\t\t}\n\t\n\t\t// Functions to encapsulate questionable FireFox 3.6.13 behavior\n\t\t// when about.config::dom.storage.enabled === false\n\t\t// See https://github.com/marcuswestin/store.js/issues#issue/13\n\t\tfunction isLocalStorageNameSupported() {\n\t\t\ttry { return (localStorageName in win && win[localStorageName]) }\n\t\t\tcatch(err) { return false }\n\t\t}\n\t\n\t\tif (isLocalStorageNameSupported()) {\n\t\t\tstorage = win[localStorageName]\n\t\t\tstore.set = function(key, val) {\n\t\t\t\tif (val === undefined) { return store.remove(key) }\n\t\t\t\tstorage.setItem(key, store.serialize(val))\n\t\t\t\treturn val\n\t\t\t}\n\t\t\tstore.get = function(key, defaultVal) {\n\t\t\t\tvar val = store.deserialize(storage.getItem(key))\n\t\t\t\treturn (val === undefined ? defaultVal : val)\n\t\t\t}\n\t\t\tstore.remove = function(key) { storage.removeItem(key) }\n\t\t\tstore.clear = function() { storage.clear() }\n\t\t\tstore.getAll = function() {\n\t\t\t\tvar ret = {}\n\t\t\t\tstore.forEach(function(key, val) {\n\t\t\t\t\tret[key] = val\n\t\t\t\t})\n\t\t\t\treturn ret\n\t\t\t}\n\t\t\tstore.forEach = function(callback) {\n\t\t\t\tfor (var i=0; i<storage.length; i++) {\n\t\t\t\t\tvar key = storage.key(i)\n\t\t\t\t\tcallback(key, store.get(key))\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (doc && doc.documentElement.addBehavior) {\n\t\t\tvar storageOwner,\n\t\t\t\tstorageContainer\n\t\t\t// Since #userData storage applies only to specific paths, we need to\n\t\t\t// somehow link our data to a specific path.  We choose /favicon.ico\n\t\t\t// as a pretty safe option, since all browsers already make a request to\n\t\t\t// this URL anyway and being a 404 will not hurt us here.  We wrap an\n\t\t\t// iframe pointing to the favicon in an ActiveXObject(htmlfile) object\n\t\t\t// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)\n\t\t\t// since the iframe access rules appear to allow direct access and\n\t\t\t// manipulation of the document element, even for a 404 page.  This\n\t\t\t// document can be used instead of the current document (which would\n\t\t\t// have been limited to the current path) to perform #userData storage.\n\t\t\ttry {\n\t\t\t\tstorageContainer = new ActiveXObject('htmlfile')\n\t\t\t\tstorageContainer.open()\n\t\t\t\tstorageContainer.write('<'+scriptTag+'>document.w=window</'+scriptTag+'><iframe src=\"/favicon.ico\"></iframe>')\n\t\t\t\tstorageContainer.close()\n\t\t\t\tstorageOwner = storageContainer.w.frames[0].document\n\t\t\t\tstorage = storageOwner.createElement('div')\n\t\t\t} catch(e) {\n\t\t\t\t// somehow ActiveXObject instantiation failed (perhaps some special\n\t\t\t\t// security settings or otherwse), fall back to per-path storage\n\t\t\t\tstorage = doc.createElement('div')\n\t\t\t\tstorageOwner = doc.body\n\t\t\t}\n\t\t\tvar withIEStorage = function(storeFunction) {\n\t\t\t\treturn function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments, 0)\n\t\t\t\t\targs.unshift(storage)\n\t\t\t\t\t// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx\n\t\t\t\t\t// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx\n\t\t\t\t\tstorageOwner.appendChild(storage)\n\t\t\t\t\tstorage.addBehavior('#default#userData')\n\t\t\t\t\tstorage.load(localStorageName)\n\t\t\t\t\tvar result = storeFunction.apply(store, args)\n\t\t\t\t\tstorageOwner.removeChild(storage)\n\t\t\t\t\treturn result\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// In IE7, keys cannot start with a digit or contain certain chars.\n\t\t\t// See https://github.com/marcuswestin/store.js/issues/40\n\t\t\t// See https://github.com/marcuswestin/store.js/issues/83\n\t\t\tvar forbiddenCharsRegex = new RegExp(\"[!\\\"#$%&'()*+,/\\\\\\\\:;<=>?@[\\\\]^`{|}~]\", \"g\")\n\t\t\tvar ieKeyFix = function(key) {\n\t\t\t\treturn key.replace(/^d/, '___$&').replace(forbiddenCharsRegex, '___')\n\t\t\t}\n\t\t\tstore.set = withIEStorage(function(storage, key, val) {\n\t\t\t\tkey = ieKeyFix(key)\n\t\t\t\tif (val === undefined) { return store.remove(key) }\n\t\t\t\tstorage.setAttribute(key, store.serialize(val))\n\t\t\t\tstorage.save(localStorageName)\n\t\t\t\treturn val\n\t\t\t})\n\t\t\tstore.get = withIEStorage(function(storage, key, defaultVal) {\n\t\t\t\tkey = ieKeyFix(key)\n\t\t\t\tvar val = store.deserialize(storage.getAttribute(key))\n\t\t\t\treturn (val === undefined ? defaultVal : val)\n\t\t\t})\n\t\t\tstore.remove = withIEStorage(function(storage, key) {\n\t\t\t\tkey = ieKeyFix(key)\n\t\t\t\tstorage.removeAttribute(key)\n\t\t\t\tstorage.save(localStorageName)\n\t\t\t})\n\t\t\tstore.clear = withIEStorage(function(storage) {\n\t\t\t\tvar attributes = storage.XMLDocument.documentElement.attributes\n\t\t\t\tstorage.load(localStorageName)\n\t\t\t\tfor (var i=attributes.length-1; i>=0; i--) {\n\t\t\t\t\tstorage.removeAttribute(attributes[i].name)\n\t\t\t\t}\n\t\t\t\tstorage.save(localStorageName)\n\t\t\t})\n\t\t\tstore.getAll = function(storage) {\n\t\t\t\tvar ret = {}\n\t\t\t\tstore.forEach(function(key, val) {\n\t\t\t\t\tret[key] = val\n\t\t\t\t})\n\t\t\t\treturn ret\n\t\t\t}\n\t\t\tstore.forEach = withIEStorage(function(storage, callback) {\n\t\t\t\tvar attributes = storage.XMLDocument.documentElement.attributes\n\t\t\t\tfor (var i=0, attr; attr=attributes[i]; ++i) {\n\t\t\t\t\tcallback(attr.name, store.deserialize(storage.getAttribute(attr.name)))\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t\n\t\ttry {\n\t\t\tvar testKey = '__storejs__'\n\t\t\tstore.set(testKey, testKey)\n\t\t\tif (store.get(testKey) != testKey) { store.disabled = true }\n\t\t\tstore.remove(testKey)\n\t\t} catch(e) {\n\t\t\tstore.disabled = true\n\t\t}\n\t\tstore.enabled = !store.disabled\n\t\t\n\t\treturn store\n\t}));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar _products = [{ 'id': 1, 'title': 'iPad 4 Mini', 'price': 500.01, 'inventory': 2 }, { 'id': 2, 'title': 'H&M T-Shirt White', 'price': 10.99, 'inventory': 10 }, { 'id': 3, 'title': 'Charli XCX - Sucker CD', 'price': 19.99, 'inventory': 5 }];\n\t\n\texports.default = {\n\t  getProducts: function getProducts(cb) {\n\t    setTimeout(function () {\n\t      return cb(_products);\n\t    }, 100);\n\t  },\n\t  buyProducts: function buyProducts(products, cb, errorCb) {\n\t    setTimeout(function () {\n\t      Math.random() > 0.5 || navigator.userAgent.indexOf('PhantomJS') > -1 ? cb() : errorCb();\n\t    }, 100);\n\t  }\n\t};\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _assign = __webpack_require__(39);\n\t\n\tvar _assign2 = _interopRequireDefault(_assign);\n\t\n\tvar _linq = __webpack_require__(22);\n\t\n\tvar _linq2 = _interopRequireDefault(_linq);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _tweets = [{ 'id': 1, 'text': 'ここにテキストが入ります', 'date': Date.now() }, { 'id': 2, 'text': 'ここにテキストが入ります', 'date': Date.now() }, { 'id': 3, 'text': 'ここにテキストが入ります', 'date': Date.now() }];\n\t\n\texports.default = {\n\t  stub: [],\n\t  getTimeline: function getTimeline(callback) {\n\t    var _this = this;\n\t\n\t    var isAsync = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\n\t\n\t    if (this.stub.length <= 0) {\n\t      var newStub = _linq2.default.range(0, 200).select(function (i) {\n\t        var t = (0, _assign2.default)({}, _tweets[0]);\n\t        t.id = i;\n\t        t.text = 'デフォルトテキスト: ' + i;\n\t        t.date = Date.now() + i * 1;\n\t        return t;\n\t      }).toArray();\n\t\n\t      this.stub = newStub;\n\t    }\n\t\n\t    if (isAsync) {\n\t      setTimeout(function () {\n\t        return callback(_this.stub);\n\t      }, 100);\n\t    } else {\n\t      callback(this.stub);\n\t    }\n\t  },\n\t  getNewTweet: function getNewTweet(callback, message) {\n\t    var isAsync = arguments.length <= 2 || arguments[2] === undefined ? true : arguments[2];\n\t\n\t    var newTweet = (0, _assign2.default)({}, _tweets[0]);\n\t    newTweet.text = message;\n\t    newTweet.date = Date.now();\n\t\n\t    if (isAsync) {\n\t      setTimeout(function () {\n\t        return callback(newTweet);\n\t      }, 100);\n\t    } else {\n\t      callback(newTweet);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _CartPage = __webpack_require__(86);\n\t\n\tvar _CartPage2 = _interopRequireDefault(_CartPage);\n\t\n\tvar _TimelinePage = __webpack_require__(87);\n\t\n\tvar _TimelinePage2 = _interopRequireDefault(_TimelinePage);\n\t\n\tvar _vue = __webpack_require__(10);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _vueRouter = __webpack_require__(88);\n\t\n\tvar _vueRouter2 = _interopRequireDefault(_vueRouter);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_vue2.default.use(_vueRouter2.default);\n\tvar router = new _vueRouter2.default({\n\t  history: false\n\t});\n\t\n\trouter.map({\n\t  '/': {\n\t    component: _TimelinePage2.default\n\t  },\n\t  '/cart': {\n\t    component: _CartPage2.default\n\t  },\n\t  '/timeline': {\n\t    component: _TimelinePage2.default\n\t  },\n\t  '/timeline/:id': {\n\t    component: _TimelinePage2.default\n\t  }\n\t});\n\t\n\texports.default = router;\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.checkout = undefined;\n\t\n\tvar _toConsumableArray2 = __webpack_require__(41);\n\t\n\tvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\t\n\tvar _shop = __webpack_require__(24);\n\t\n\tvar _shop2 = _interopRequireDefault(_shop);\n\t\n\tvar _mutationTypes = __webpack_require__(3);\n\t\n\tvar types = _interopRequireWildcard(_mutationTypes);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar checkout = exports.checkout = function checkout(_ref, products) {\n\t  var dispatch = _ref.dispatch;\n\t  var state = _ref.state;\n\t\n\t  var savedCartItems = [].concat((0, _toConsumableArray3.default)(state.cart.added));\n\t  dispatch(types.CHECKOUT_REQUEST);\n\t\n\t  _shop2.default.buyProducts(products, function () {\n\t    return dispatch(types.CHECKOUT_SUCCESS);\n\t  }, function () {\n\t    return dispatch(types.CHECKOUT_FAILURE, savedCartItems);\n\t  });\n\t};\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _defineProperty2 = __webpack_require__(5);\n\t\n\tvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\t\n\tvar _mutations;\n\t\n\tvar _mutationTypes = __webpack_require__(3);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = {\n\t  added: [],\n\t  lastCheckout: null\n\t};\n\t\n\tvar mutations = (_mutations = {}, (0, _defineProperty3.default)(_mutations, _mutationTypes.ADD_TO_CART, function (state, productId) {\n\t  state.lastCheckout = null;\n\t  var record = state.added.find(function (p) {\n\t    return p.id === productId;\n\t  });\n\t  if (!record) {\n\t    state.added.push({\n\t      id: productId,\n\t      quantity: 1\n\t    });\n\t  } else {\n\t    record.quantity++;\n\t  }\n\t}), (0, _defineProperty3.default)(_mutations, _mutationTypes.CHECKOUT_REQUEST, function (state) {\n\t  state.added = [];\n\t  state.lastCheckout = null;\n\t}), (0, _defineProperty3.default)(_mutations, _mutationTypes.CHECKOUT_SUCCESS, function (state) {\n\t  state.lastCheckout = 'successful';\n\t}), (0, _defineProperty3.default)(_mutations, _mutationTypes.CHECKOUT_FAILURE, function (state, savedCartItems) {\n\t  state.added = savedCartItems;\n\t  state.lastCheckout = 'failed';\n\t}), _mutations);\n\t\n\texports.default = {\n\t  state: state,\n\t  mutations: mutations\n\t};\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _defineProperty2 = __webpack_require__(5);\n\t\n\tvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\t\n\tvar _mutationTypes = __webpack_require__(3);\n\t\n\tvar _store = __webpack_require__(23);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = function state() {\n\t  return _store2.default.get('vuexstorage');\n\t};\n\t\n\tvar mutations = (0, _defineProperty3.default)({}, _mutationTypes.SAVE_LOCALSTORAGE, function (state, newState) {\n\t  _store2.default.set('vuexstorage', newState);\n\t});\n\t\n\texports.default = {\n\t  state: state,\n\t  mutations: mutations\n\t};\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.removeTweet = exports.addTweet = exports.getTimeline = undefined;\n\t\n\tvar _twitter = __webpack_require__(25);\n\t\n\tvar _twitter2 = _interopRequireDefault(_twitter);\n\t\n\tvar _mutationTypes = __webpack_require__(3);\n\t\n\tvar types = _interopRequireWildcard(_mutationTypes);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar getTimeline = exports.getTimeline = function getTimeline(_ref) {\n\t  var dispatch = _ref.dispatch;\n\t\n\t  _twitter2.default.getTimeline(function (tweets) {\n\t    dispatch(types.RECEIVE_TIMELINE, tweets);\n\t  }, true);\n\t};\n\t\n\tvar addTweet = exports.addTweet = function addTweet(_ref2, text) {\n\t  var dispatch = _ref2.dispatch;\n\t\n\t  _twitter2.default.getNewTweet(function (tweet) {\n\t    dispatch(types.ADD_TWEET, tweet);\n\t  }, text, true);\n\t};\n\t\n\tvar removeTweet = exports.removeTweet = function removeTweet(_ref3, targetTweet) {\n\t  var dispatch = _ref3.dispatch;\n\t\n\t  dispatch(types.REMOVE_TWEET, targetTweet);\n\t};\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _defineProperty2 = __webpack_require__(5);\n\t\n\tvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\t\n\tvar _mutations;\n\t\n\tvar _mutationTypes = __webpack_require__(3);\n\t\n\tvar _linq = __webpack_require__(22);\n\t\n\tvar _linq2 = _interopRequireDefault(_linq);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar state = {\n\t  all: []\n\t};\n\t\n\tvar mutations = (_mutations = {}, (0, _defineProperty3.default)(_mutations, _mutationTypes.RECEIVE_TIMELINE, function (state, tweets) {\n\t  tweets = _linq2.default.from(tweets).select(function (t) {\n\t    t.text = t.text.length < 3 ? Math.round(Math.random() * 10).toString() : t.text;\n\t    return t;\n\t  }).toArray();\n\t  state.all = tweets;\n\t}), (0, _defineProperty3.default)(_mutations, _mutationTypes.ADD_TWEET, function (state, newTweet) {\n\t  state.all.push(newTweet);\n\t}), (0, _defineProperty3.default)(_mutations, _mutationTypes.REMOVE_TWEET, function (state, targetTweet) {\n\t  state.all = state.all.filter(function (t) {\n\t    return t !== targetTweet;\n\t  });\n\t  console.log('state.all.count: ' + state.all.length);\n\t}), _mutations);\n\t\n\texports.default = {\n\t  state: state,\n\t  mutations: mutations\n\t};\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _getters = __webpack_require__(11);\n\t\n\texports.default = {\n\t  vuex: {\n\t    getters: {\n\t      count: _getters.cartCount\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _store = __webpack_require__(23);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: {\n\t    message: {\n\t      type: String,\n\t      default: ''\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      isShow: false };\n\t  },\n\t\n\t  methods: {\n\t    postMessage: function postMessage() {\n\t      this.$dispatch('event-post', this.message);\n\t    },\n\t    saveStubMessage: function saveStubMessage() {\n\t      _store2.default.set('stubMessage', this.message);\n\t    }\n\t  },\n\t  created: function created() {\n\t    var self = this;\n\t    setTimeout(function () {\n\t      self.isShow = true;\n\t    }, 1000);\n\t\n\t    this.message = _store2.default.get('stubMessage');\n\t  }\n\t};\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _dateformat = __webpack_require__(67);\n\t\n\tvar _dateformat2 = _interopRequireDefault(_dateformat);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  props: {\n\t    text: {\n\t      type: String,\n\t      default: 'defalut text'\n\t    },\n\t    date: {\n\t      type: Number\n\t    },\n\t    obj: {\n\t      type: Object\n\t    }\n\t  },\n\t\n\t  computed: {\n\t    dateText: function dateText(x) {\n\t      return (0, _dateformat2.default)(x.date, 'yyyy/mm/dd HH:MM:ss');\n\t    }\n\t  },\n\t  methods: {\n\t    onSwipeRight: function onSwipeRight() {\n\t      console.log('Swipe left !!');\n\t      this.$dispatch('event-remove', this.obj);\n\t    }\n\t  },\n\t  destroyed: function destroyed() {\n\t    console.log('DESTROYED: ' + this.text);\n\t  }\n\t};\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _store = __webpack_require__(12);\n\t\n\tvar _store2 = _interopRequireDefault(_store);\n\t\n\tvar _HeaderBar = __webpack_require__(82);\n\t\n\tvar _HeaderBar2 = _interopRequireDefault(_HeaderBar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  store: _store2.default,\n\t  components: { HeaderBar: _HeaderBar2.default }\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _actions = __webpack_require__(27);\n\t\n\tvar _getters = __webpack_require__(11);\n\t\n\texports.default = {\n\t  vuex: {\n\t    getters: {\n\t      products: _getters.cartProducts,\n\t      checkoutStatus: function checkoutStatus(_ref) {\n\t        var cart = _ref.cart;\n\t        return cart.lastCheckout;\n\t      }\n\t    },\n\t    actions: {\n\t      checkout: _actions.checkout\n\t    }\n\t  },\n\t  computed: {\n\t    total: function total() {\n\t      return this.products.reduce(function (total, p) {\n\t        return total + p.price * p.quantity;\n\t      }, 0);\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _actions = __webpack_require__(30);\n\t\n\tvar _TweetComponent = __webpack_require__(84);\n\t\n\tvar _TweetComponent2 = _interopRequireDefault(_TweetComponent);\n\t\n\tvar _PostMessageComponent = __webpack_require__(83);\n\t\n\tvar _PostMessageComponent2 = _interopRequireDefault(_PostMessageComponent);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    TweetComponent: _TweetComponent2.default,\n\t    PostMessageComponent: _PostMessageComponent2.default\n\t  },\n\t  vuex: {\n\t    getters: {\n\t      tweets: function tweets(_ref) {\n\t        var timeline = _ref.timeline;\n\t        var route = _ref.route;\n\t\n\t        var id = parseInt(route.params.id);\n\t        console.log('id: ' + id);\n\t        return timeline.all;\n\t      }\n\t    },\n\t    actions: {\n\t      getTimeline: _actions.getTimeline,\n\t      addTweet: _actions.addTweet,\n\t      removeTweet: _actions.removeTweet\n\t    }\n\t  },\n\t  created: function created() {\n\t    this.getTimeline();\n\t  },\n\t\n\t  methods: {\n\t    update: function update() {\n\t      this.getTimeline();\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(42), __esModule: true };\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(43), __esModule: true };\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = { \"default\": __webpack_require__(44), __esModule: true };\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\t\n\tvar _from = __webpack_require__(38);\n\t\n\tvar _from2 = _interopRequireDefault(_from);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (arr) {\n\t  if (Array.isArray(arr)) {\n\t    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n\t      arr2[i] = arr[i];\n\t    }\n\t\n\t    return arr2;\n\t  } else {\n\t    return (0, _from2.default)(arr);\n\t  }\n\t};\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(66);\n\t__webpack_require__(64);\n\tmodule.exports = __webpack_require__(4).Array.from;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(65);\n\tmodule.exports = __webpack_require__(4).Object.assign;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar $ = __webpack_require__(2);\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $.setDesc(it, key, desc);\n\t};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar isObject = __webpack_require__(51);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// getting tag from 19.1.3.6 Object.prototype.toString()\n\tvar cof = __webpack_require__(13)\n\t  , TAG = __webpack_require__(1)('toStringTag')\n\t  // ES3 wrong here\n\t  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\t\n\tmodule.exports = function(it){\n\t  var O, T, B;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null'\n\t    // @@toStringTag case\n\t    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n\t    // builtinTag case\n\t    : ARG ? cof(O)\n\t    // ES3 arguments fallback\n\t    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__webpack_require__(16)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __webpack_require__(13);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// check on default Array iterator\n\tvar Iterators  = __webpack_require__(9)\n\t  , ITERATOR   = __webpack_require__(1)('iterator')\n\t  , ArrayProto = Array.prototype;\n\t\n\tmodule.exports = function(it){\n\t  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n\t};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// call something on iterator step with safe closing on error\n\tvar anObject = __webpack_require__(46);\n\tmodule.exports = function(iterator, fn, value, entries){\n\t  try {\n\t    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n\t  // 7.4.6 IteratorClose(iterator, completion)\n\t  } catch(e){\n\t    var ret = iterator['return'];\n\t    if(ret !== undefined)anObject(ret.call(iterator));\n\t    throw e;\n\t  }\n\t};\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $              = __webpack_require__(2)\n\t  , descriptor     = __webpack_require__(18)\n\t  , setToStringTag = __webpack_require__(19)\n\t  , IteratorPrototype = {};\n\t\n\t// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\t__webpack_require__(8)(IteratorPrototype, __webpack_require__(1)('iterator'), function(){ return this; });\n\t\n\tmodule.exports = function(Constructor, NAME, next){\n\t  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n\t  setToStringTag(Constructor, NAME + ' Iterator');\n\t};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar LIBRARY        = __webpack_require__(56)\n\t  , $export        = __webpack_require__(6)\n\t  , redefine       = __webpack_require__(58)\n\t  , hide           = __webpack_require__(8)\n\t  , has            = __webpack_require__(17)\n\t  , Iterators      = __webpack_require__(9)\n\t  , $iterCreate    = __webpack_require__(53)\n\t  , setToStringTag = __webpack_require__(19)\n\t  , getProto       = __webpack_require__(2).getProto\n\t  , ITERATOR       = __webpack_require__(1)('iterator')\n\t  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n\t  , FF_ITERATOR    = '@@iterator'\n\t  , KEYS           = 'keys'\n\t  , VALUES         = 'values';\n\t\n\tvar returnThis = function(){ return this; };\n\t\n\tmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n\t  $iterCreate(Constructor, NAME, next);\n\t  var getMethod = function(kind){\n\t    if(!BUGGY && kind in proto)return proto[kind];\n\t    switch(kind){\n\t      case KEYS: return function keys(){ return new Constructor(this, kind); };\n\t      case VALUES: return function values(){ return new Constructor(this, kind); };\n\t    } return function entries(){ return new Constructor(this, kind); };\n\t  };\n\t  var TAG        = NAME + ' Iterator'\n\t    , DEF_VALUES = DEFAULT == VALUES\n\t    , VALUES_BUG = false\n\t    , proto      = Base.prototype\n\t    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n\t    , $default   = $native || getMethod(DEFAULT)\n\t    , methods, key;\n\t  // Fix native\n\t  if($native){\n\t    var IteratorPrototype = getProto($default.call(new Base));\n\t    // Set @@toStringTag to native iterators\n\t    setToStringTag(IteratorPrototype, TAG, true);\n\t    // FF fix\n\t    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n\t    // fix Array#{values, @@iterator}.name in V8 / FF\n\t    if(DEF_VALUES && $native.name !== VALUES){\n\t      VALUES_BUG = true;\n\t      $default = function values(){ return $native.call(this); };\n\t    }\n\t  }\n\t  // Define iterator\n\t  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n\t    hide(proto, ITERATOR, $default);\n\t  }\n\t  // Plug for library\n\t  Iterators[NAME] = $default;\n\t  Iterators[TAG]  = returnThis;\n\t  if(DEFAULT){\n\t    methods = {\n\t      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n\t      keys:    IS_SET      ? $default : getMethod(KEYS),\n\t      entries: !DEF_VALUES ? $default : getMethod('entries')\n\t    };\n\t    if(FORCED)for(key in methods){\n\t      if(!(key in proto))redefine(proto, key, methods[key]);\n\t    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n\t  }\n\t  return methods;\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar ITERATOR     = __webpack_require__(1)('iterator')\n\t  , SAFE_CLOSING = false;\n\t\n\ttry {\n\t  var riter = [7][ITERATOR]();\n\t  riter['return'] = function(){ SAFE_CLOSING = true; };\n\t  Array.from(riter, function(){ throw 2; });\n\t} catch(e){ /* empty */ }\n\t\n\tmodule.exports = function(exec, skipClosing){\n\t  if(!skipClosing && !SAFE_CLOSING)return false;\n\t  var safe = false;\n\t  try {\n\t    var arr  = [7]\n\t      , iter = arr[ITERATOR]();\n\t    iter.next = function(){ return {done: safe = true}; };\n\t    arr[ITERATOR] = function(){ return iter; };\n\t    exec(arr);\n\t  } catch(e){ /* empty */ }\n\t  return safe;\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\tmodule.exports = true;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.2.1 Object.assign(target, source, ...)\n\tvar $        = __webpack_require__(2)\n\t  , toObject = __webpack_require__(21)\n\t  , IObject  = __webpack_require__(49);\n\t\n\t// should work with symbols and should have deterministic property order (V8 bug)\n\tmodule.exports = __webpack_require__(16)(function(){\n\t  var a = Object.assign\n\t    , A = {}\n\t    , B = {}\n\t    , S = Symbol()\n\t    , K = 'abcdefghijklmnopqrst';\n\t  A[S] = 7;\n\t  K.split('').forEach(function(k){ B[k] = k; });\n\t  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n\t}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n\t  var T     = toObject(target)\n\t    , $$    = arguments\n\t    , $$len = $$.length\n\t    , index = 1\n\t    , getKeys    = $.getKeys\n\t    , getSymbols = $.getSymbols\n\t    , isEnum     = $.isEnum;\n\t  while($$len > index){\n\t    var S      = IObject($$[index++])\n\t      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n\t      , length = keys.length\n\t      , j      = 0\n\t      , key;\n\t    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n\t  }\n\t  return T;\n\t} : Object.assign;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(8);\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar global = __webpack_require__(7)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar toInteger = __webpack_require__(20)\n\t  , defined   = __webpack_require__(15);\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tmodule.exports = function(TO_STRING){\n\t  return function(that, pos){\n\t    var s = String(defined(that))\n\t      , i = toInteger(pos)\n\t      , l = s.length\n\t      , a, b;\n\t    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 7.1.15 ToLength\n\tvar toInteger = __webpack_require__(20)\n\t  , min       = Math.min;\n\tmodule.exports = function(it){\n\t  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n\t};\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar classof   = __webpack_require__(47)\n\t  , ITERATOR  = __webpack_require__(1)('iterator')\n\t  , Iterators = __webpack_require__(9);\n\tmodule.exports = __webpack_require__(4).getIteratorMethod = function(it){\n\t  if(it != undefined)return it[ITERATOR]\n\t    || it['@@iterator']\n\t    || Iterators[classof(it)];\n\t};\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar ctx         = __webpack_require__(14)\n\t  , $export     = __webpack_require__(6)\n\t  , toObject    = __webpack_require__(21)\n\t  , call        = __webpack_require__(52)\n\t  , isArrayIter = __webpack_require__(50)\n\t  , toLength    = __webpack_require__(61)\n\t  , getIterFn   = __webpack_require__(63);\n\t$export($export.S + $export.F * !__webpack_require__(55)(function(iter){ Array.from(iter); }), 'Array', {\n\t  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n\t  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n\t    var O       = toObject(arrayLike)\n\t      , C       = typeof this == 'function' ? this : Array\n\t      , $$      = arguments\n\t      , $$len   = $$.length\n\t      , mapfn   = $$len > 1 ? $$[1] : undefined\n\t      , mapping = mapfn !== undefined\n\t      , index   = 0\n\t      , iterFn  = getIterFn(O)\n\t      , length, result, step, iterator;\n\t    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);\n\t    // if object isn't iterable or it's array with default iterator - use simple case\n\t    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n\t      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n\t        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;\n\t      }\n\t    } else {\n\t      length = toLength(O.length);\n\t      for(result = new C(length); length > index; index++){\n\t        result[index] = mapping ? mapfn(O[index], index) : O[index];\n\t      }\n\t    }\n\t    result.length = index;\n\t    return result;\n\t  }\n\t});\n\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// 19.1.3.1 Object.assign(target, source)\n\tvar $export = __webpack_require__(6);\n\t\n\t$export($export.S + $export.F, 'Object', {assign: __webpack_require__(57)});\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar $at  = __webpack_require__(60)(true);\n\t\n\t// 21.1.3.27 String.prototype[@@iterator]()\n\t__webpack_require__(54)(String, 'String', function(iterated){\n\t  this._t = String(iterated); // target\n\t  this._i = 0;                // next index\n\t// 21.1.5.2.1 %StringIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , index = this._i\n\t    , point;\n\t  if(index >= O.length)return {value: undefined, done: true};\n\t  point = $at(O, index);\n\t  this._i += point.length;\n\t  return {value: point, done: false};\n\t});\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*\n\t * Date Format 1.2.3\n\t * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n\t * MIT license\n\t *\n\t * Includes enhancements by Scott Trenda <scott.trenda.net>\n\t * and Kris Kowal <cixar.com/~kris.kowal/>\n\t *\n\t * Accepts a date, a mask, or a date and a mask.\n\t * Returns a formatted version of the given date.\n\t * The date defaults to the current date/time.\n\t * The mask defaults to dateFormat.masks.default.\n\t */\n\t\n\t(function(global) {\n\t  'use strict';\n\t\n\t  var dateFormat = (function() {\n\t      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|'[^']*'|'[^']*'/g;\n\t      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n\t      var timezoneClip = /[^-+\\dA-Z]/g;\n\t  \n\t      // Regexes and supporting functions are cached through closure\n\t      return function (date, mask, utc, gmt) {\n\t  \n\t        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n\t        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n\t          mask = date;\n\t          date = undefined;\n\t        }\n\t  \n\t        date = date || new Date;\n\t  \n\t        if(!(date instanceof Date)) {\n\t          date = new Date(date);\n\t        }\n\t  \n\t        if (isNaN(date)) {\n\t          throw TypeError('Invalid date');\n\t        }\n\t  \n\t        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\t  \n\t        // Allow setting the utc/gmt argument via the mask\n\t        var maskSlice = mask.slice(0, 4);\n\t        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n\t          mask = mask.slice(4);\n\t          utc = true;\n\t          if (maskSlice === 'GMT:') {\n\t            gmt = true;\n\t          }\n\t        }\n\t  \n\t        var _ = utc ? 'getUTC' : 'get';\n\t        var d = date[_ + 'Date']();\n\t        var D = date[_ + 'Day']();\n\t        var m = date[_ + 'Month']();\n\t        var y = date[_ + 'FullYear']();\n\t        var H = date[_ + 'Hours']();\n\t        var M = date[_ + 'Minutes']();\n\t        var s = date[_ + 'Seconds']();\n\t        var L = date[_ + 'Milliseconds']();\n\t        var o = utc ? 0 : date.getTimezoneOffset();\n\t        var W = getWeek(date);\n\t        var N = getDayOfWeek(date);\n\t        var flags = {\n\t          d:    d,\n\t          dd:   pad(d),\n\t          ddd:  dateFormat.i18n.dayNames[D],\n\t          dddd: dateFormat.i18n.dayNames[D + 7],\n\t          m:    m + 1,\n\t          mm:   pad(m + 1),\n\t          mmm:  dateFormat.i18n.monthNames[m],\n\t          mmmm: dateFormat.i18n.monthNames[m + 12],\n\t          yy:   String(y).slice(2),\n\t          yyyy: y,\n\t          h:    H % 12 || 12,\n\t          hh:   pad(H % 12 || 12),\n\t          H:    H,\n\t          HH:   pad(H),\n\t          M:    M,\n\t          MM:   pad(M),\n\t          s:    s,\n\t          ss:   pad(s),\n\t          l:    pad(L, 3),\n\t          L:    pad(Math.round(L / 10)),\n\t          t:    H < 12 ? 'a'  : 'p',\n\t          tt:   H < 12 ? 'am' : 'pm',\n\t          T:    H < 12 ? 'A'  : 'P',\n\t          TT:   H < 12 ? 'AM' : 'PM',\n\t          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n\t          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n\t          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n\t          W:    W,\n\t          N:    N\n\t        };\n\t  \n\t        return mask.replace(token, function (match) {\n\t          if (match in flags) {\n\t            return flags[match];\n\t          }\n\t          return match.slice(1, match.length - 1);\n\t        });\n\t      };\n\t    })();\n\t\n\t  dateFormat.masks = {\n\t    'default':               'ddd mmm dd yyyy HH:MM:ss',\n\t    'shortDate':             'm/d/yy',\n\t    'mediumDate':            'mmm d, yyyy',\n\t    'longDate':              'mmmm d, yyyy',\n\t    'fullDate':              'dddd, mmmm d, yyyy',\n\t    'shortTime':             'h:MM TT',\n\t    'mediumTime':            'h:MM:ss TT',\n\t    'longTime':              'h:MM:ss TT Z',\n\t    'isoDate':               'yyyy-mm-dd',\n\t    'isoTime':               'HH:MM:ss',\n\t    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n\t    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n\t    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n\t  };\n\t\n\t  // Internationalization strings\n\t  dateFormat.i18n = {\n\t    dayNames: [\n\t      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n\t      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n\t    ],\n\t    monthNames: [\n\t      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n\t      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n\t    ]\n\t  };\n\t\n\tfunction pad(val, len) {\n\t  val = String(val);\n\t  len = len || 2;\n\t  while (val.length < len) {\n\t    val = '0' + val;\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get the ISO 8601 week number\n\t * Based on comments from\n\t * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n\t *\n\t * @param  {Object} `date`\n\t * @return {Number}\n\t */\n\tfunction getWeek(date) {\n\t  // Remove time components of date\n\t  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\t\n\t  // Change date to Thursday same week\n\t  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\t\n\t  // Take January 4th as it is always in week 1 (see ISO 8601)\n\t  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\t\n\t  // Change date to Thursday same week\n\t  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\t\n\t  // Check if daylight-saving-time-switch occured and correct for it\n\t  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n\t  targetThursday.setHours(targetThursday.getHours() - ds);\n\t\n\t  // Number of weeks between target Thursday and first Thursday\n\t  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n\t  return 1 + Math.floor(weekDiff);\n\t}\n\t\n\t/**\n\t * Get ISO-8601 numeric representation of the day of the week\n\t * 1 (for Monday) through 7 (for Sunday)\n\t * \n\t * @param  {Object} `date`\n\t * @return {Number}\n\t */\n\tfunction getDayOfWeek(date) {\n\t  var dow = date.getDay();\n\t  if(dow === 0) {\n\t    dow = 7;\n\t  }\n\t  return dow;\n\t}\n\t\n\t/**\n\t * kind-of shortcut\n\t * @param  {*} val\n\t * @return {String}\n\t */\n\tfunction kindOf(val) {\n\t  if (val === null) {\n\t    return 'null';\n\t  }\n\t\n\t  if (val === undefined) {\n\t    return 'undefined';\n\t  }\n\t\n\t  if (typeof val !== 'object') {\n\t    return typeof val;\n\t  }\n\t\n\t  if (Array.isArray(val)) {\n\t    return 'array';\n\t  }\n\t\n\t  return {}.toString.call(val)\n\t    .slice(8, -1).toLowerCase();\n\t};\n\t\n\t\n\t\n\t  if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t      return dateFormat;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  } else if (typeof exports === 'object') {\n\t    module.exports = dateFormat;\n\t  } else {\n\t    global.dateFormat = dateFormat;\n\t  }\n\t})(this);\n\n\n/***/ },\n/* 68 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 69 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 70 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 71 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 72 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 73 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n\t * http://hammerjs.github.io/\n\t *\n\t * Copyright (c) 2016 Jorik Tangelder;\n\t * Licensed under the MIT license */\n\t(function(window, document, exportName, undefined) {\n\t  'use strict';\n\t\n\tvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n\tvar TEST_ELEMENT = document.createElement('div');\n\t\n\tvar TYPE_FUNCTION = 'function';\n\t\n\tvar round = Math.round;\n\tvar abs = Math.abs;\n\tvar now = Date.now;\n\t\n\t/**\n\t * set a timeout with a given scope\n\t * @param {Function} fn\n\t * @param {Number} timeout\n\t * @param {Object} context\n\t * @returns {number}\n\t */\n\tfunction setTimeoutContext(fn, timeout, context) {\n\t    return setTimeout(bindFn(fn, context), timeout);\n\t}\n\t\n\t/**\n\t * if the argument is an array, we want to execute the fn on each entry\n\t * if it aint an array we don't want to do a thing.\n\t * this is used by all the methods that accept a single and array argument.\n\t * @param {*|Array} arg\n\t * @param {String} fn\n\t * @param {Object} [context]\n\t * @returns {Boolean}\n\t */\n\tfunction invokeArrayArg(arg, fn, context) {\n\t    if (Array.isArray(arg)) {\n\t        each(arg, context[fn], context);\n\t        return true;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * walk objects and arrays\n\t * @param {Object} obj\n\t * @param {Function} iterator\n\t * @param {Object} context\n\t */\n\tfunction each(obj, iterator, context) {\n\t    var i;\n\t\n\t    if (!obj) {\n\t        return;\n\t    }\n\t\n\t    if (obj.forEach) {\n\t        obj.forEach(iterator, context);\n\t    } else if (obj.length !== undefined) {\n\t        i = 0;\n\t        while (i < obj.length) {\n\t            iterator.call(context, obj[i], i, obj);\n\t            i++;\n\t        }\n\t    } else {\n\t        for (i in obj) {\n\t            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n\t        }\n\t    }\n\t}\n\t\n\t/**\n\t * wrap a method with a deprecation warning and stack trace\n\t * @param {Function} method\n\t * @param {String} name\n\t * @param {String} message\n\t * @returns {Function} A new function wrapping the supplied method.\n\t */\n\tfunction deprecate(method, name, message) {\n\t    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n\t    return function() {\n\t        var e = new Error('get-stack-trace');\n\t        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n\t            .replace(/^\\s+at\\s+/gm, '')\n\t            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\t\n\t        var log = window.console && (window.console.warn || window.console.log);\n\t        if (log) {\n\t            log.call(window.console, deprecationMessage, stack);\n\t        }\n\t        return method.apply(this, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} target\n\t * @param {...Object} objects_to_assign\n\t * @returns {Object} target\n\t */\n\tvar assign;\n\tif (typeof Object.assign !== 'function') {\n\t    assign = function assign(target) {\n\t        if (target === undefined || target === null) {\n\t            throw new TypeError('Cannot convert undefined or null to object');\n\t        }\n\t\n\t        var output = Object(target);\n\t        for (var index = 1; index < arguments.length; index++) {\n\t            var source = arguments[index];\n\t            if (source !== undefined && source !== null) {\n\t                for (var nextKey in source) {\n\t                    if (source.hasOwnProperty(nextKey)) {\n\t                        output[nextKey] = source[nextKey];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return output;\n\t    };\n\t} else {\n\t    assign = Object.assign;\n\t}\n\t\n\t/**\n\t * extend object.\n\t * means that properties in dest will be overwritten by the ones in src.\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @param {Boolean} [merge=false]\n\t * @returns {Object} dest\n\t */\n\tvar extend = deprecate(function extend(dest, src, merge) {\n\t    var keys = Object.keys(src);\n\t    var i = 0;\n\t    while (i < keys.length) {\n\t        if (!merge || (merge && dest[keys[i]] === undefined)) {\n\t            dest[keys[i]] = src[keys[i]];\n\t        }\n\t        i++;\n\t    }\n\t    return dest;\n\t}, 'extend', 'Use `assign`.');\n\t\n\t/**\n\t * merge the values from src in the dest.\n\t * means that properties that exist in dest will not be overwritten by src\n\t * @param {Object} dest\n\t * @param {Object} src\n\t * @returns {Object} dest\n\t */\n\tvar merge = deprecate(function merge(dest, src) {\n\t    return extend(dest, src, true);\n\t}, 'merge', 'Use `assign`.');\n\t\n\t/**\n\t * simple class inheritance\n\t * @param {Function} child\n\t * @param {Function} base\n\t * @param {Object} [properties]\n\t */\n\tfunction inherit(child, base, properties) {\n\t    var baseP = base.prototype,\n\t        childP;\n\t\n\t    childP = child.prototype = Object.create(baseP);\n\t    childP.constructor = child;\n\t    childP._super = baseP;\n\t\n\t    if (properties) {\n\t        assign(childP, properties);\n\t    }\n\t}\n\t\n\t/**\n\t * simple function bind\n\t * @param {Function} fn\n\t * @param {Object} context\n\t * @returns {Function}\n\t */\n\tfunction bindFn(fn, context) {\n\t    return function boundFn() {\n\t        return fn.apply(context, arguments);\n\t    };\n\t}\n\t\n\t/**\n\t * let a boolean value also be a function that must return a boolean\n\t * this first item in args will be used as the context\n\t * @param {Boolean|Function} val\n\t * @param {Array} [args]\n\t * @returns {Boolean}\n\t */\n\tfunction boolOrFn(val, args) {\n\t    if (typeof val == TYPE_FUNCTION) {\n\t        return val.apply(args ? args[0] || undefined : undefined, args);\n\t    }\n\t    return val;\n\t}\n\t\n\t/**\n\t * use the val2 when val1 is undefined\n\t * @param {*} val1\n\t * @param {*} val2\n\t * @returns {*}\n\t */\n\tfunction ifUndefined(val1, val2) {\n\t    return (val1 === undefined) ? val2 : val1;\n\t}\n\t\n\t/**\n\t * addEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction addEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.addEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * removeEventListener with multiple events at once\n\t * @param {EventTarget} target\n\t * @param {String} types\n\t * @param {Function} handler\n\t */\n\tfunction removeEventListeners(target, types, handler) {\n\t    each(splitStr(types), function(type) {\n\t        target.removeEventListener(type, handler, false);\n\t    });\n\t}\n\t\n\t/**\n\t * find if a node is in the given parent\n\t * @method hasParent\n\t * @param {HTMLElement} node\n\t * @param {HTMLElement} parent\n\t * @return {Boolean} found\n\t */\n\tfunction hasParent(node, parent) {\n\t    while (node) {\n\t        if (node == parent) {\n\t            return true;\n\t        }\n\t        node = node.parentNode;\n\t    }\n\t    return false;\n\t}\n\t\n\t/**\n\t * small indexOf wrapper\n\t * @param {String} str\n\t * @param {String} find\n\t * @returns {Boolean} found\n\t */\n\tfunction inStr(str, find) {\n\t    return str.indexOf(find) > -1;\n\t}\n\t\n\t/**\n\t * split string on whitespace\n\t * @param {String} str\n\t * @returns {Array} words\n\t */\n\tfunction splitStr(str) {\n\t    return str.trim().split(/\\s+/g);\n\t}\n\t\n\t/**\n\t * find if a array contains the object using indexOf or a simple polyFill\n\t * @param {Array} src\n\t * @param {String} find\n\t * @param {String} [findByKey]\n\t * @return {Boolean|Number} false when not found, or the index\n\t */\n\tfunction inArray(src, find, findByKey) {\n\t    if (src.indexOf && !findByKey) {\n\t        return src.indexOf(find);\n\t    } else {\n\t        var i = 0;\n\t        while (i < src.length) {\n\t            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n\t                return i;\n\t            }\n\t            i++;\n\t        }\n\t        return -1;\n\t    }\n\t}\n\t\n\t/**\n\t * convert array-like objects to real arrays\n\t * @param {Object} obj\n\t * @returns {Array}\n\t */\n\tfunction toArray(obj) {\n\t    return Array.prototype.slice.call(obj, 0);\n\t}\n\t\n\t/**\n\t * unique array with objects based on a key (like 'id') or just by the array's value\n\t * @param {Array} src [{id:1},{id:2},{id:1}]\n\t * @param {String} [key]\n\t * @param {Boolean} [sort=False]\n\t * @returns {Array} [{id:1},{id:2}]\n\t */\n\tfunction uniqueArray(src, key, sort) {\n\t    var results = [];\n\t    var values = [];\n\t    var i = 0;\n\t\n\t    while (i < src.length) {\n\t        var val = key ? src[i][key] : src[i];\n\t        if (inArray(values, val) < 0) {\n\t            results.push(src[i]);\n\t        }\n\t        values[i] = val;\n\t        i++;\n\t    }\n\t\n\t    if (sort) {\n\t        if (!key) {\n\t            results = results.sort();\n\t        } else {\n\t            results = results.sort(function sortUniqueArray(a, b) {\n\t                return a[key] > b[key];\n\t            });\n\t        }\n\t    }\n\t\n\t    return results;\n\t}\n\t\n\t/**\n\t * get the prefixed property\n\t * @param {Object} obj\n\t * @param {String} property\n\t * @returns {String|Undefined} prefixed\n\t */\n\tfunction prefixed(obj, property) {\n\t    var prefix, prop;\n\t    var camelProp = property[0].toUpperCase() + property.slice(1);\n\t\n\t    var i = 0;\n\t    while (i < VENDOR_PREFIXES.length) {\n\t        prefix = VENDOR_PREFIXES[i];\n\t        prop = (prefix) ? prefix + camelProp : property;\n\t\n\t        if (prop in obj) {\n\t            return prop;\n\t        }\n\t        i++;\n\t    }\n\t    return undefined;\n\t}\n\t\n\t/**\n\t * get a unique id\n\t * @returns {number} uniqueId\n\t */\n\tvar _uniqueId = 1;\n\tfunction uniqueId() {\n\t    return _uniqueId++;\n\t}\n\t\n\t/**\n\t * get the window object of an element\n\t * @param {HTMLElement} element\n\t * @returns {DocumentView|Window}\n\t */\n\tfunction getWindowForElement(element) {\n\t    var doc = element.ownerDocument || element;\n\t    return (doc.defaultView || doc.parentWindow || window);\n\t}\n\t\n\tvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\t\n\tvar SUPPORT_TOUCH = ('ontouchstart' in window);\n\tvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n\tvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\t\n\tvar INPUT_TYPE_TOUCH = 'touch';\n\tvar INPUT_TYPE_PEN = 'pen';\n\tvar INPUT_TYPE_MOUSE = 'mouse';\n\tvar INPUT_TYPE_KINECT = 'kinect';\n\t\n\tvar COMPUTE_INTERVAL = 25;\n\t\n\tvar INPUT_START = 1;\n\tvar INPUT_MOVE = 2;\n\tvar INPUT_END = 4;\n\tvar INPUT_CANCEL = 8;\n\t\n\tvar DIRECTION_NONE = 1;\n\tvar DIRECTION_LEFT = 2;\n\tvar DIRECTION_RIGHT = 4;\n\tvar DIRECTION_UP = 8;\n\tvar DIRECTION_DOWN = 16;\n\t\n\tvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n\tvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n\tvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\t\n\tvar PROPS_XY = ['x', 'y'];\n\tvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\t\n\t/**\n\t * create new input type manager\n\t * @param {Manager} manager\n\t * @param {Function} callback\n\t * @returns {Input}\n\t * @constructor\n\t */\n\tfunction Input(manager, callback) {\n\t    var self = this;\n\t    this.manager = manager;\n\t    this.callback = callback;\n\t    this.element = manager.element;\n\t    this.target = manager.options.inputTarget;\n\t\n\t    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n\t    // so when disabled the input events are completely bypassed.\n\t    this.domHandler = function(ev) {\n\t        if (boolOrFn(manager.options.enable, [manager])) {\n\t            self.handler(ev);\n\t        }\n\t    };\n\t\n\t    this.init();\n\t\n\t}\n\t\n\tInput.prototype = {\n\t    /**\n\t     * should handle the inputEvent data and trigger the callback\n\t     * @virtual\n\t     */\n\t    handler: function() { },\n\t\n\t    /**\n\t     * bind the events\n\t     */\n\t    init: function() {\n\t        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    },\n\t\n\t    /**\n\t     * unbind the events\n\t     */\n\t    destroy: function() {\n\t        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n\t        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n\t        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n\t    }\n\t};\n\t\n\t/**\n\t * create new input type manager\n\t * called by the Manager constructor\n\t * @param {Hammer} manager\n\t * @returns {Input}\n\t */\n\tfunction createInputInstance(manager) {\n\t    var Type;\n\t    var inputClass = manager.options.inputClass;\n\t\n\t    if (inputClass) {\n\t        Type = inputClass;\n\t    } else if (SUPPORT_POINTER_EVENTS) {\n\t        Type = PointerEventInput;\n\t    } else if (SUPPORT_ONLY_TOUCH) {\n\t        Type = TouchInput;\n\t    } else if (!SUPPORT_TOUCH) {\n\t        Type = MouseInput;\n\t    } else {\n\t        Type = TouchMouseInput;\n\t    }\n\t    return new (Type)(manager, inputHandler);\n\t}\n\t\n\t/**\n\t * handle input events\n\t * @param {Manager} manager\n\t * @param {String} eventType\n\t * @param {Object} input\n\t */\n\tfunction inputHandler(manager, eventType, input) {\n\t    var pointersLen = input.pointers.length;\n\t    var changedPointersLen = input.changedPointers.length;\n\t    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n\t    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\t\n\t    input.isFirst = !!isFirst;\n\t    input.isFinal = !!isFinal;\n\t\n\t    if (isFirst) {\n\t        manager.session = {};\n\t    }\n\t\n\t    // source event is the normalized value of the domEvents\n\t    // like 'touchstart, mouseup, pointerdown'\n\t    input.eventType = eventType;\n\t\n\t    // compute scale, rotation etc\n\t    computeInputData(manager, input);\n\t\n\t    // emit secret event\n\t    manager.emit('hammer.input', input);\n\t\n\t    manager.recognize(input);\n\t    manager.session.prevInput = input;\n\t}\n\t\n\t/**\n\t * extend the data with some usable properties like scale, rotate, velocity etc\n\t * @param {Object} manager\n\t * @param {Object} input\n\t */\n\tfunction computeInputData(manager, input) {\n\t    var session = manager.session;\n\t    var pointers = input.pointers;\n\t    var pointersLength = pointers.length;\n\t\n\t    // store the first input to calculate the distance and direction\n\t    if (!session.firstInput) {\n\t        session.firstInput = simpleCloneInputData(input);\n\t    }\n\t\n\t    // to compute scale and rotation we need to store the multiple touches\n\t    if (pointersLength > 1 && !session.firstMultiple) {\n\t        session.firstMultiple = simpleCloneInputData(input);\n\t    } else if (pointersLength === 1) {\n\t        session.firstMultiple = false;\n\t    }\n\t\n\t    var firstInput = session.firstInput;\n\t    var firstMultiple = session.firstMultiple;\n\t    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\t\n\t    var center = input.center = getCenter(pointers);\n\t    input.timeStamp = now();\n\t    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\t\n\t    input.angle = getAngle(offsetCenter, center);\n\t    input.distance = getDistance(offsetCenter, center);\n\t\n\t    computeDeltaXY(session, input);\n\t    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\t\n\t    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n\t    input.overallVelocityX = overallVelocity.x;\n\t    input.overallVelocityY = overallVelocity.y;\n\t    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\t\n\t    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n\t    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\t\n\t    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n\t        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\t\n\t    computeIntervalInputData(session, input);\n\t\n\t    // find the correct target\n\t    var target = manager.element;\n\t    if (hasParent(input.srcEvent.target, target)) {\n\t        target = input.srcEvent.target;\n\t    }\n\t    input.target = target;\n\t}\n\t\n\tfunction computeDeltaXY(session, input) {\n\t    var center = input.center;\n\t    var offset = session.offsetDelta || {};\n\t    var prevDelta = session.prevDelta || {};\n\t    var prevInput = session.prevInput || {};\n\t\n\t    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n\t        prevDelta = session.prevDelta = {\n\t            x: prevInput.deltaX || 0,\n\t            y: prevInput.deltaY || 0\n\t        };\n\t\n\t        offset = session.offsetDelta = {\n\t            x: center.x,\n\t            y: center.y\n\t        };\n\t    }\n\t\n\t    input.deltaX = prevDelta.x + (center.x - offset.x);\n\t    input.deltaY = prevDelta.y + (center.y - offset.y);\n\t}\n\t\n\t/**\n\t * velocity is calculated every x ms\n\t * @param {Object} session\n\t * @param {Object} input\n\t */\n\tfunction computeIntervalInputData(session, input) {\n\t    var last = session.lastInterval || input,\n\t        deltaTime = input.timeStamp - last.timeStamp,\n\t        velocity, velocityX, velocityY, direction;\n\t\n\t    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n\t        var deltaX = input.deltaX - last.deltaX;\n\t        var deltaY = input.deltaY - last.deltaY;\n\t\n\t        var v = getVelocity(deltaTime, deltaX, deltaY);\n\t        velocityX = v.x;\n\t        velocityY = v.y;\n\t        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n\t        direction = getDirection(deltaX, deltaY);\n\t\n\t        session.lastInterval = input;\n\t    } else {\n\t        // use latest velocity info if it doesn't overtake a minimum period\n\t        velocity = last.velocity;\n\t        velocityX = last.velocityX;\n\t        velocityY = last.velocityY;\n\t        direction = last.direction;\n\t    }\n\t\n\t    input.velocity = velocity;\n\t    input.velocityX = velocityX;\n\t    input.velocityY = velocityY;\n\t    input.direction = direction;\n\t}\n\t\n\t/**\n\t * create a simple clone from the input used for storage of firstInput and firstMultiple\n\t * @param {Object} input\n\t * @returns {Object} clonedInputData\n\t */\n\tfunction simpleCloneInputData(input) {\n\t    // make a simple copy of the pointers because we will get a reference if we don't\n\t    // we only need clientXY for the calculations\n\t    var pointers = [];\n\t    var i = 0;\n\t    while (i < input.pointers.length) {\n\t        pointers[i] = {\n\t            clientX: round(input.pointers[i].clientX),\n\t            clientY: round(input.pointers[i].clientY)\n\t        };\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        timeStamp: now(),\n\t        pointers: pointers,\n\t        center: getCenter(pointers),\n\t        deltaX: input.deltaX,\n\t        deltaY: input.deltaY\n\t    };\n\t}\n\t\n\t/**\n\t * get the center of all the pointers\n\t * @param {Array} pointers\n\t * @return {Object} center contains `x` and `y` properties\n\t */\n\tfunction getCenter(pointers) {\n\t    var pointersLength = pointers.length;\n\t\n\t    // no need to loop when only one touch\n\t    if (pointersLength === 1) {\n\t        return {\n\t            x: round(pointers[0].clientX),\n\t            y: round(pointers[0].clientY)\n\t        };\n\t    }\n\t\n\t    var x = 0, y = 0, i = 0;\n\t    while (i < pointersLength) {\n\t        x += pointers[i].clientX;\n\t        y += pointers[i].clientY;\n\t        i++;\n\t    }\n\t\n\t    return {\n\t        x: round(x / pointersLength),\n\t        y: round(y / pointersLength)\n\t    };\n\t}\n\t\n\t/**\n\t * calculate the velocity between two points. unit is in px per ms.\n\t * @param {Number} deltaTime\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Object} velocity `x` and `y`\n\t */\n\tfunction getVelocity(deltaTime, x, y) {\n\t    return {\n\t        x: x / deltaTime || 0,\n\t        y: y / deltaTime || 0\n\t    };\n\t}\n\t\n\t/**\n\t * get the direction between two points\n\t * @param {Number} x\n\t * @param {Number} y\n\t * @return {Number} direction\n\t */\n\tfunction getDirection(x, y) {\n\t    if (x === y) {\n\t        return DIRECTION_NONE;\n\t    }\n\t\n\t    if (abs(x) >= abs(y)) {\n\t        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t    }\n\t    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n\t}\n\t\n\t/**\n\t * calculate the absolute distance between two points\n\t * @param {Object} p1 {x, y}\n\t * @param {Object} p2 {x, y}\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} distance\n\t */\n\tfunction getDistance(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t\n\t    return Math.sqrt((x * x) + (y * y));\n\t}\n\t\n\t/**\n\t * calculate the angle between two coordinates\n\t * @param {Object} p1\n\t * @param {Object} p2\n\t * @param {Array} [props] containing x and y keys\n\t * @return {Number} angle\n\t */\n\tfunction getAngle(p1, p2, props) {\n\t    if (!props) {\n\t        props = PROPS_XY;\n\t    }\n\t    var x = p2[props[0]] - p1[props[0]],\n\t        y = p2[props[1]] - p1[props[1]];\n\t    return Math.atan2(y, x) * 180 / Math.PI;\n\t}\n\t\n\t/**\n\t * calculate the rotation degrees between two pointersets\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} rotation\n\t */\n\tfunction getRotation(start, end) {\n\t    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n\t}\n\t\n\t/**\n\t * calculate the scale factor between two pointersets\n\t * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n\t * @param {Array} start array of pointers\n\t * @param {Array} end array of pointers\n\t * @return {Number} scale\n\t */\n\tfunction getScale(start, end) {\n\t    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n\t}\n\t\n\tvar MOUSE_INPUT_MAP = {\n\t    mousedown: INPUT_START,\n\t    mousemove: INPUT_MOVE,\n\t    mouseup: INPUT_END\n\t};\n\t\n\tvar MOUSE_ELEMENT_EVENTS = 'mousedown';\n\tvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\t\n\t/**\n\t * Mouse events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction MouseInput() {\n\t    this.evEl = MOUSE_ELEMENT_EVENTS;\n\t    this.evWin = MOUSE_WINDOW_EVENTS;\n\t\n\t    this.pressed = false; // mousedown state\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(MouseInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function MEhandler(ev) {\n\t        var eventType = MOUSE_INPUT_MAP[ev.type];\n\t\n\t        // on start we want to have the left mouse button down\n\t        if (eventType & INPUT_START && ev.button === 0) {\n\t            this.pressed = true;\n\t        }\n\t\n\t        if (eventType & INPUT_MOVE && ev.which !== 1) {\n\t            eventType = INPUT_END;\n\t        }\n\t\n\t        // mouse must be down\n\t        if (!this.pressed) {\n\t            return;\n\t        }\n\t\n\t        if (eventType & INPUT_END) {\n\t            this.pressed = false;\n\t        }\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: [ev],\n\t            changedPointers: [ev],\n\t            pointerType: INPUT_TYPE_MOUSE,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\tvar POINTER_INPUT_MAP = {\n\t    pointerdown: INPUT_START,\n\t    pointermove: INPUT_MOVE,\n\t    pointerup: INPUT_END,\n\t    pointercancel: INPUT_CANCEL,\n\t    pointerout: INPUT_CANCEL\n\t};\n\t\n\t// in IE10 the pointer types is defined as an enum\n\tvar IE10_POINTER_TYPE_ENUM = {\n\t    2: INPUT_TYPE_TOUCH,\n\t    3: INPUT_TYPE_PEN,\n\t    4: INPUT_TYPE_MOUSE,\n\t    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\t};\n\t\n\tvar POINTER_ELEMENT_EVENTS = 'pointerdown';\n\tvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\t\n\t// IE10 has prefixed support, and case-sensitive\n\tif (window.MSPointerEvent && !window.PointerEvent) {\n\t    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n\t    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n\t}\n\t\n\t/**\n\t * Pointer events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction PointerEventInput() {\n\t    this.evEl = POINTER_ELEMENT_EVENTS;\n\t    this.evWin = POINTER_WINDOW_EVENTS;\n\t\n\t    Input.apply(this, arguments);\n\t\n\t    this.store = (this.manager.session.pointerEvents = []);\n\t}\n\t\n\tinherit(PointerEventInput, Input, {\n\t    /**\n\t     * handle mouse events\n\t     * @param {Object} ev\n\t     */\n\t    handler: function PEhandler(ev) {\n\t        var store = this.store;\n\t        var removePointer = false;\n\t\n\t        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n\t        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n\t        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\t\n\t        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\t\n\t        // get index of the event in the store\n\t        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\t\n\t        // start and mouse must be down\n\t        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n\t            if (storeIndex < 0) {\n\t                store.push(ev);\n\t                storeIndex = store.length - 1;\n\t            }\n\t        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n\t            removePointer = true;\n\t        }\n\t\n\t        // it not found, so the pointer hasn't been down (so it's probably a hover)\n\t        if (storeIndex < 0) {\n\t            return;\n\t        }\n\t\n\t        // update the event in the store\n\t        store[storeIndex] = ev;\n\t\n\t        this.callback(this.manager, eventType, {\n\t            pointers: store,\n\t            changedPointers: [ev],\n\t            pointerType: pointerType,\n\t            srcEvent: ev\n\t        });\n\t\n\t        if (removePointer) {\n\t            // remove from the store\n\t            store.splice(storeIndex, 1);\n\t        }\n\t    }\n\t});\n\t\n\tvar SINGLE_TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n\tvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction SingleTouchInput() {\n\t    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n\t    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n\t    this.started = false;\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(SingleTouchInput, Input, {\n\t    handler: function TEhandler(ev) {\n\t        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\t\n\t        // should we handle the touch events?\n\t        if (type === INPUT_START) {\n\t            this.started = true;\n\t        }\n\t\n\t        if (!this.started) {\n\t            return;\n\t        }\n\t\n\t        var touches = normalizeSingleTouches.call(this, ev, type);\n\t\n\t        // when done, reset the started state\n\t        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n\t            this.started = false;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction normalizeSingleTouches(ev, type) {\n\t    var all = toArray(ev.touches);\n\t    var changed = toArray(ev.changedTouches);\n\t\n\t    if (type & (INPUT_END | INPUT_CANCEL)) {\n\t        all = uniqueArray(all.concat(changed), 'identifier', true);\n\t    }\n\t\n\t    return [all, changed];\n\t}\n\t\n\tvar TOUCH_INPUT_MAP = {\n\t    touchstart: INPUT_START,\n\t    touchmove: INPUT_MOVE,\n\t    touchend: INPUT_END,\n\t    touchcancel: INPUT_CANCEL\n\t};\n\t\n\tvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\t\n\t/**\n\t * Multi-user touch events input\n\t * @constructor\n\t * @extends Input\n\t */\n\tfunction TouchInput() {\n\t    this.evTarget = TOUCH_TARGET_EVENTS;\n\t    this.targetIds = {};\n\t\n\t    Input.apply(this, arguments);\n\t}\n\t\n\tinherit(TouchInput, Input, {\n\t    handler: function MTEhandler(ev) {\n\t        var type = TOUCH_INPUT_MAP[ev.type];\n\t        var touches = getTouches.call(this, ev, type);\n\t        if (!touches) {\n\t            return;\n\t        }\n\t\n\t        this.callback(this.manager, type, {\n\t            pointers: touches[0],\n\t            changedPointers: touches[1],\n\t            pointerType: INPUT_TYPE_TOUCH,\n\t            srcEvent: ev\n\t        });\n\t    }\n\t});\n\t\n\t/**\n\t * @this {TouchInput}\n\t * @param {Object} ev\n\t * @param {Number} type flag\n\t * @returns {undefined|Array} [all, changed]\n\t */\n\tfunction getTouches(ev, type) {\n\t    var allTouches = toArray(ev.touches);\n\t    var targetIds = this.targetIds;\n\t\n\t    // when there is only one touch, the process can be simplified\n\t    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n\t        targetIds[allTouches[0].identifier] = true;\n\t        return [allTouches, allTouches];\n\t    }\n\t\n\t    var i,\n\t        targetTouches,\n\t        changedTouches = toArray(ev.changedTouches),\n\t        changedTargetTouches = [],\n\t        target = this.target;\n\t\n\t    // get target touches from touches\n\t    targetTouches = allTouches.filter(function(touch) {\n\t        return hasParent(touch.target, target);\n\t    });\n\t\n\t    // collect touches\n\t    if (type === INPUT_START) {\n\t        i = 0;\n\t        while (i < targetTouches.length) {\n\t            targetIds[targetTouches[i].identifier] = true;\n\t            i++;\n\t        }\n\t    }\n\t\n\t    // filter changed touches to only contain touches that exist in the collected target ids\n\t    i = 0;\n\t    while (i < changedTouches.length) {\n\t        if (targetIds[changedTouches[i].identifier]) {\n\t            changedTargetTouches.push(changedTouches[i]);\n\t        }\n\t\n\t        // cleanup removed touches\n\t        if (type & (INPUT_END | INPUT_CANCEL)) {\n\t            delete targetIds[changedTouches[i].identifier];\n\t        }\n\t        i++;\n\t    }\n\t\n\t    if (!changedTargetTouches.length) {\n\t        return;\n\t    }\n\t\n\t    return [\n\t        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n\t        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n\t        changedTargetTouches\n\t    ];\n\t}\n\t\n\t/**\n\t * Combined touch and mouse input\n\t *\n\t * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n\t * This because touch devices also emit mouse events while doing a touch.\n\t *\n\t * @constructor\n\t * @extends Input\n\t */\n\t\n\tvar DEDUP_TIMEOUT = 2500;\n\tvar DEDUP_DISTANCE = 25;\n\t\n\tfunction TouchMouseInput() {\n\t    Input.apply(this, arguments);\n\t\n\t    var handler = bindFn(this.handler, this);\n\t    this.touch = new TouchInput(this.manager, handler);\n\t    this.mouse = new MouseInput(this.manager, handler);\n\t\n\t    this.primaryTouch = null;\n\t    this.lastTouches = [];\n\t}\n\t\n\tinherit(TouchMouseInput, Input, {\n\t    /**\n\t     * handle mouse and touch events\n\t     * @param {Hammer} manager\n\t     * @param {String} inputEvent\n\t     * @param {Object} inputData\n\t     */\n\t    handler: function TMEhandler(manager, inputEvent, inputData) {\n\t        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n\t            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\t\n\t        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n\t            return;\n\t        }\n\t\n\t        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\t        if (isTouch) {\n\t            recordTouches.call(this, inputEvent, inputData);\n\t        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n\t            return;\n\t        }\n\t\n\t        this.callback(manager, inputEvent, inputData);\n\t    },\n\t\n\t    /**\n\t     * remove the event listeners\n\t     */\n\t    destroy: function destroy() {\n\t        this.touch.destroy();\n\t        this.mouse.destroy();\n\t    }\n\t});\n\t\n\tfunction recordTouches(eventType, eventData) {\n\t    if (eventType & INPUT_START) {\n\t        this.primaryTouch = eventData.changedPointers[0].identifier;\n\t        setLastTouch.call(this, eventData);\n\t    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n\t        setLastTouch.call(this, eventData);\n\t    }\n\t}\n\t\n\tfunction setLastTouch(eventData) {\n\t    var touch = eventData.changedPointers[0];\n\t\n\t    if (touch.identifier === this.primaryTouch) {\n\t        var lastTouch = {x: touch.clientX, y: touch.clientY};\n\t        this.lastTouches.push(lastTouch);\n\t        var lts = this.lastTouches;\n\t        var removeLastTouch = function() {\n\t            var i = lts.indexOf(lastTouch);\n\t            if (i > -1) {\n\t                lts.splice(i, 1);\n\t            }\n\t        };\n\t        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n\t    }\n\t}\n\t\n\tfunction isSyntheticEvent(eventData) {\n\t    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n\t    for (var i = 0; i < this.lastTouches.length; i++) {\n\t        var t = this.lastTouches[i];\n\t        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n\t        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n\t            return true;\n\t        }\n\t    }\n\t    return false;\n\t}\n\t\n\tvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n\tvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\t\n\t// magical touchAction value\n\tvar TOUCH_ACTION_COMPUTE = 'compute';\n\tvar TOUCH_ACTION_AUTO = 'auto';\n\tvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\tvar TOUCH_ACTION_NONE = 'none';\n\tvar TOUCH_ACTION_PAN_X = 'pan-x';\n\tvar TOUCH_ACTION_PAN_Y = 'pan-y';\n\tvar TOUCH_ACTION_MAP = getTouchActionProps();\n\t\n\t/**\n\t * Touch Action\n\t * sets the touchAction property or uses the js alternative\n\t * @param {Manager} manager\n\t * @param {String} value\n\t * @constructor\n\t */\n\tfunction TouchAction(manager, value) {\n\t    this.manager = manager;\n\t    this.set(value);\n\t}\n\t\n\tTouchAction.prototype = {\n\t    /**\n\t     * set the touchAction value on the element or enable the polyfill\n\t     * @param {String} value\n\t     */\n\t    set: function(value) {\n\t        // find out the touch-action by the event handlers\n\t        if (value == TOUCH_ACTION_COMPUTE) {\n\t            value = this.compute();\n\t        }\n\t\n\t        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n\t            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n\t        }\n\t        this.actions = value.toLowerCase().trim();\n\t    },\n\t\n\t    /**\n\t     * just re-set the touchAction value\n\t     */\n\t    update: function() {\n\t        this.set(this.manager.options.touchAction);\n\t    },\n\t\n\t    /**\n\t     * compute the value for the touchAction property based on the recognizer's settings\n\t     * @returns {String} value\n\t     */\n\t    compute: function() {\n\t        var actions = [];\n\t        each(this.manager.recognizers, function(recognizer) {\n\t            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n\t                actions = actions.concat(recognizer.getTouchAction());\n\t            }\n\t        });\n\t        return cleanTouchActions(actions.join(' '));\n\t    },\n\t\n\t    /**\n\t     * this method is called on each input cycle and provides the preventing of the browser behavior\n\t     * @param {Object} input\n\t     */\n\t    preventDefaults: function(input) {\n\t        var srcEvent = input.srcEvent;\n\t        var direction = input.offsetDirection;\n\t\n\t        // if the touch action did prevented once this session\n\t        if (this.manager.session.prevented) {\n\t            srcEvent.preventDefault();\n\t            return;\n\t        }\n\t\n\t        var actions = this.actions;\n\t        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n\t        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n\t        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\t\n\t        if (hasNone) {\n\t            //do not prevent defaults if this is a tap gesture\n\t\n\t            var isTapPointer = input.pointers.length === 1;\n\t            var isTapMovement = input.distance < 2;\n\t            var isTapTouchTime = input.deltaTime < 250;\n\t\n\t            if (isTapPointer && isTapMovement && isTapTouchTime) {\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (hasPanX && hasPanY) {\n\t            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n\t            return;\n\t        }\n\t\n\t        if (hasNone ||\n\t            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n\t            (hasPanX && direction & DIRECTION_VERTICAL)) {\n\t            return this.preventSrc(srcEvent);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n\t     * @param {Object} srcEvent\n\t     */\n\t    preventSrc: function(srcEvent) {\n\t        this.manager.session.prevented = true;\n\t        srcEvent.preventDefault();\n\t    }\n\t};\n\t\n\t/**\n\t * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n\t * @param {String} actions\n\t * @returns {*}\n\t */\n\tfunction cleanTouchActions(actions) {\n\t    // none\n\t    if (inStr(actions, TOUCH_ACTION_NONE)) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\t    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\t\n\t    // if both pan-x and pan-y are set (different recognizers\n\t    // for different directions, e.g. horizontal pan but vertical swipe?)\n\t    // we need none (as otherwise with pan-x pan-y combined none of these\n\t    // recognizers will work, since the browser would handle all panning\n\t    if (hasPanX && hasPanY) {\n\t        return TOUCH_ACTION_NONE;\n\t    }\n\t\n\t    // pan-x OR pan-y\n\t    if (hasPanX || hasPanY) {\n\t        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n\t    }\n\t\n\t    // manipulation\n\t    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n\t        return TOUCH_ACTION_MANIPULATION;\n\t    }\n\t\n\t    return TOUCH_ACTION_AUTO;\n\t}\n\t\n\tfunction getTouchActionProps() {\n\t    if (!NATIVE_TOUCH_ACTION) {\n\t        return false;\n\t    }\n\t    var touchMap = {};\n\t    var cssSupports = window.CSS && window.CSS.supports;\n\t    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\t\n\t        // If css.supports is not supported but there is native touch-action assume it supports\n\t        // all values. This is the case for IE 10 and 11.\n\t        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n\t    });\n\t    return touchMap;\n\t}\n\t\n\t/**\n\t * Recognizer flow explained; *\n\t * All recognizers have the initial state of POSSIBLE when a input session starts.\n\t * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n\t * Example session for mouse-input: mousedown -> mousemove -> mouseup\n\t *\n\t * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n\t * which determines with state it should be.\n\t *\n\t * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n\t * POSSIBLE to give it another change on the next cycle.\n\t *\n\t *               Possible\n\t *                  |\n\t *            +-----+---------------+\n\t *            |                     |\n\t *      +-----+-----+               |\n\t *      |           |               |\n\t *   Failed      Cancelled          |\n\t *                          +-------+------+\n\t *                          |              |\n\t *                      Recognized       Began\n\t *                                         |\n\t *                                      Changed\n\t *                                         |\n\t *                                  Ended/Recognized\n\t */\n\tvar STATE_POSSIBLE = 1;\n\tvar STATE_BEGAN = 2;\n\tvar STATE_CHANGED = 4;\n\tvar STATE_ENDED = 8;\n\tvar STATE_RECOGNIZED = STATE_ENDED;\n\tvar STATE_CANCELLED = 16;\n\tvar STATE_FAILED = 32;\n\t\n\t/**\n\t * Recognizer\n\t * Every recognizer needs to extend from this class.\n\t * @constructor\n\t * @param {Object} options\n\t */\n\tfunction Recognizer(options) {\n\t    this.options = assign({}, this.defaults, options || {});\n\t\n\t    this.id = uniqueId();\n\t\n\t    this.manager = null;\n\t\n\t    // default is enable true\n\t    this.options.enable = ifUndefined(this.options.enable, true);\n\t\n\t    this.state = STATE_POSSIBLE;\n\t\n\t    this.simultaneous = {};\n\t    this.requireFail = [];\n\t}\n\t\n\tRecognizer.prototype = {\n\t    /**\n\t     * @virtual\n\t     * @type {Object}\n\t     */\n\t    defaults: {},\n\t\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @return {Recognizer}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // also update the touchAction, in case something changed about the directions/enabled state\n\t        this.manager && this.manager.touchAction.update();\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognize simultaneous with an other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    recognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        var simultaneous = this.simultaneous;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (!simultaneous[otherRecognizer.id]) {\n\t            simultaneous[otherRecognizer.id] = otherRecognizer;\n\t            otherRecognizer.recognizeWith(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRecognizeWith: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        delete this.simultaneous[otherRecognizer.id];\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * recognizer can only run when an other is failing\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    requireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        var requireFail = this.requireFail;\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        if (inArray(requireFail, otherRecognizer) === -1) {\n\t            requireFail.push(otherRecognizer);\n\t            otherRecognizer.requireFailure(this);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * drop the requireFailure link. it does not remove the link on the other recognizer.\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Recognizer} this\n\t     */\n\t    dropRequireFailure: function(otherRecognizer) {\n\t        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n\t            return this;\n\t        }\n\t\n\t        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\t        var index = inArray(this.requireFail, otherRecognizer);\n\t        if (index > -1) {\n\t            this.requireFail.splice(index, 1);\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * has require failures boolean\n\t     * @returns {boolean}\n\t     */\n\t    hasRequireFailures: function() {\n\t        return this.requireFail.length > 0;\n\t    },\n\t\n\t    /**\n\t     * if the recognizer can recognize simultaneous with an other recognizer\n\t     * @param {Recognizer} otherRecognizer\n\t     * @returns {Boolean}\n\t     */\n\t    canRecognizeWith: function(otherRecognizer) {\n\t        return !!this.simultaneous[otherRecognizer.id];\n\t    },\n\t\n\t    /**\n\t     * You should use `tryEmit` instead of `emit` directly to check\n\t     * that all the needed recognizers has failed before emitting.\n\t     * @param {Object} input\n\t     */\n\t    emit: function(input) {\n\t        var self = this;\n\t        var state = this.state;\n\t\n\t        function emit(event) {\n\t            self.manager.emit(event, input);\n\t        }\n\t\n\t        // 'panstart' and 'panmove'\n\t        if (state < STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t\n\t        emit(self.options.event); // simple 'eventName' events\n\t\n\t        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n\t            emit(input.additionalEvent);\n\t        }\n\t\n\t        // panend and pancancel\n\t        if (state >= STATE_ENDED) {\n\t            emit(self.options.event + stateStr(state));\n\t        }\n\t    },\n\t\n\t    /**\n\t     * Check that all the require failure recognizers has failed,\n\t     * if true, it emits a gesture event,\n\t     * otherwise, setup the state to FAILED.\n\t     * @param {Object} input\n\t     */\n\t    tryEmit: function(input) {\n\t        if (this.canEmit()) {\n\t            return this.emit(input);\n\t        }\n\t        // it's failing anyway\n\t        this.state = STATE_FAILED;\n\t    },\n\t\n\t    /**\n\t     * can we emit?\n\t     * @returns {boolean}\n\t     */\n\t    canEmit: function() {\n\t        var i = 0;\n\t        while (i < this.requireFail.length) {\n\t            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n\t                return false;\n\t            }\n\t            i++;\n\t        }\n\t        return true;\n\t    },\n\t\n\t    /**\n\t     * update the recognizer\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        // make a new copy of the inputData\n\t        // so we can change the inputData without messing up the other recognizers\n\t        var inputDataClone = assign({}, inputData);\n\t\n\t        // is is enabled and allow recognizing?\n\t        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n\t            this.reset();\n\t            this.state = STATE_FAILED;\n\t            return;\n\t        }\n\t\n\t        // reset when we've reached the end\n\t        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n\t            this.state = STATE_POSSIBLE;\n\t        }\n\t\n\t        this.state = this.process(inputDataClone);\n\t\n\t        // the recognizer has recognized a gesture\n\t        // so trigger an event\n\t        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n\t            this.tryEmit(inputDataClone);\n\t        }\n\t    },\n\t\n\t    /**\n\t     * return the state of the recognizer\n\t     * the actual recognizing happens in this method\n\t     * @virtual\n\t     * @param {Object} inputData\n\t     * @returns {Const} STATE\n\t     */\n\t    process: function(inputData) { }, // jshint ignore:line\n\t\n\t    /**\n\t     * return the preferred touch-action\n\t     * @virtual\n\t     * @returns {Array}\n\t     */\n\t    getTouchAction: function() { },\n\t\n\t    /**\n\t     * called when the gesture isn't allowed to recognize\n\t     * like when another is being recognized or it is disabled\n\t     * @virtual\n\t     */\n\t    reset: function() { }\n\t};\n\t\n\t/**\n\t * get a usable string, used as event postfix\n\t * @param {Const} state\n\t * @returns {String} state\n\t */\n\tfunction stateStr(state) {\n\t    if (state & STATE_CANCELLED) {\n\t        return 'cancel';\n\t    } else if (state & STATE_ENDED) {\n\t        return 'end';\n\t    } else if (state & STATE_CHANGED) {\n\t        return 'move';\n\t    } else if (state & STATE_BEGAN) {\n\t        return 'start';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * direction cons to string\n\t * @param {Const} direction\n\t * @returns {String}\n\t */\n\tfunction directionStr(direction) {\n\t    if (direction == DIRECTION_DOWN) {\n\t        return 'down';\n\t    } else if (direction == DIRECTION_UP) {\n\t        return 'up';\n\t    } else if (direction == DIRECTION_LEFT) {\n\t        return 'left';\n\t    } else if (direction == DIRECTION_RIGHT) {\n\t        return 'right';\n\t    }\n\t    return '';\n\t}\n\t\n\t/**\n\t * get a recognizer by name if it is bound to a manager\n\t * @param {Recognizer|String} otherRecognizer\n\t * @param {Recognizer} recognizer\n\t * @returns {Recognizer}\n\t */\n\tfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n\t    var manager = recognizer.manager;\n\t    if (manager) {\n\t        return manager.get(otherRecognizer);\n\t    }\n\t    return otherRecognizer;\n\t}\n\t\n\t/**\n\t * This recognizer is just used as a base for the simple attribute recognizers.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction AttrRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(AttrRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof AttrRecognizer\n\t     */\n\t    defaults: {\n\t        /**\n\t         * @type {Number}\n\t         * @default 1\n\t         */\n\t        pointers: 1\n\t    },\n\t\n\t    /**\n\t     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {Boolean} recognized\n\t     */\n\t    attrTest: function(input) {\n\t        var optionPointers = this.options.pointers;\n\t        return optionPointers === 0 || input.pointers.length === optionPointers;\n\t    },\n\t\n\t    /**\n\t     * Process the input and return the state for the recognizer\n\t     * @memberof AttrRecognizer\n\t     * @param {Object} input\n\t     * @returns {*} State\n\t     */\n\t    process: function(input) {\n\t        var state = this.state;\n\t        var eventType = input.eventType;\n\t\n\t        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n\t        var isValid = this.attrTest(input);\n\t\n\t        // on cancel input and we've recognized before, return STATE_CANCELLED\n\t        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n\t            return state | STATE_CANCELLED;\n\t        } else if (isRecognized || isValid) {\n\t            if (eventType & INPUT_END) {\n\t                return state | STATE_ENDED;\n\t            } else if (!(state & STATE_BEGAN)) {\n\t                return STATE_BEGAN;\n\t            }\n\t            return state | STATE_CHANGED;\n\t        }\n\t        return STATE_FAILED;\n\t    }\n\t});\n\t\n\t/**\n\t * Pan\n\t * Recognized when the pointer is down and moved in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PanRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t\n\t    this.pX = null;\n\t    this.pY = null;\n\t}\n\t\n\tinherit(PanRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PanRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pan',\n\t        threshold: 10,\n\t        pointers: 1,\n\t        direction: DIRECTION_ALL\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        var direction = this.options.direction;\n\t        var actions = [];\n\t        if (direction & DIRECTION_HORIZONTAL) {\n\t            actions.push(TOUCH_ACTION_PAN_Y);\n\t        }\n\t        if (direction & DIRECTION_VERTICAL) {\n\t            actions.push(TOUCH_ACTION_PAN_X);\n\t        }\n\t        return actions;\n\t    },\n\t\n\t    directionTest: function(input) {\n\t        var options = this.options;\n\t        var hasMoved = true;\n\t        var distance = input.distance;\n\t        var direction = input.direction;\n\t        var x = input.deltaX;\n\t        var y = input.deltaY;\n\t\n\t        // lock to axis?\n\t        if (!(direction & options.direction)) {\n\t            if (options.direction & DIRECTION_HORIZONTAL) {\n\t                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n\t                hasMoved = x != this.pX;\n\t                distance = Math.abs(input.deltaX);\n\t            } else {\n\t                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n\t                hasMoved = y != this.pY;\n\t                distance = Math.abs(input.deltaY);\n\t            }\n\t        }\n\t        input.direction = direction;\n\t        return hasMoved && distance > options.threshold && direction & options.direction;\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n\t            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n\t    },\n\t\n\t    emit: function(input) {\n\t\n\t        this.pX = input.deltaX;\n\t        this.pY = input.deltaY;\n\t\n\t        var direction = directionStr(input.direction);\n\t\n\t        if (direction) {\n\t            input.additionalEvent = this.options.event + direction;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Pinch\n\t * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction PinchRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(PinchRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'pinch',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (input.scale !== 1) {\n\t            var inOut = input.scale < 1 ? 'in' : 'out';\n\t            input.additionalEvent = this.options.event + inOut;\n\t        }\n\t        this._super.emit.call(this, input);\n\t    }\n\t});\n\t\n\t/**\n\t * Press\n\t * Recognized when the pointer is down for x ms without any movement.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction PressRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t}\n\t\n\tinherit(PressRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PressRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'press',\n\t        pointers: 1,\n\t        time: 251, // minimal time of the pointer to be pressed\n\t        threshold: 9 // a minimal movement is ok, but keep it low\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_AUTO];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTime = input.deltaTime > options.time;\n\t\n\t        this._input = input;\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n\t            this.reset();\n\t        } else if (input.eventType & INPUT_START) {\n\t            this.reset();\n\t            this._timer = setTimeoutContext(function() {\n\t                this.state = STATE_RECOGNIZED;\n\t                this.tryEmit();\n\t            }, options.time, this);\n\t        } else if (input.eventType & INPUT_END) {\n\t            return STATE_RECOGNIZED;\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function(input) {\n\t        if (this.state !== STATE_RECOGNIZED) {\n\t            return;\n\t        }\n\t\n\t        if (input && (input.eventType & INPUT_END)) {\n\t            this.manager.emit(this.options.event + 'up', input);\n\t        } else {\n\t            this._input.timeStamp = now();\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Rotate\n\t * Recognized when two or more pointer are moving in a circular motion.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction RotateRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(RotateRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof RotateRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'rotate',\n\t        threshold: 0,\n\t        pointers: 2\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_NONE];\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        return this._super.attrTest.call(this, input) &&\n\t            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n\t    }\n\t});\n\t\n\t/**\n\t * Swipe\n\t * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n\t * @constructor\n\t * @extends AttrRecognizer\n\t */\n\tfunction SwipeRecognizer() {\n\t    AttrRecognizer.apply(this, arguments);\n\t}\n\t\n\tinherit(SwipeRecognizer, AttrRecognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof SwipeRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'swipe',\n\t        threshold: 10,\n\t        velocity: 0.3,\n\t        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n\t        pointers: 1\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return PanRecognizer.prototype.getTouchAction.call(this);\n\t    },\n\t\n\t    attrTest: function(input) {\n\t        var direction = this.options.direction;\n\t        var velocity;\n\t\n\t        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n\t            velocity = input.overallVelocity;\n\t        } else if (direction & DIRECTION_HORIZONTAL) {\n\t            velocity = input.overallVelocityX;\n\t        } else if (direction & DIRECTION_VERTICAL) {\n\t            velocity = input.overallVelocityY;\n\t        }\n\t\n\t        return this._super.attrTest.call(this, input) &&\n\t            direction & input.offsetDirection &&\n\t            input.distance > this.options.threshold &&\n\t            input.maxPointers == this.options.pointers &&\n\t            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n\t    },\n\t\n\t    emit: function(input) {\n\t        var direction = directionStr(input.offsetDirection);\n\t        if (direction) {\n\t            this.manager.emit(this.options.event + direction, input);\n\t        }\n\t\n\t        this.manager.emit(this.options.event, input);\n\t    }\n\t});\n\t\n\t/**\n\t * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n\t * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n\t * a single tap.\n\t *\n\t * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n\t * multi-taps being recognized.\n\t * @constructor\n\t * @extends Recognizer\n\t */\n\tfunction TapRecognizer() {\n\t    Recognizer.apply(this, arguments);\n\t\n\t    // previous time and center,\n\t    // used for tap counting\n\t    this.pTime = false;\n\t    this.pCenter = false;\n\t\n\t    this._timer = null;\n\t    this._input = null;\n\t    this.count = 0;\n\t}\n\t\n\tinherit(TapRecognizer, Recognizer, {\n\t    /**\n\t     * @namespace\n\t     * @memberof PinchRecognizer\n\t     */\n\t    defaults: {\n\t        event: 'tap',\n\t        pointers: 1,\n\t        taps: 1,\n\t        interval: 300, // max time between the multi-tap taps\n\t        time: 250, // max time of the pointer to be down (like finger on the screen)\n\t        threshold: 9, // a minimal movement is ok, but keep it low\n\t        posThreshold: 10 // a multi-tap can be a bit off the initial position\n\t    },\n\t\n\t    getTouchAction: function() {\n\t        return [TOUCH_ACTION_MANIPULATION];\n\t    },\n\t\n\t    process: function(input) {\n\t        var options = this.options;\n\t\n\t        var validPointers = input.pointers.length === options.pointers;\n\t        var validMovement = input.distance < options.threshold;\n\t        var validTouchTime = input.deltaTime < options.time;\n\t\n\t        this.reset();\n\t\n\t        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n\t            return this.failTimeout();\n\t        }\n\t\n\t        // we only allow little movement\n\t        // and we've reached an end event, so a tap is possible\n\t        if (validMovement && validTouchTime && validPointers) {\n\t            if (input.eventType != INPUT_END) {\n\t                return this.failTimeout();\n\t            }\n\t\n\t            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n\t            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\t\n\t            this.pTime = input.timeStamp;\n\t            this.pCenter = input.center;\n\t\n\t            if (!validMultiTap || !validInterval) {\n\t                this.count = 1;\n\t            } else {\n\t                this.count += 1;\n\t            }\n\t\n\t            this._input = input;\n\t\n\t            // if tap count matches we have recognized it,\n\t            // else it has began recognizing...\n\t            var tapCount = this.count % options.taps;\n\t            if (tapCount === 0) {\n\t                // no failing requirements, immediately trigger the tap event\n\t                // or wait as long as the multitap interval to trigger\n\t                if (!this.hasRequireFailures()) {\n\t                    return STATE_RECOGNIZED;\n\t                } else {\n\t                    this._timer = setTimeoutContext(function() {\n\t                        this.state = STATE_RECOGNIZED;\n\t                        this.tryEmit();\n\t                    }, options.interval, this);\n\t                    return STATE_BEGAN;\n\t                }\n\t            }\n\t        }\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    failTimeout: function() {\n\t        this._timer = setTimeoutContext(function() {\n\t            this.state = STATE_FAILED;\n\t        }, this.options.interval, this);\n\t        return STATE_FAILED;\n\t    },\n\t\n\t    reset: function() {\n\t        clearTimeout(this._timer);\n\t    },\n\t\n\t    emit: function() {\n\t        if (this.state == STATE_RECOGNIZED) {\n\t            this._input.tapCount = this.count;\n\t            this.manager.emit(this.options.event, this._input);\n\t        }\n\t    }\n\t});\n\t\n\t/**\n\t * Simple way to create a manager with a default set of recognizers.\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Hammer(element, options) {\n\t    options = options || {};\n\t    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n\t    return new Manager(element, options);\n\t}\n\t\n\t/**\n\t * @const {string}\n\t */\n\tHammer.VERSION = '2.0.7';\n\t\n\t/**\n\t * default settings\n\t * @namespace\n\t */\n\tHammer.defaults = {\n\t    /**\n\t     * set if DOM events are being triggered.\n\t     * But this is slower and unused by simple implementations, so disabled by default.\n\t     * @type {Boolean}\n\t     * @default false\n\t     */\n\t    domEvents: false,\n\t\n\t    /**\n\t     * The value for the touchAction property/fallback.\n\t     * When set to `compute` it will magically set the correct value based on the added recognizers.\n\t     * @type {String}\n\t     * @default compute\n\t     */\n\t    touchAction: TOUCH_ACTION_COMPUTE,\n\t\n\t    /**\n\t     * @type {Boolean}\n\t     * @default true\n\t     */\n\t    enable: true,\n\t\n\t    /**\n\t     * EXPERIMENTAL FEATURE -- can be removed/changed\n\t     * Change the parent input target element.\n\t     * If Null, then it is being set the to main element.\n\t     * @type {Null|EventTarget}\n\t     * @default null\n\t     */\n\t    inputTarget: null,\n\t\n\t    /**\n\t     * force an input class\n\t     * @type {Null|Function}\n\t     * @default null\n\t     */\n\t    inputClass: null,\n\t\n\t    /**\n\t     * Default recognizer setup when calling `Hammer()`\n\t     * When creating a new Manager these will be skipped.\n\t     * @type {Array}\n\t     */\n\t    preset: [\n\t        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n\t        [RotateRecognizer, {enable: false}],\n\t        [PinchRecognizer, {enable: false}, ['rotate']],\n\t        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n\t        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n\t        [TapRecognizer],\n\t        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n\t        [PressRecognizer]\n\t    ],\n\t\n\t    /**\n\t     * Some CSS properties can be used to improve the working of Hammer.\n\t     * Add them to this method and they will be set when creating a new Manager.\n\t     * @namespace\n\t     */\n\t    cssProps: {\n\t        /**\n\t         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userSelect: 'none',\n\t\n\t        /**\n\t         * Disable the Windows Phone grippers when pressing an element.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchSelect: 'none',\n\t\n\t        /**\n\t         * Disables the default callout shown when you touch and hold a touch target.\n\t         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n\t         * a callout containing information about the link. This property allows you to disable that callout.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        touchCallout: 'none',\n\t\n\t        /**\n\t         * Specifies whether zooming is enabled. Used by IE10>\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        contentZooming: 'none',\n\t\n\t        /**\n\t         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n\t         * @type {String}\n\t         * @default 'none'\n\t         */\n\t        userDrag: 'none',\n\t\n\t        /**\n\t         * Overrides the highlight color shown when the user taps a link or a JavaScript\n\t         * clickable element in iOS. This property obeys the alpha value, if specified.\n\t         * @type {String}\n\t         * @default 'rgba(0,0,0,0)'\n\t         */\n\t        tapHighlightColor: 'rgba(0,0,0,0)'\n\t    }\n\t};\n\t\n\tvar STOP = 1;\n\tvar FORCED_STOP = 2;\n\t\n\t/**\n\t * Manager\n\t * @param {HTMLElement} element\n\t * @param {Object} [options]\n\t * @constructor\n\t */\n\tfunction Manager(element, options) {\n\t    this.options = assign({}, Hammer.defaults, options || {});\n\t\n\t    this.options.inputTarget = this.options.inputTarget || element;\n\t\n\t    this.handlers = {};\n\t    this.session = {};\n\t    this.recognizers = [];\n\t    this.oldCssProps = {};\n\t\n\t    this.element = element;\n\t    this.input = createInputInstance(this);\n\t    this.touchAction = new TouchAction(this, this.options.touchAction);\n\t\n\t    toggleCssProps(this, true);\n\t\n\t    each(this.options.recognizers, function(item) {\n\t        var recognizer = this.add(new (item[0])(item[1]));\n\t        item[2] && recognizer.recognizeWith(item[2]);\n\t        item[3] && recognizer.requireFailure(item[3]);\n\t    }, this);\n\t}\n\t\n\tManager.prototype = {\n\t    /**\n\t     * set options\n\t     * @param {Object} options\n\t     * @returns {Manager}\n\t     */\n\t    set: function(options) {\n\t        assign(this.options, options);\n\t\n\t        // Options that need a little more setup\n\t        if (options.touchAction) {\n\t            this.touchAction.update();\n\t        }\n\t        if (options.inputTarget) {\n\t            // Clean up existing event listeners and reinitialize\n\t            this.input.destroy();\n\t            this.input.target = options.inputTarget;\n\t            this.input.init();\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * stop recognizing for this session.\n\t     * This session will be discarded, when a new [input]start event is fired.\n\t     * When forced, the recognizer cycle is stopped immediately.\n\t     * @param {Boolean} [force]\n\t     */\n\t    stop: function(force) {\n\t        this.session.stopped = force ? FORCED_STOP : STOP;\n\t    },\n\t\n\t    /**\n\t     * run the recognizers!\n\t     * called by the inputHandler function on every movement of the pointers (touches)\n\t     * it walks through all the recognizers and tries to detect the gesture that is being made\n\t     * @param {Object} inputData\n\t     */\n\t    recognize: function(inputData) {\n\t        var session = this.session;\n\t        if (session.stopped) {\n\t            return;\n\t        }\n\t\n\t        // run the touch-action polyfill\n\t        this.touchAction.preventDefaults(inputData);\n\t\n\t        var recognizer;\n\t        var recognizers = this.recognizers;\n\t\n\t        // this holds the recognizer that is being recognized.\n\t        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n\t        // if no recognizer is detecting a thing, it is set to `null`\n\t        var curRecognizer = session.curRecognizer;\n\t\n\t        // reset when the last recognizer is recognized\n\t        // or when we're in a new session\n\t        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n\t            curRecognizer = session.curRecognizer = null;\n\t        }\n\t\n\t        var i = 0;\n\t        while (i < recognizers.length) {\n\t            recognizer = recognizers[i];\n\t\n\t            // find out if we are allowed try to recognize the input for this one.\n\t            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n\t            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n\t            //      that is being recognized.\n\t            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n\t            //      this can be setup with the `recognizeWith()` method on the recognizer.\n\t            if (session.stopped !== FORCED_STOP && ( // 1\n\t                    !curRecognizer || recognizer == curRecognizer || // 2\n\t                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n\t                recognizer.recognize(inputData);\n\t            } else {\n\t                recognizer.reset();\n\t            }\n\t\n\t            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n\t            // current active recognizer. but only if we don't already have an active recognizer\n\t            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n\t                curRecognizer = session.curRecognizer = recognizer;\n\t            }\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * get a recognizer by its event name.\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Recognizer|Null}\n\t     */\n\t    get: function(recognizer) {\n\t        if (recognizer instanceof Recognizer) {\n\t            return recognizer;\n\t        }\n\t\n\t        var recognizers = this.recognizers;\n\t        for (var i = 0; i < recognizers.length; i++) {\n\t            if (recognizers[i].options.event == recognizer) {\n\t                return recognizers[i];\n\t            }\n\t        }\n\t        return null;\n\t    },\n\t\n\t    /**\n\t     * add a recognizer to the manager\n\t     * existing recognizers with the same event name will be removed\n\t     * @param {Recognizer} recognizer\n\t     * @returns {Recognizer|Manager}\n\t     */\n\t    add: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'add', this)) {\n\t            return this;\n\t        }\n\t\n\t        // remove existing\n\t        var existing = this.get(recognizer.options.event);\n\t        if (existing) {\n\t            this.remove(existing);\n\t        }\n\t\n\t        this.recognizers.push(recognizer);\n\t        recognizer.manager = this;\n\t\n\t        this.touchAction.update();\n\t        return recognizer;\n\t    },\n\t\n\t    /**\n\t     * remove a recognizer by name or instance\n\t     * @param {Recognizer|String} recognizer\n\t     * @returns {Manager}\n\t     */\n\t    remove: function(recognizer) {\n\t        if (invokeArrayArg(recognizer, 'remove', this)) {\n\t            return this;\n\t        }\n\t\n\t        recognizer = this.get(recognizer);\n\t\n\t        // let's make sure this recognizer exists\n\t        if (recognizer) {\n\t            var recognizers = this.recognizers;\n\t            var index = inArray(recognizers, recognizer);\n\t\n\t            if (index !== -1) {\n\t                recognizers.splice(index, 1);\n\t                this.touchAction.update();\n\t            }\n\t        }\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * bind event\n\t     * @param {String} events\n\t     * @param {Function} handler\n\t     * @returns {EventEmitter} this\n\t     */\n\t    on: function(events, handler) {\n\t        if (events === undefined) {\n\t            return;\n\t        }\n\t        if (handler === undefined) {\n\t            return;\n\t        }\n\t\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            handlers[event] = handlers[event] || [];\n\t            handlers[event].push(handler);\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * unbind event, leave emit blank to remove all handlers\n\t     * @param {String} events\n\t     * @param {Function} [handler]\n\t     * @returns {EventEmitter} this\n\t     */\n\t    off: function(events, handler) {\n\t        if (events === undefined) {\n\t            return;\n\t        }\n\t\n\t        var handlers = this.handlers;\n\t        each(splitStr(events), function(event) {\n\t            if (!handler) {\n\t                delete handlers[event];\n\t            } else {\n\t                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n\t            }\n\t        });\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * emit event to the listeners\n\t     * @param {String} event\n\t     * @param {Object} data\n\t     */\n\t    emit: function(event, data) {\n\t        // we also want to trigger dom events\n\t        if (this.options.domEvents) {\n\t            triggerDomEvent(event, data);\n\t        }\n\t\n\t        // no handlers, so skip it all\n\t        var handlers = this.handlers[event] && this.handlers[event].slice();\n\t        if (!handlers || !handlers.length) {\n\t            return;\n\t        }\n\t\n\t        data.type = event;\n\t        data.preventDefault = function() {\n\t            data.srcEvent.preventDefault();\n\t        };\n\t\n\t        var i = 0;\n\t        while (i < handlers.length) {\n\t            handlers[i](data);\n\t            i++;\n\t        }\n\t    },\n\t\n\t    /**\n\t     * destroy the manager and unbinds all events\n\t     * it doesn't unbind dom events, that is the user own responsibility\n\t     */\n\t    destroy: function() {\n\t        this.element && toggleCssProps(this, false);\n\t\n\t        this.handlers = {};\n\t        this.session = {};\n\t        this.input.destroy();\n\t        this.element = null;\n\t    }\n\t};\n\t\n\t/**\n\t * add/remove the css properties as defined in manager.options.cssProps\n\t * @param {Manager} manager\n\t * @param {Boolean} add\n\t */\n\tfunction toggleCssProps(manager, add) {\n\t    var element = manager.element;\n\t    if (!element.style) {\n\t        return;\n\t    }\n\t    var prop;\n\t    each(manager.options.cssProps, function(value, name) {\n\t        prop = prefixed(element.style, name);\n\t        if (add) {\n\t            manager.oldCssProps[prop] = element.style[prop];\n\t            element.style[prop] = value;\n\t        } else {\n\t            element.style[prop] = manager.oldCssProps[prop] || '';\n\t        }\n\t    });\n\t    if (!add) {\n\t        manager.oldCssProps = {};\n\t    }\n\t}\n\t\n\t/**\n\t * trigger dom event\n\t * @param {String} event\n\t * @param {Object} data\n\t */\n\tfunction triggerDomEvent(event, data) {\n\t    var gestureEvent = document.createEvent('Event');\n\t    gestureEvent.initEvent(event, true, true);\n\t    gestureEvent.gesture = data;\n\t    data.target.dispatchEvent(gestureEvent);\n\t}\n\t\n\tassign(Hammer, {\n\t    INPUT_START: INPUT_START,\n\t    INPUT_MOVE: INPUT_MOVE,\n\t    INPUT_END: INPUT_END,\n\t    INPUT_CANCEL: INPUT_CANCEL,\n\t\n\t    STATE_POSSIBLE: STATE_POSSIBLE,\n\t    STATE_BEGAN: STATE_BEGAN,\n\t    STATE_CHANGED: STATE_CHANGED,\n\t    STATE_ENDED: STATE_ENDED,\n\t    STATE_RECOGNIZED: STATE_RECOGNIZED,\n\t    STATE_CANCELLED: STATE_CANCELLED,\n\t    STATE_FAILED: STATE_FAILED,\n\t\n\t    DIRECTION_NONE: DIRECTION_NONE,\n\t    DIRECTION_LEFT: DIRECTION_LEFT,\n\t    DIRECTION_RIGHT: DIRECTION_RIGHT,\n\t    DIRECTION_UP: DIRECTION_UP,\n\t    DIRECTION_DOWN: DIRECTION_DOWN,\n\t    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n\t    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n\t    DIRECTION_ALL: DIRECTION_ALL,\n\t\n\t    Manager: Manager,\n\t    Input: Input,\n\t    TouchAction: TouchAction,\n\t\n\t    TouchInput: TouchInput,\n\t    MouseInput: MouseInput,\n\t    PointerEventInput: PointerEventInput,\n\t    TouchMouseInput: TouchMouseInput,\n\t    SingleTouchInput: SingleTouchInput,\n\t\n\t    Recognizer: Recognizer,\n\t    AttrRecognizer: AttrRecognizer,\n\t    Tap: TapRecognizer,\n\t    Pan: PanRecognizer,\n\t    Swipe: SwipeRecognizer,\n\t    Pinch: PinchRecognizer,\n\t    Rotate: RotateRecognizer,\n\t    Press: PressRecognizer,\n\t\n\t    on: addEventListeners,\n\t    off: removeEventListeners,\n\t    each: each,\n\t    merge: merge,\n\t    extend: extend,\n\t    assign: assign,\n\t    inherit: inherit,\n\t    bindFn: bindFn,\n\t    prefixed: prefixed\n\t});\n\t\n\t// this prevents errors when Hammer is loaded in the presence of an AMD\n\t//  style loader but by script tag, not by the loader.\n\tvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\n\tfreeGlobal.Hammer = Hammer;\n\t\n\tif (true) {\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t        return Hammer;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module != 'undefined' && module.exports) {\n\t    module.exports = Hammer;\n\t} else {\n\t    window[exportName] = Hammer;\n\t}\n\t\n\t})(window, document, 'Hammer');\n\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.VueAnimatedList = factory());\n\t}(this, function () { 'use strict';\n\t  function install (Vue) {\n\t    var _ = Vue.util\n\t    var transitionEndEvent = _.transitionEndEvent\n\t    var addClass = _.addClass\n\t    var removeClass = _.removeClass\n\t    var on = _.on\n\t    var off = _.off\n\t    var transitionProp = _.transitionProp\n\t\n\t    // patch v-for\n\t    var vFor = Vue.directive('for')\n\t    var diff = vFor.diff\n\t    vFor.diff = function () {\n\t      var needMoveTransition = prepareMoveTransition(this.frags)\n\t      diff.apply(this, arguments)\n\t      if (needMoveTransition) {\n\t        applyMoveTransition(this.frags)\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Check if move transitions are needed, and if so,\n\t     * record the bounding client rects for each item.\n\t     *\n\t     * @param {Array<Fragment>|undefined} frags\n\t     * @return {Boolean|undefined}\n\t     */\n\t\n\t    function prepareMoveTransition (frags) {\n\t      var transition =\n\t        transitionEndEvent && // css transition supported?\n\t        frags && frags.length && // has frags to be moved?\n\t        frags[0].node.__v_trans // has transitions?\n\t      if (transition) {\n\t        var node = frags[0].node\n\t        var moveClass = transition.id + '-move'\n\t        var moving = node._pendingMoveCb\n\t        var hasTransition = false\n\t        if (!moving) {\n\t          // sniff whether element has a transition duration for transform\n\t          // with the move class applied\n\t          addClass(node, moveClass)\n\t          var type = transition.getCssTransitionType(moveClass)\n\t          if (type === 'transition') {\n\t            var computedStyles = window.getComputedStyle(node)\n\t            var transitionedProps = computedStyles[transitionProp + 'Property']\n\t            if (/\\btransform(,|$)/.test(transitionedProps)) {\n\t              hasTransition = true\n\t            }\n\t          }\n\t          removeClass(node, moveClass)\n\t        }\n\t        if (moving || hasTransition) {\n\t          frags.forEach(function (frag) {\n\t            frag._oldPos = frag.node.getBoundingClientRect()\n\t          })\n\t          return true\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Apply move transitions.\n\t     * Calculate new target positions after the move, then apply the\n\t     * FLIP technique to trigger CSS transforms.\n\t     *\n\t     * @param {Array<Fragment>} frags\n\t     */\n\t\n\t    function applyMoveTransition (frags) {\n\t      frags.forEach(function (frag) {\n\t        var node = frag.node\n\t        var oldPos = frag._oldPos\n\t        if (!oldPos) return\n\t        if (!frag.moved) {\n\t          // transition busting to ensure correct bounding rect:\n\t          // if an element has an ongoing transition and not \"reinserted\",\n\t          // the bounding rect will not be calculated at its target position,\n\t          // but rather an in-transition position.\n\t          var p = node.parentNode\n\t          var next = node.nextSibling\n\t          p.removeChild(node)\n\t          p.insertBefore(node, next)\n\t        }\n\t        var newPos = node.getBoundingClientRect()\n\t        var dx = oldPos.left - newPos.left\n\t        var dy = oldPos.top - newPos.top\n\t        if (dx !== 0 || dy !== 0) {\n\t          frag.moved = true\n\t          node.style.transform =\n\t          node.style.WebkitTransform =\n\t            'translate(' + dx + 'px, ' + dy + 'px)'\n\t          node.style.transitionDuration = '0s'\n\t        } else {\n\t          frag.moved = false\n\t        }\n\t      })\n\t      Vue.nextTick(function () {\n\t        var f = document.documentElement.offsetHeight\n\t        frags.forEach(function (frag) {\n\t          var node = frag.node\n\t          var moveClass = node.__v_trans.id + '-move'\n\t          if (frag.moved) {\n\t            addClass(node, moveClass)\n\t            node.style.transform = node.style.WebkitTransform = ''\n\t            node.style.transitionDuration = ''\n\t            if (node._pendingMoveCb) {\n\t              off(node, transitionEndEvent, node._pendingMoveCb)\n\t            }\n\t            node._pendingMoveCb = function cb () {\n\t              off(node, transitionEndEvent, cb)\n\t              node._pendingMoveCb = null\n\t              removeClass(node, moveClass)\n\t            }\n\t            on(node, transitionEndEvent, node._pendingMoveCb)\n\t          }\n\t        })\n\t      })\n\t    }\n\t  }\n\t\n\t  if (typeof Vue !== 'undefined') {\n\t    Vue.use(install)\n\t  }\n\t  return install\n\t}));\n\n\n/***/ },\n/* 76 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=menu-links> <a v-link=\\\"{path:'/timeline'}\\\">タイムライン</a> <a v-link=\\\"{path:'/cart'}\\\">返信 ({{ count }})</a> </div> \";\n\n/***/ },\n/* 77 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=card v-if=isShow transition=expand> <h4 class=card-header>投稿用フォーム</h4> <div class=\\\"card-inverse card-block\\\"> <label class=control-label for=textarea1>今何してる？</label> <div class=text-xs-right> <textarea id=textarea1 v-model=message placeholder=デフォルト文字列 class=form-control rows=3 @input=saveStubMessage></textarea> <button @click=postMessage class=\\\"btn btn-primary\\\">投稿</button> </div> </div> </div> \";\n\n/***/ },\n/* 78 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=\\\"card card-block\\\" v-touch:swiperight=onSwipeRight v-touch-options:swipe=\\\"{ direction: 'horizontal', threshold: 50 }\\\"> <div header=テキスト> <span>{{ text }}</span> </div> <div header=日付> <span>{{ dateText }}</span> </div> <div header=無効化されたタブ disabled=disabled></div> </div> \";\n\n/***/ },\n/* 79 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=app> <div class=header> <header-bar></header-bar> </div> <div class=page> <router-view></router-view> </div> </div> \";\n\n/***/ },\n/* 80 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=cart> <p v-show=!products.length><i>Please add some products to cart.</i></p> <div v-show=\\\"products.length > 0\\\"> <table class=checkout-table> <thead> <tr> <th>Name</th> <th>Quantity</th> <th>Per Unit</th> <th>Total</th> </tr> </thead> <tbody> <tr v-for=\\\"p in products\\\"> <td><a v-link=\\\"{name:'product', params:{id:p.id}}\\\">{{ p.title }}</a></td> <td>{{ p.price|currency }}</td> <td>{{ p.quantity }}</td> <td>{{ p.price * p.quantity | currency }}</td> </tr> <tr class=total> <td><b>TOTAL</b></td> <td></td> <td></td> <td>{{ total|currency }}</td> </tr> </tbody> </table> <p><button :disabled=!products.length @click=checkout(products) class=checkout-button>Checkout</button></p> <p v-show=checkoutStatus>Checkout {{ checkoutStatus }}.</p> </div> </div> \";\n\n/***/ },\n/* 81 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div class=cart> <post-message-component @event-post=addTweet></post-message-component> <div> <button v-on:click=update class=\\\"btn btn-info-outline\\\">Timeline update</button> </div> <p v-show=\\\"tweets.length===0\\\"><i>メッセージ無し</i></p> <div v-show=\\\"tweets.length > 0\\\"> <div v-for=\\\"t in tweets | orderBy 'date' -1\\\" transition=item> <tweet-component :text=t.text :date=t.date :obj=t @event-remove=removeTweet></tweet-component> </div> </div> </div> \";\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(68)\n\t__vue_script__ = __webpack_require__(32)\n\t__vue_template__ = __webpack_require__(76)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(69)\n\t__vue_script__ = __webpack_require__(33)\n\t__vue_template__ = __webpack_require__(77)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(70)\n\t__vue_script__ = __webpack_require__(34)\n\t__vue_template__ = __webpack_require__(78)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(71)\n\t__vue_script__ = __webpack_require__(35)\n\t__vue_template__ = __webpack_require__(79)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(72)\n\t__vue_script__ = __webpack_require__(36)\n\t__vue_template__ = __webpack_require__(80)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(73)\n\t__vue_script__ = __webpack_require__(37)\n\t__vue_template__ = __webpack_require__(81)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * vue-router v0.7.13\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.VueRouter = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t  function Target(path, matcher, delegate) {\n\t    this.path = path;\n\t    this.matcher = matcher;\n\t    this.delegate = delegate;\n\t  }\n\t\n\t  Target.prototype = {\n\t    to: function to(target, callback) {\n\t      var delegate = this.delegate;\n\t\n\t      if (delegate && delegate.willAddRoute) {\n\t        target = delegate.willAddRoute(this.matcher.target, target);\n\t      }\n\t\n\t      this.matcher.add(this.path, target);\n\t\n\t      if (callback) {\n\t        if (callback.length === 0) {\n\t          throw new Error(\"You must have an argument in the function passed to `to`\");\n\t        }\n\t        this.matcher.addChild(this.path, target, callback, this.delegate);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t\n\t  function Matcher(target) {\n\t    this.routes = {};\n\t    this.children = {};\n\t    this.target = target;\n\t  }\n\t\n\t  Matcher.prototype = {\n\t    add: function add(path, handler) {\n\t      this.routes[path] = handler;\n\t    },\n\t\n\t    addChild: function addChild(path, target, callback, delegate) {\n\t      var matcher = new Matcher(target);\n\t      this.children[path] = matcher;\n\t\n\t      var match = generateMatch(path, matcher, delegate);\n\t\n\t      if (delegate && delegate.contextEntered) {\n\t        delegate.contextEntered(target, match);\n\t      }\n\t\n\t      callback(match);\n\t    }\n\t  };\n\t\n\t  function generateMatch(startingPath, matcher, delegate) {\n\t    return function (path, nestedCallback) {\n\t      var fullPath = startingPath + path;\n\t\n\t      if (nestedCallback) {\n\t        nestedCallback(generateMatch(fullPath, matcher, delegate));\n\t      } else {\n\t        return new Target(startingPath + path, matcher, delegate);\n\t      }\n\t    };\n\t  }\n\t\n\t  function addRoute(routeArray, path, handler) {\n\t    var len = 0;\n\t    for (var i = 0, l = routeArray.length; i < l; i++) {\n\t      len += routeArray[i].path.length;\n\t    }\n\t\n\t    path = path.substr(len);\n\t    var route = { path: path, handler: handler };\n\t    routeArray.push(route);\n\t  }\n\t\n\t  function eachRoute(baseRoute, matcher, callback, binding) {\n\t    var routes = matcher.routes;\n\t\n\t    for (var path in routes) {\n\t      if (routes.hasOwnProperty(path)) {\n\t        var routeArray = baseRoute.slice();\n\t        addRoute(routeArray, path, routes[path]);\n\t\n\t        if (matcher.children[path]) {\n\t          eachRoute(routeArray, matcher.children[path], callback, binding);\n\t        } else {\n\t          callback.call(binding, routeArray);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  function map (callback, addRouteCallback) {\n\t    var matcher = new Matcher();\n\t\n\t    callback(generateMatch(\"\", matcher, this.delegate));\n\t\n\t    eachRoute([], matcher, function (route) {\n\t      if (addRouteCallback) {\n\t        addRouteCallback(this, route);\n\t      } else {\n\t        this.add(route);\n\t      }\n\t    }, this);\n\t  }\n\t\n\t  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\t\n\t  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\t\n\t  var noWarning = false;\n\t  function warn(msg) {\n\t    if (!noWarning && typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  function tryDecode(uri, asComponent) {\n\t    try {\n\t      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n\t    } catch (e) {\n\t      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n\t    }\n\t  }\n\t\n\t  function isArray(test) {\n\t    return Object.prototype.toString.call(test) === \"[object Array]\";\n\t  }\n\t\n\t  // A Segment represents a segment in the original route description.\n\t  // Each Segment type provides an `eachChar` and `regex` method.\n\t  //\n\t  // The `eachChar` method invokes the callback with one or more character\n\t  // specifications. A character specification consumes one or more input\n\t  // characters.\n\t  //\n\t  // The `regex` method returns a regex fragment for the segment. If the\n\t  // segment is a dynamic of star segment, the regex fragment also includes\n\t  // a capture.\n\t  //\n\t  // A character specification contains:\n\t  //\n\t  // * `validChars`: a String with a list of all valid characters, or\n\t  // * `invalidChars`: a String with a list of all invalid characters\n\t  // * `repeat`: true if the character specification can repeat\n\t\n\t  function StaticSegment(string) {\n\t    this.string = string;\n\t  }\n\t  StaticSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      var string = this.string,\n\t          ch;\n\t\n\t      for (var i = 0, l = string.length; i < l; i++) {\n\t        ch = string.charAt(i);\n\t        callback({ validChars: ch });\n\t      }\n\t    },\n\t\n\t    regex: function regex() {\n\t      return this.string.replace(escapeRegex, '\\\\$1');\n\t    },\n\t\n\t    generate: function generate() {\n\t      return this.string;\n\t    }\n\t  };\n\t\n\t  function DynamicSegment(name) {\n\t    this.name = name;\n\t  }\n\t  DynamicSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"/\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"([^/]+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function StarSegment(name) {\n\t    this.name = name;\n\t  }\n\t  StarSegment.prototype = {\n\t    eachChar: function eachChar(callback) {\n\t      callback({ invalidChars: \"\", repeat: true });\n\t    },\n\t\n\t    regex: function regex() {\n\t      return \"(.+)\";\n\t    },\n\t\n\t    generate: function generate(params) {\n\t      var val = params[this.name];\n\t      return val == null ? \":\" + this.name : val;\n\t    }\n\t  };\n\t\n\t  function EpsilonSegment() {}\n\t  EpsilonSegment.prototype = {\n\t    eachChar: function eachChar() {},\n\t    regex: function regex() {\n\t      return \"\";\n\t    },\n\t    generate: function generate() {\n\t      return \"\";\n\t    }\n\t  };\n\t\n\t  function parse(route, names, specificity) {\n\t    // normalize route as not starting with a \"/\". Recognition will\n\t    // also normalize.\n\t    if (route.charAt(0) === \"/\") {\n\t      route = route.substr(1);\n\t    }\n\t\n\t    var segments = route.split(\"/\"),\n\t        results = [];\n\t\n\t    // A routes has specificity determined by the order that its different segments\n\t    // appear in. This system mirrors how the magnitude of numbers written as strings\n\t    // works.\n\t    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n\t    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n\t    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n\t    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n\t    // leading symbol, \"1\".\n\t    // The rule is that symbols to the left carry more weight than symbols to the right\n\t    // when a number is written out as a string. In the above strings, the leading digit\n\t    // represents how many 100's are in the number, and it carries more weight than the middle\n\t    // number which represents how many 10's are in the number.\n\t    // This system of number magnitude works well for route specificity, too. A route written as\n\t    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n\t    // `x`, irrespective of the other parts.\n\t    // Because of this similarity, we assign each type of segment a number value written as a\n\t    // string. We can find the specificity of compound routes by concatenating these strings\n\t    // together, from left to right. After we have looped through all of the segments,\n\t    // we convert the string to a number.\n\t    specificity.val = '';\n\t\n\t    for (var i = 0, l = segments.length; i < l; i++) {\n\t      var segment = segments[i],\n\t          match;\n\t\n\t      if (match = segment.match(/^:([^\\/]+)$/)) {\n\t        results.push(new DynamicSegment(match[1]));\n\t        names.push(match[1]);\n\t        specificity.val += '3';\n\t      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n\t        results.push(new StarSegment(match[1]));\n\t        specificity.val += '2';\n\t        names.push(match[1]);\n\t      } else if (segment === \"\") {\n\t        results.push(new EpsilonSegment());\n\t        specificity.val += '1';\n\t      } else {\n\t        results.push(new StaticSegment(segment));\n\t        specificity.val += '4';\n\t      }\n\t    }\n\t\n\t    specificity.val = +specificity.val;\n\t\n\t    return results;\n\t  }\n\t\n\t  // A State has a character specification and (`charSpec`) and a list of possible\n\t  // subsequent states (`nextStates`).\n\t  //\n\t  // If a State is an accepting state, it will also have several additional\n\t  // properties:\n\t  //\n\t  // * `regex`: A regular expression that is used to extract parameters from paths\n\t  //   that reached this accepting state.\n\t  // * `handlers`: Information on how to convert the list of captures into calls\n\t  //   to registered handlers with the specified parameters\n\t  // * `types`: How many static, dynamic or star segments in this route. Used to\n\t  //   decide which route to use if multiple registered routes match a path.\n\t  //\n\t  // Currently, State is implemented naively by looping over `nextStates` and\n\t  // comparing a character specification against a character. A more efficient\n\t  // implementation would use a hash of keys pointing at one or more next states.\n\t\n\t  function State(charSpec) {\n\t    this.charSpec = charSpec;\n\t    this.nextStates = [];\n\t  }\n\t\n\t  State.prototype = {\n\t    get: function get(charSpec) {\n\t      var nextStates = this.nextStates;\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        var child = nextStates[i];\n\t\n\t        var isEqual = child.charSpec.validChars === charSpec.validChars;\n\t        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\t\n\t        if (isEqual) {\n\t          return child;\n\t        }\n\t      }\n\t    },\n\t\n\t    put: function put(charSpec) {\n\t      var state;\n\t\n\t      // If the character specification already exists in a child of the current\n\t      // state, just return that state.\n\t      if (state = this.get(charSpec)) {\n\t        return state;\n\t      }\n\t\n\t      // Make a new state for the character spec\n\t      state = new State(charSpec);\n\t\n\t      // Insert the new state as a child of the current state\n\t      this.nextStates.push(state);\n\t\n\t      // If this character specification repeats, insert the new state as a child\n\t      // of itself. Note that this will not trigger an infinite loop because each\n\t      // transition during recognition consumes a character.\n\t      if (charSpec.repeat) {\n\t        state.nextStates.push(state);\n\t      }\n\t\n\t      // Return the new state\n\t      return state;\n\t    },\n\t\n\t    // Find a list of child states matching the next character\n\t    match: function match(ch) {\n\t      // DEBUG \"Processing `\" + ch + \"`:\"\n\t      var nextStates = this.nextStates,\n\t          child,\n\t          charSpec,\n\t          chars;\n\t\n\t      // DEBUG \"  \" + debugState(this)\n\t      var returned = [];\n\t\n\t      for (var i = 0, l = nextStates.length; i < l; i++) {\n\t        child = nextStates[i];\n\t\n\t        charSpec = child.charSpec;\n\t\n\t        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) !== -1) {\n\t            returned.push(child);\n\t          }\n\t        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n\t          if (chars.indexOf(ch) === -1) {\n\t            returned.push(child);\n\t          }\n\t        }\n\t      }\n\t\n\t      return returned;\n\t    }\n\t\n\t    /** IF DEBUG\n\t    , debug: function() {\n\t      var charSpec = this.charSpec,\n\t          debug = \"[\",\n\t          chars = charSpec.validChars || charSpec.invalidChars;\n\t       if (charSpec.invalidChars) { debug += \"^\"; }\n\t      debug += chars;\n\t      debug += \"]\";\n\t       if (charSpec.repeat) { debug += \"+\"; }\n\t       return debug;\n\t    }\n\t    END IF **/\n\t  };\n\t\n\t  /** IF DEBUG\n\t  function debug(log) {\n\t    console.log(log);\n\t  }\n\t\n\t  function debugState(state) {\n\t    return state.nextStates.map(function(n) {\n\t      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n\t      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n\t    }).join(\", \")\n\t  }\n\t  END IF **/\n\t\n\t  // Sort the routes by specificity\n\t  function sortSolutions(states) {\n\t    return states.sort(function (a, b) {\n\t      return b.specificity.val - a.specificity.val;\n\t    });\n\t  }\n\t\n\t  function recognizeChar(states, ch) {\n\t    var nextStates = [];\n\t\n\t    for (var i = 0, l = states.length; i < l; i++) {\n\t      var state = states[i];\n\t\n\t      nextStates = nextStates.concat(state.match(ch));\n\t    }\n\t\n\t    return nextStates;\n\t  }\n\t\n\t  var oCreate = Object.create || function (proto) {\n\t    function F() {}\n\t    F.prototype = proto;\n\t    return new F();\n\t  };\n\t\n\t  function RecognizeResults(queryParams) {\n\t    this.queryParams = queryParams || {};\n\t  }\n\t  RecognizeResults.prototype = oCreate({\n\t    splice: Array.prototype.splice,\n\t    slice: Array.prototype.slice,\n\t    push: Array.prototype.push,\n\t    length: 0,\n\t    queryParams: null\n\t  });\n\t\n\t  function findHandler(state, path, queryParams) {\n\t    var handlers = state.handlers,\n\t        regex = state.regex;\n\t    var captures = path.match(regex),\n\t        currentCapture = 1;\n\t    var result = new RecognizeResults(queryParams);\n\t\n\t    for (var i = 0, l = handlers.length; i < l; i++) {\n\t      var handler = handlers[i],\n\t          names = handler.names,\n\t          params = {};\n\t\n\t      for (var j = 0, m = names.length; j < m; j++) {\n\t        params[names[j]] = captures[currentCapture++];\n\t      }\n\t\n\t      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n\t    }\n\t\n\t    return result;\n\t  }\n\t\n\t  function addSegment(currentState, segment) {\n\t    segment.eachChar(function (ch) {\n\t      var state;\n\t\n\t      currentState = currentState.put(ch);\n\t    });\n\t\n\t    return currentState;\n\t  }\n\t\n\t  function decodeQueryParamPart(part) {\n\t    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n\t    part = part.replace(/\\+/gm, '%20');\n\t    return tryDecode(part, true);\n\t  }\n\t\n\t  // The main interface\n\t\n\t  var RouteRecognizer = function RouteRecognizer() {\n\t    this.rootState = new State();\n\t    this.names = {};\n\t  };\n\t\n\t  RouteRecognizer.prototype = {\n\t    add: function add(routes, options) {\n\t      var currentState = this.rootState,\n\t          regex = \"^\",\n\t          specificity = {},\n\t          handlers = [],\n\t          allSegments = [],\n\t          name;\n\t\n\t      var isEmpty = true;\n\t\n\t      for (var i = 0, l = routes.length; i < l; i++) {\n\t        var route = routes[i],\n\t            names = [];\n\t\n\t        var segments = parse(route.path, names, specificity);\n\t\n\t        allSegments = allSegments.concat(segments);\n\t\n\t        for (var j = 0, m = segments.length; j < m; j++) {\n\t          var segment = segments[j];\n\t\n\t          if (segment instanceof EpsilonSegment) {\n\t            continue;\n\t          }\n\t\n\t          isEmpty = false;\n\t\n\t          // Add a \"/\" for the new segment\n\t          currentState = currentState.put({ validChars: \"/\" });\n\t          regex += \"/\";\n\t\n\t          // Add a representation of the segment to the NFA and regex\n\t          currentState = addSegment(currentState, segment);\n\t          regex += segment.regex();\n\t        }\n\t\n\t        var handler = { handler: route.handler, names: names };\n\t        handlers.push(handler);\n\t      }\n\t\n\t      if (isEmpty) {\n\t        currentState = currentState.put({ validChars: \"/\" });\n\t        regex += \"/\";\n\t      }\n\t\n\t      currentState.handlers = handlers;\n\t      currentState.regex = new RegExp(regex + \"$\");\n\t      currentState.specificity = specificity;\n\t\n\t      if (name = options && options.as) {\n\t        this.names[name] = {\n\t          segments: allSegments,\n\t          handlers: handlers\n\t        };\n\t      }\n\t    },\n\t\n\t    handlersFor: function handlersFor(name) {\n\t      var route = this.names[name],\n\t          result = [];\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      for (var i = 0, l = route.handlers.length; i < l; i++) {\n\t        result.push(route.handlers[i]);\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    hasRoute: function hasRoute(name) {\n\t      return !!this.names[name];\n\t    },\n\t\n\t    generate: function generate(name, params) {\n\t      var route = this.names[name],\n\t          output = \"\";\n\t      if (!route) {\n\t        throw new Error(\"There is no route named \" + name);\n\t      }\n\t\n\t      var segments = route.segments;\n\t\n\t      for (var i = 0, l = segments.length; i < l; i++) {\n\t        var segment = segments[i];\n\t\n\t        if (segment instanceof EpsilonSegment) {\n\t          continue;\n\t        }\n\t\n\t        output += \"/\";\n\t        output += segment.generate(params);\n\t      }\n\t\n\t      if (output.charAt(0) !== '/') {\n\t        output = '/' + output;\n\t      }\n\t\n\t      if (params && params.queryParams) {\n\t        output += this.generateQueryString(params.queryParams);\n\t      }\n\t\n\t      return output;\n\t    },\n\t\n\t    generateQueryString: function generateQueryString(params) {\n\t      var pairs = [];\n\t      var keys = [];\n\t      for (var key in params) {\n\t        if (params.hasOwnProperty(key)) {\n\t          keys.push(key);\n\t        }\n\t      }\n\t      keys.sort();\n\t      for (var i = 0, len = keys.length; i < len; i++) {\n\t        key = keys[i];\n\t        var value = params[key];\n\t        if (value == null) {\n\t          continue;\n\t        }\n\t        var pair = encodeURIComponent(key);\n\t        if (isArray(value)) {\n\t          for (var j = 0, l = value.length; j < l; j++) {\n\t            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n\t            pairs.push(arrayPair);\n\t          }\n\t        } else {\n\t          pair += \"=\" + encodeURIComponent(value);\n\t          pairs.push(pair);\n\t        }\n\t      }\n\t\n\t      if (pairs.length === 0) {\n\t        return '';\n\t      }\n\t\n\t      return \"?\" + pairs.join(\"&\");\n\t    },\n\t\n\t    parseQueryString: function parseQueryString(queryString) {\n\t      var pairs = queryString.split(\"&\"),\n\t          queryParams = {};\n\t      for (var i = 0; i < pairs.length; i++) {\n\t        var pair = pairs[i].split('='),\n\t            key = decodeQueryParamPart(pair[0]),\n\t            keyLength = key.length,\n\t            isArray = false,\n\t            value;\n\t        if (pair.length === 1) {\n\t          value = 'true';\n\t        } else {\n\t          //Handle arrays\n\t          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n\t            isArray = true;\n\t            key = key.slice(0, keyLength - 2);\n\t            if (!queryParams[key]) {\n\t              queryParams[key] = [];\n\t            }\n\t          }\n\t          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n\t        }\n\t        if (isArray) {\n\t          queryParams[key].push(value);\n\t        } else {\n\t          queryParams[key] = value;\n\t        }\n\t      }\n\t      return queryParams;\n\t    },\n\t\n\t    recognize: function recognize(path, silent) {\n\t      noWarning = silent;\n\t      var states = [this.rootState],\n\t          pathLen,\n\t          i,\n\t          l,\n\t          queryStart,\n\t          queryParams = {},\n\t          isSlashDropped = false;\n\t\n\t      queryStart = path.indexOf('?');\n\t      if (queryStart !== -1) {\n\t        var queryString = path.substr(queryStart + 1, path.length);\n\t        path = path.substr(0, queryStart);\n\t        if (queryString) {\n\t          queryParams = this.parseQueryString(queryString);\n\t        }\n\t      }\n\t\n\t      path = tryDecode(path);\n\t      if (!path) return;\n\t\n\t      // DEBUG GROUP path\n\t\n\t      if (path.charAt(0) !== \"/\") {\n\t        path = \"/\" + path;\n\t      }\n\t\n\t      pathLen = path.length;\n\t      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n\t        path = path.substr(0, pathLen - 1);\n\t        isSlashDropped = true;\n\t      }\n\t\n\t      for (i = 0, l = path.length; i < l; i++) {\n\t        states = recognizeChar(states, path.charAt(i));\n\t        if (!states.length) {\n\t          break;\n\t        }\n\t      }\n\t\n\t      // END DEBUG GROUP\n\t\n\t      var solutions = [];\n\t      for (i = 0, l = states.length; i < l; i++) {\n\t        if (states[i].handlers) {\n\t          solutions.push(states[i]);\n\t        }\n\t      }\n\t\n\t      states = sortSolutions(solutions);\n\t\n\t      var state = solutions[0];\n\t\n\t      if (state && state.handlers) {\n\t        // if a trailing slash was dropped and a star segment is the last segment\n\t        // specified, put the trailing slash back\n\t        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n\t          path = path + \"/\";\n\t        }\n\t        return findHandler(state, path, queryParams);\n\t      }\n\t    }\n\t  };\n\t\n\t  RouteRecognizer.prototype.map = map;\n\t\n\t  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\t\n\t  // export default for holding the Vue reference\n\t  var exports$1 = {};\n\t  /**\n\t   * Warn stuff.\n\t   *\n\t   * @param {String} msg\n\t   */\n\t\n\t  function warn$1(msg) {\n\t    /* istanbul ignore next */\n\t    if (typeof console !== 'undefined') {\n\t      console.error('[vue-router] ' + msg);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Resolve a relative path.\n\t   *\n\t   * @param {String} base\n\t   * @param {String} relative\n\t   * @param {Boolean} append\n\t   * @return {String}\n\t   */\n\t\n\t  function resolvePath(base, relative, append) {\n\t    var query = base.match(/(\\?.*)$/);\n\t    if (query) {\n\t      query = query[1];\n\t      base = base.slice(0, -query.length);\n\t    }\n\t    // a query!\n\t    if (relative.charAt(0) === '?') {\n\t      return base + relative;\n\t    }\n\t    var stack = base.split('/');\n\t    // remove trailing segment if:\n\t    // - not appending\n\t    // - appending to trailing slash (last segment is empty)\n\t    if (!append || !stack[stack.length - 1]) {\n\t      stack.pop();\n\t    }\n\t    // resolve relative path\n\t    var segments = relative.replace(/^\\//, '').split('/');\n\t    for (var i = 0; i < segments.length; i++) {\n\t      var segment = segments[i];\n\t      if (segment === '.') {\n\t        continue;\n\t      } else if (segment === '..') {\n\t        stack.pop();\n\t      } else {\n\t        stack.push(segment);\n\t      }\n\t    }\n\t    // ensure leading slash\n\t    if (stack[0] !== '') {\n\t      stack.unshift('');\n\t    }\n\t    return stack.join('/');\n\t  }\n\t\n\t  /**\n\t   * Forgiving check for a promise\n\t   *\n\t   * @param {Object} p\n\t   * @return {Boolean}\n\t   */\n\t\n\t  function isPromise(p) {\n\t    return p && typeof p.then === 'function';\n\t  }\n\t\n\t  /**\n\t   * Retrive a route config field from a component instance\n\t   * OR a component contructor.\n\t   *\n\t   * @param {Function|Vue} component\n\t   * @param {String} name\n\t   * @return {*}\n\t   */\n\t\n\t  function getRouteConfig(component, name) {\n\t    var options = component && (component.$options || component.options);\n\t    return options && options.route && options.route[name];\n\t  }\n\t\n\t  /**\n\t   * Resolve an async component factory. Have to do a dirty\n\t   * mock here because of Vue core's internal API depends on\n\t   * an ID check.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Function} cb\n\t   */\n\t\n\t  var resolver = undefined;\n\t\n\t  function resolveAsyncComponent(handler, cb) {\n\t    if (!resolver) {\n\t      resolver = {\n\t        resolve: exports$1.Vue.prototype._resolveComponent,\n\t        $options: {\n\t          components: {\n\t            _: handler.component\n\t          }\n\t        }\n\t      };\n\t    } else {\n\t      resolver.$options.components._ = handler.component;\n\t    }\n\t    resolver.resolve('_', function (Component) {\n\t      handler.component = Component;\n\t      cb(Component);\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Map the dynamic segments in a path to params.\n\t   *\n\t   * @param {String} path\n\t   * @param {Object} params\n\t   * @param {Object} query\n\t   */\n\t\n\t  function mapParams(path, params, query) {\n\t    if (params === undefined) params = {};\n\t\n\t    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n\t      var val = params[key];\n\t      /* istanbul ignore if */\n\t      if (!val) {\n\t        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n\t      }\n\t      return val || '';\n\t    });\n\t    if (query) {\n\t      path += genQuery(query);\n\t    }\n\t    return path;\n\t  }\n\t\n\t  var hashRE = /#.*$/;\n\t\n\t  var HTML5History = (function () {\n\t    function HTML5History(_ref) {\n\t      var root = _ref.root;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HTML5History);\n\t\n\t      if (root && root !== '/') {\n\t        // make sure there's the starting slash\n\t        if (root.charAt(0) !== '/') {\n\t          root = '/' + root;\n\t        }\n\t        // remove trailing slash\n\t        this.root = root.replace(/\\/$/, '');\n\t        this.rootRE = new RegExp('^\\\\' + this.root);\n\t      } else {\n\t        this.root = null;\n\t      }\n\t      this.onChange = onChange;\n\t      // check base tag\n\t      var baseEl = document.querySelector('base');\n\t      this.base = baseEl && baseEl.getAttribute('href');\n\t    }\n\t\n\t    HTML5History.prototype.start = function start() {\n\t      var _this = this;\n\t\n\t      this.listener = function (e) {\n\t        var url = location.pathname + location.search;\n\t        if (_this.root) {\n\t          url = url.replace(_this.rootRE, '');\n\t        }\n\t        _this.onChange(url, e && e.state, location.hash);\n\t      };\n\t      window.addEventListener('popstate', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HTML5History.prototype.stop = function stop() {\n\t      window.removeEventListener('popstate', this.listener);\n\t    };\n\t\n\t    HTML5History.prototype.go = function go(path, replace, append) {\n\t      var url = this.formatPath(path, append);\n\t      if (replace) {\n\t        history.replaceState({}, '', url);\n\t      } else {\n\t        // record scroll position by replacing current state\n\t        history.replaceState({\n\t          pos: {\n\t            x: window.pageXOffset,\n\t            y: window.pageYOffset\n\t          }\n\t        }, '', location.href);\n\t        // then push new state\n\t        history.pushState({}, '', url);\n\t      }\n\t      var hashMatch = path.match(hashRE);\n\t      var hash = hashMatch && hashMatch[0];\n\t      path = url\n\t      // strip hash so it doesn't mess up params\n\t      .replace(hashRE, '')\n\t      // remove root before matching\n\t      .replace(this.rootRE, '');\n\t      this.onChange(path, null, hash);\n\t    };\n\t\n\t    HTML5History.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/'\n\t      // absolute path\n\t      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n\t    };\n\t\n\t    return HTML5History;\n\t  })();\n\t\n\t  var HashHistory = (function () {\n\t    function HashHistory(_ref) {\n\t      var hashbang = _ref.hashbang;\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, HashHistory);\n\t\n\t      this.hashbang = hashbang;\n\t      this.onChange = onChange;\n\t    }\n\t\n\t    HashHistory.prototype.start = function start() {\n\t      var self = this;\n\t      this.listener = function () {\n\t        var path = location.hash;\n\t        var raw = path.replace(/^#!?/, '');\n\t        // always\n\t        if (raw.charAt(0) !== '/') {\n\t          raw = '/' + raw;\n\t        }\n\t        var formattedPath = self.formatPath(raw);\n\t        if (formattedPath !== path) {\n\t          location.replace(formattedPath);\n\t          return;\n\t        }\n\t        // determine query\n\t        // note it's possible to have queries in both the actual URL\n\t        // and the hash fragment itself.\n\t        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n\t        self.onChange(path.replace(/^#!?/, '') + query);\n\t      };\n\t      window.addEventListener('hashchange', this.listener);\n\t      this.listener();\n\t    };\n\t\n\t    HashHistory.prototype.stop = function stop() {\n\t      window.removeEventListener('hashchange', this.listener);\n\t    };\n\t\n\t    HashHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.formatPath(path, append);\n\t      if (replace) {\n\t        location.replace(path);\n\t      } else {\n\t        location.hash = path;\n\t      }\n\t    };\n\t\n\t    HashHistory.prototype.formatPath = function formatPath(path, append) {\n\t      var isAbsoloute = path.charAt(0) === '/';\n\t      var prefix = '#' + (this.hashbang ? '!' : '');\n\t      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n\t    };\n\t\n\t    return HashHistory;\n\t  })();\n\t\n\t  var AbstractHistory = (function () {\n\t    function AbstractHistory(_ref) {\n\t      var onChange = _ref.onChange;\n\t      babelHelpers.classCallCheck(this, AbstractHistory);\n\t\n\t      this.onChange = onChange;\n\t      this.currentPath = '/';\n\t    }\n\t\n\t    AbstractHistory.prototype.start = function start() {\n\t      this.onChange('/');\n\t    };\n\t\n\t    AbstractHistory.prototype.stop = function stop() {\n\t      // noop\n\t    };\n\t\n\t    AbstractHistory.prototype.go = function go(path, replace, append) {\n\t      path = this.currentPath = this.formatPath(path, append);\n\t      this.onChange(path);\n\t    };\n\t\n\t    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n\t      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n\t    };\n\t\n\t    return AbstractHistory;\n\t  })();\n\t\n\t  /**\n\t   * Determine the reusability of an existing router view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function canReuse(view, handler, transition) {\n\t    var component = view.childVM;\n\t    if (!component || !handler) {\n\t      return false;\n\t    }\n\t    // important: check view.Component here because it may\n\t    // have been changed in activate hook\n\t    if (view.Component !== handler.component) {\n\t      return false;\n\t    }\n\t    var canReuseFn = getRouteConfig(component, 'canReuse');\n\t    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n\t      to: transition.to,\n\t      from: transition.from\n\t    }) : true; // defaults to true\n\t  }\n\t\n\t  /**\n\t   * Check if a component can deactivate.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canDeactivate(view, transition, next) {\n\t    var fromComponent = view.childVM;\n\t    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHook(hook, fromComponent, next, {\n\t        expectBoolean: true\n\t      });\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Check if a component can activate.\n\t   *\n\t   * @param {Object} handler\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function canActivate(handler, transition, next) {\n\t    resolveAsyncComponent(handler, function (Component) {\n\t      // have to check due to async-ness\n\t      if (transition.aborted) {\n\t        return;\n\t      }\n\t      // determine if this component can be activated\n\t      var hook = getRouteConfig(Component, 'canActivate');\n\t      if (!hook) {\n\t        next();\n\t      } else {\n\t        transition.callHook(hook, null, next, {\n\t          expectBoolean: true\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Call deactivate hooks for existing router-views.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Function} next\n\t   */\n\t\n\t  function deactivate(view, transition, next) {\n\t    var component = view.childVM;\n\t    var hook = getRouteConfig(component, 'deactivate');\n\t    if (!hook) {\n\t      next();\n\t    } else {\n\t      transition.callHooks(hook, component, next);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Activate / switch component for a router-view.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   * @param {Number} depth\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function activate(view, transition, depth, cb, reuse) {\n\t    var handler = transition.activateQueue[depth];\n\t    if (!handler) {\n\t      saveChildView(view);\n\t      if (view._bound) {\n\t        view.setComponent(null);\n\t      }\n\t      cb && cb();\n\t      return;\n\t    }\n\t\n\t    var Component = view.Component = handler.component;\n\t    var activateHook = getRouteConfig(Component, 'activate');\n\t    var dataHook = getRouteConfig(Component, 'data');\n\t    var waitForData = getRouteConfig(Component, 'waitForData');\n\t\n\t    view.depth = depth;\n\t    view.activated = false;\n\t\n\t    var component = undefined;\n\t    var loading = !!(dataHook && !waitForData);\n\t\n\t    // \"reuse\" is a flag passed down when the parent view is\n\t    // either reused via keep-alive or as a child of a kept-alive view.\n\t    // of course we can only reuse if the current kept-alive instance\n\t    // is of the correct type.\n\t    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\t\n\t    if (reuse) {\n\t      // just reuse\n\t      component = view.childVM;\n\t      component.$loadingRouteData = loading;\n\t    } else {\n\t      saveChildView(view);\n\t\n\t      // unbuild current component. this step also destroys\n\t      // and removes all nested child views.\n\t      view.unbuild(true);\n\t\n\t      // build the new component. this will also create the\n\t      // direct child view of the current one. it will register\n\t      // itself as view.childView.\n\t      component = view.build({\n\t        _meta: {\n\t          $loadingRouteData: loading\n\t        },\n\t        created: function created() {\n\t          this._routerView = view;\n\t        }\n\t      });\n\t\n\t      // handle keep-alive.\n\t      // when a kept-alive child vm is restored, we need to\n\t      // add its cached child views into the router's view list,\n\t      // and also properly update current view's child view.\n\t      if (view.keepAlive) {\n\t        component.$loadingRouteData = loading;\n\t        var cachedChildView = component._keepAliveRouterView;\n\t        if (cachedChildView) {\n\t          view.childView = cachedChildView;\n\t          component._keepAliveRouterView = null;\n\t        }\n\t      }\n\t    }\n\t\n\t    // cleanup the component in case the transition is aborted\n\t    // before the component is ever inserted.\n\t    var cleanup = function cleanup() {\n\t      component.$destroy();\n\t    };\n\t\n\t    // actually insert the component and trigger transition\n\t    var insert = function insert() {\n\t      if (reuse) {\n\t        cb && cb();\n\t        return;\n\t      }\n\t      var router = transition.router;\n\t      if (router._rendered || router._transitionOnLoad) {\n\t        view.transition(component);\n\t      } else {\n\t        // no transition on first render, manual transition\n\t        /* istanbul ignore if */\n\t        if (view.setCurrent) {\n\t          // 0.12 compat\n\t          view.setCurrent(component);\n\t        } else {\n\t          // 1.0\n\t          view.childVM = component;\n\t        }\n\t        component.$before(view.anchor, null, false);\n\t      }\n\t      cb && cb();\n\t    };\n\t\n\t    var afterData = function afterData() {\n\t      // activate the child view\n\t      if (view.childView) {\n\t        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n\t      }\n\t      insert();\n\t    };\n\t\n\t    // called after activation hook is resolved\n\t    var afterActivate = function afterActivate() {\n\t      view.activated = true;\n\t      if (dataHook && waitForData) {\n\t        // wait until data loaded to insert\n\t        loadData(component, transition, dataHook, afterData, cleanup);\n\t      } else {\n\t        // load data and insert at the same time\n\t        if (dataHook) {\n\t          loadData(component, transition, dataHook);\n\t        }\n\t        afterData();\n\t      }\n\t    };\n\t\n\t    if (activateHook) {\n\t      transition.callHooks(activateHook, component, afterActivate, {\n\t        cleanup: cleanup,\n\t        postActivate: true\n\t      });\n\t    } else {\n\t      afterActivate();\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Reuse a view, just reload data if necessary.\n\t   *\n\t   * @param {Directive} view\n\t   * @param {Transition} transition\n\t   */\n\t\n\t  function reuse(view, transition) {\n\t    var component = view.childVM;\n\t    var dataHook = getRouteConfig(component, 'data');\n\t    if (dataHook) {\n\t      loadData(component, transition, dataHook);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Asynchronously load and apply data to component.\n\t   *\n\t   * @param {Vue} component\n\t   * @param {Transition} transition\n\t   * @param {Function} hook\n\t   * @param {Function} cb\n\t   * @param {Function} cleanup\n\t   */\n\t\n\t  function loadData(component, transition, hook, cb, cleanup) {\n\t    component.$loadingRouteData = true;\n\t    transition.callHooks(hook, component, function () {\n\t      component.$loadingRouteData = false;\n\t      component.$emit('route-data-loaded', component);\n\t      cb && cb();\n\t    }, {\n\t      cleanup: cleanup,\n\t      postActivate: true,\n\t      processData: function processData(data) {\n\t        // handle promise sugar syntax\n\t        var promises = [];\n\t        if (isPlainObject(data)) {\n\t          Object.keys(data).forEach(function (key) {\n\t            var val = data[key];\n\t            if (isPromise(val)) {\n\t              promises.push(val.then(function (resolvedVal) {\n\t                component.$set(key, resolvedVal);\n\t              }));\n\t            } else {\n\t              component.$set(key, val);\n\t            }\n\t          });\n\t        }\n\t        if (promises.length) {\n\t          return promises[0].constructor.all(promises);\n\t        }\n\t      }\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Save the child view for a kept-alive view so that\n\t   * we can restore it when it is switched back to.\n\t   *\n\t   * @param {Directive} view\n\t   */\n\t\n\t  function saveChildView(view) {\n\t    if (view.keepAlive && view.childVM && view.childView) {\n\t      view.childVM._keepAliveRouterView = view.childView;\n\t    }\n\t    view.childView = null;\n\t  }\n\t\n\t  /**\n\t   * Check plain object.\n\t   *\n\t   * @param {*} val\n\t   */\n\t\n\t  function isPlainObject(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  /**\n\t   * A RouteTransition object manages the pipeline of a\n\t   * router-view switching process. This is also the object\n\t   * passed into user route hooks.\n\t   *\n\t   * @param {Router} router\n\t   * @param {Route} to\n\t   * @param {Route} from\n\t   */\n\t\n\t  var RouteTransition = (function () {\n\t    function RouteTransition(router, to, from) {\n\t      babelHelpers.classCallCheck(this, RouteTransition);\n\t\n\t      this.router = router;\n\t      this.to = to;\n\t      this.from = from;\n\t      this.next = null;\n\t      this.aborted = false;\n\t      this.done = false;\n\t    }\n\t\n\t    /**\n\t     * Abort current transition and return to previous location.\n\t     */\n\t\n\t    RouteTransition.prototype.abort = function abort() {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        // if the root path throws an error during validation\n\t        // on initial load, it gets caught in an infinite loop.\n\t        var abortingOnLoad = !this.from.path && this.to.path === '/';\n\t        if (!abortingOnLoad) {\n\t          this.router.replace(this.from.path || '/');\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Abort current transition and redirect to a new location.\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    RouteTransition.prototype.redirect = function redirect(path) {\n\t      if (!this.aborted) {\n\t        this.aborted = true;\n\t        if (typeof path === 'string') {\n\t          path = mapParams(path, this.to.params, this.to.query);\n\t        } else {\n\t          path.params = path.params || this.to.params;\n\t          path.query = path.query || this.to.query;\n\t        }\n\t        this.router.replace(path);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * A router view transition's pipeline can be described as\n\t     * follows, assuming we are transitioning from an existing\n\t     * <router-view> chain [Component A, Component B] to a new\n\t     * chain [Component A, Component C]:\n\t     *\n\t     *  A    A\n\t     *  | => |\n\t     *  B    C\n\t     *\n\t     * 1. Reusablity phase:\n\t     *   -> canReuse(A, A)\n\t     *   -> canReuse(B, C)\n\t     *   -> determine new queues:\n\t     *      - deactivation: [B]\n\t     *      - activation: [C]\n\t     *\n\t     * 2. Validation phase:\n\t     *   -> canDeactivate(B)\n\t     *   -> canActivate(C)\n\t     *\n\t     * 3. Activation phase:\n\t     *   -> deactivate(B)\n\t     *   -> activate(C)\n\t     *\n\t     * Each of these steps can be asynchronous, and any\n\t     * step can potentially abort the transition.\n\t     *\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.start = function start(cb) {\n\t      var transition = this;\n\t\n\t      // determine the queue of views to deactivate\n\t      var deactivateQueue = [];\n\t      var view = this.router._rootView;\n\t      while (view) {\n\t        deactivateQueue.unshift(view);\n\t        view = view.childView;\n\t      }\n\t      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\t\n\t      // determine the queue of route handlers to activate\n\t      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n\t        return match.handler;\n\t      });\n\t\n\t      // 1. Reusability phase\n\t      var i = undefined,\n\t          reuseQueue = undefined;\n\t      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n\t        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n\t          break;\n\t        }\n\t      }\n\t      if (i > 0) {\n\t        reuseQueue = reverseDeactivateQueue.slice(0, i);\n\t        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n\t        activateQueue = activateQueue.slice(i);\n\t      }\n\t\n\t      // 2. Validation phase\n\t      transition.runQueue(deactivateQueue, canDeactivate, function () {\n\t        transition.runQueue(activateQueue, canActivate, function () {\n\t          transition.runQueue(deactivateQueue, deactivate, function () {\n\t            // 3. Activation phase\n\t\n\t            // Update router current route\n\t            transition.router._onTransitionValidated(transition);\n\t\n\t            // trigger reuse for all reused views\n\t            reuseQueue && reuseQueue.forEach(function (view) {\n\t              return reuse(view, transition);\n\t            });\n\t\n\t            // the root of the chain that needs to be replaced\n\t            // is the top-most non-reusable view.\n\t            if (deactivateQueue.length) {\n\t              var _view = deactivateQueue[deactivateQueue.length - 1];\n\t              var depth = reuseQueue ? reuseQueue.length : 0;\n\t              activate(_view, transition, depth, cb);\n\t            } else {\n\t              cb();\n\t            }\n\t          });\n\t        });\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Asynchronously and sequentially apply a function to a\n\t     * queue.\n\t     *\n\t     * @param {Array} queue\n\t     * @param {Function} fn\n\t     * @param {Function} cb\n\t     */\n\t\n\t    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n\t      var transition = this;\n\t      step(0);\n\t      function step(index) {\n\t        if (index >= queue.length) {\n\t          cb();\n\t        } else {\n\t          fn(queue[index], transition, function () {\n\t            step(index + 1);\n\t          });\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a user provided route transition hook and handle\n\t     * the response (e.g. if the user returns a promise).\n\t     *\n\t     * If the user neither expects an argument nor returns a\n\t     * promise, the hook is assumed to be synchronous.\n\t     *\n\t     * @param {Function} hook\n\t     * @param {*} [context]\n\t     * @param {Function} [cb]\n\t     * @param {Object} [options]\n\t     *                 - {Boolean} expectBoolean\n\t     *                 - {Boolean} postActive\n\t     *                 - {Function} processData\n\t     *                 - {Function} cleanup\n\t     */\n\t\n\t    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n\t      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\t\n\t      var _ref$expectBoolean = _ref.expectBoolean;\n\t      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n\t      var _ref$postActivate = _ref.postActivate;\n\t      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n\t      var processData = _ref.processData;\n\t      var cleanup = _ref.cleanup;\n\t\n\t      var transition = this;\n\t      var nextCalled = false;\n\t\n\t      // abort the transition\n\t      var abort = function abort() {\n\t        cleanup && cleanup();\n\t        transition.abort();\n\t      };\n\t\n\t      // handle errors\n\t      var onError = function onError(err) {\n\t        postActivate ? next() : abort();\n\t        if (err && !transition.router._suppress) {\n\t          warn$1('Uncaught error during transition: ');\n\t          throw err instanceof Error ? err : new Error(err);\n\t        }\n\t      };\n\t\n\t      // since promise swallows errors, we have to\n\t      // throw it in the next tick...\n\t      var onPromiseError = function onPromiseError(err) {\n\t        try {\n\t          onError(err);\n\t        } catch (e) {\n\t          setTimeout(function () {\n\t            throw e;\n\t          }, 0);\n\t        }\n\t      };\n\t\n\t      // advance the transition to the next step\n\t      var next = function next() {\n\t        if (nextCalled) {\n\t          warn$1('transition.next() should be called only once.');\n\t          return;\n\t        }\n\t        nextCalled = true;\n\t        if (transition.aborted) {\n\t          cleanup && cleanup();\n\t          return;\n\t        }\n\t        cb && cb();\n\t      };\n\t\n\t      var nextWithBoolean = function nextWithBoolean(res) {\n\t        if (typeof res === 'boolean') {\n\t          res ? next() : abort();\n\t        } else if (isPromise(res)) {\n\t          res.then(function (ok) {\n\t            ok ? next() : abort();\n\t          }, onPromiseError);\n\t        } else if (!hook.length) {\n\t          next();\n\t        }\n\t      };\n\t\n\t      var nextWithData = function nextWithData(data) {\n\t        var res = undefined;\n\t        try {\n\t          res = processData(data);\n\t        } catch (err) {\n\t          return onError(err);\n\t        }\n\t        if (isPromise(res)) {\n\t          res.then(next, onPromiseError);\n\t        } else {\n\t          next();\n\t        }\n\t      };\n\t\n\t      // expose a clone of the transition object, so that each\n\t      // hook gets a clean copy and prevent the user from\n\t      // messing with the internals.\n\t      var exposed = {\n\t        to: transition.to,\n\t        from: transition.from,\n\t        abort: abort,\n\t        next: processData ? nextWithData : next,\n\t        redirect: function redirect() {\n\t          transition.redirect.apply(transition, arguments);\n\t        }\n\t      };\n\t\n\t      // actually call the hook\n\t      var res = undefined;\n\t      try {\n\t        res = hook.call(context, exposed);\n\t      } catch (err) {\n\t        return onError(err);\n\t      }\n\t\n\t      if (expectBoolean) {\n\t        // boolean hooks\n\t        nextWithBoolean(res);\n\t      } else if (isPromise(res)) {\n\t        // promise\n\t        if (processData) {\n\t          res.then(nextWithData, onPromiseError);\n\t        } else {\n\t          res.then(next, onPromiseError);\n\t        }\n\t      } else if (processData && isPlainOjbect(res)) {\n\t        // data promise sugar\n\t        nextWithData(res);\n\t      } else if (!hook.length) {\n\t        next();\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Call a single hook or an array of async hooks in series.\n\t     *\n\t     * @param {Array} hooks\n\t     * @param {*} context\n\t     * @param {Function} cb\n\t     * @param {Object} [options]\n\t     */\n\t\n\t    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n\t      var _this = this;\n\t\n\t      if (Array.isArray(hooks)) {\n\t        this.runQueue(hooks, function (hook, _, next) {\n\t          if (!_this.aborted) {\n\t            _this.callHook(hook, context, next, options);\n\t          }\n\t        }, cb);\n\t      } else {\n\t        this.callHook(hooks, context, cb, options);\n\t      }\n\t    };\n\t\n\t    return RouteTransition;\n\t  })();\n\t\n\t  function isPlainOjbect(val) {\n\t    return Object.prototype.toString.call(val) === '[object Object]';\n\t  }\n\t\n\t  function toArray(val) {\n\t    return val ? Array.prototype.slice.call(val) : [];\n\t  }\n\t\n\t  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\t\n\t  /**\n\t   * Route Context Object\n\t   *\n\t   * @param {String} path\n\t   * @param {Router} router\n\t   */\n\t\n\t  var Route = function Route(path, router) {\n\t    var _this = this;\n\t\n\t    babelHelpers.classCallCheck(this, Route);\n\t\n\t    var matched = router._recognizer.recognize(path);\n\t    if (matched) {\n\t      // copy all custom fields from route configs\n\t      [].forEach.call(matched, function (match) {\n\t        for (var key in match.handler) {\n\t          if (!internalKeysRE.test(key)) {\n\t            _this[key] = match.handler[key];\n\t          }\n\t        }\n\t      });\n\t      // set query and params\n\t      this.query = matched.queryParams;\n\t      this.params = [].reduce.call(matched, function (prev, cur) {\n\t        if (cur.params) {\n\t          for (var key in cur.params) {\n\t            prev[key] = cur.params[key];\n\t          }\n\t        }\n\t        return prev;\n\t      }, {});\n\t    }\n\t    // expose path and router\n\t    this.path = path;\n\t    // for internal use\n\t    this.matched = matched || router._notFoundHandler;\n\t    // internal reference to router\n\t    Object.defineProperty(this, 'router', {\n\t      enumerable: false,\n\t      value: router\n\t    });\n\t    // Important: freeze self to prevent observation\n\t    Object.freeze(this);\n\t  };\n\t\n\t  function applyOverride (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var extend = _Vue$util.extend;\n\t    var isArray = _Vue$util.isArray;\n\t    var defineReactive = _Vue$util.defineReactive;\n\t\n\t    // override Vue's init and destroy process to keep track of router instances\n\t    var init = Vue.prototype._init;\n\t    Vue.prototype._init = function (options) {\n\t      options = options || {};\n\t      var root = options._parent || options.parent || this;\n\t      var router = root.$router;\n\t      var route = root.$route;\n\t      if (router) {\n\t        // expose router\n\t        this.$router = router;\n\t        router._children.push(this);\n\t        /* istanbul ignore if */\n\t        if (this._defineMeta) {\n\t          // 0.12\n\t          this._defineMeta('$route', route);\n\t        } else {\n\t          // 1.0\n\t          defineReactive(this, '$route', route);\n\t        }\n\t      }\n\t      init.call(this, options);\n\t    };\n\t\n\t    var destroy = Vue.prototype._destroy;\n\t    Vue.prototype._destroy = function () {\n\t      if (!this._isBeingDestroyed && this.$router) {\n\t        this.$router._children.$remove(this);\n\t      }\n\t      destroy.apply(this, arguments);\n\t    };\n\t\n\t    // 1.0 only: enable route mixins\n\t    var strats = Vue.config.optionMergeStrategies;\n\t    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\t\n\t    if (strats) {\n\t      strats.route = function (parentVal, childVal) {\n\t        if (!childVal) return parentVal;\n\t        if (!parentVal) return childVal;\n\t        var ret = {};\n\t        extend(ret, parentVal);\n\t        for (var key in childVal) {\n\t          var a = ret[key];\n\t          var b = childVal[key];\n\t          // for data, activate and deactivate, we need to merge them into\n\t          // arrays similar to lifecycle hooks.\n\t          if (a && hooksToMergeRE.test(key)) {\n\t            ret[key] = (isArray(a) ? a : [a]).concat(b);\n\t          } else {\n\t            ret[key] = b;\n\t          }\n\t        }\n\t        return ret;\n\t      };\n\t    }\n\t  }\n\t\n\t  function View (Vue) {\n\t\n\t    var _ = Vue.util;\n\t    var componentDef =\n\t    // 0.12\n\t    Vue.directive('_component') ||\n\t    // 1.0\n\t    Vue.internalDirectives.component;\n\t    // <router-view> extends the internal component directive\n\t    var viewDef = _.extend({}, componentDef);\n\t\n\t    // with some overrides\n\t    _.extend(viewDef, {\n\t\n\t      _isRouterView: true,\n\t\n\t      bind: function bind() {\n\t        var route = this.vm.$route;\n\t        /* istanbul ignore if */\n\t        if (!route) {\n\t          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n\t          return;\n\t        }\n\t        // force dynamic directive so v-component doesn't\n\t        // attempt to build right now\n\t        this._isDynamicLiteral = true;\n\t        // finally, init by delegating to v-component\n\t        componentDef.bind.call(this);\n\t\n\t        // locate the parent view\n\t        var parentView = undefined;\n\t        var parent = this.vm;\n\t        while (parent) {\n\t          if (parent._routerView) {\n\t            parentView = parent._routerView;\n\t            break;\n\t          }\n\t          parent = parent.$parent;\n\t        }\n\t        if (parentView) {\n\t          // register self as a child of the parent view,\n\t          // instead of activating now. This is so that the\n\t          // child's activate hook is called after the\n\t          // parent's has resolved.\n\t          this.parentView = parentView;\n\t          parentView.childView = this;\n\t        } else {\n\t          // this is the root view!\n\t          var router = route.router;\n\t          router._rootView = this;\n\t        }\n\t\n\t        // handle late-rendered view\n\t        // two possibilities:\n\t        // 1. root view rendered after transition has been\n\t        //    validated;\n\t        // 2. child view rendered after parent view has been\n\t        //    activated.\n\t        var transition = route.router._currentTransition;\n\t        if (!parentView && transition.done || parentView && parentView.activated) {\n\t          var depth = parentView ? parentView.depth + 1 : 0;\n\t          activate(this, transition, depth);\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        if (this.parentView) {\n\t          this.parentView.childView = null;\n\t        }\n\t        componentDef.unbind.call(this);\n\t      }\n\t    });\n\t\n\t    Vue.elementDirective('router-view', viewDef);\n\t  }\n\t\n\t  var trailingSlashRE = /\\/$/;\n\t  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\t  var queryStringRE = /\\?.*$/;\n\t\n\t  // install v-link, which provides navigation support for\n\t  // HTML5 history mode\n\t  function Link (Vue) {\n\t    var _Vue$util = Vue.util;\n\t    var _bind = _Vue$util.bind;\n\t    var isObject = _Vue$util.isObject;\n\t    var addClass = _Vue$util.addClass;\n\t    var removeClass = _Vue$util.removeClass;\n\t\n\t    var onPriority = Vue.directive('on').priority;\n\t    var LINK_UPDATE = '__vue-router-link-update__';\n\t\n\t    var activeId = 0;\n\t\n\t    Vue.directive('link-active', {\n\t      priority: 9999,\n\t      bind: function bind() {\n\t        var _this = this;\n\t\n\t        var id = String(activeId++);\n\t        // collect v-links contained within this element.\n\t        // we need do this here before the parent-child relationship\n\t        // gets messed up by terminal directives (if, for, components)\n\t        var childLinks = this.el.querySelectorAll('[v-link]');\n\t        for (var i = 0, l = childLinks.length; i < l; i++) {\n\t          var link = childLinks[i];\n\t          var existingId = link.getAttribute(LINK_UPDATE);\n\t          var value = existingId ? existingId + ',' + id : id;\n\t          // leave a mark on the link element which can be persisted\n\t          // through fragment clones.\n\t          link.setAttribute(LINK_UPDATE, value);\n\t        }\n\t        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n\t          if (link.activeIds.indexOf(id) > -1) {\n\t            link.updateClasses(path, _this.el);\n\t          }\n\t        });\n\t      },\n\t      unbind: function unbind() {\n\t        this.vm.$off(LINK_UPDATE, this.cb);\n\t      }\n\t    });\n\t\n\t    Vue.directive('link', {\n\t      priority: onPriority - 2,\n\t\n\t      bind: function bind() {\n\t        var vm = this.vm;\n\t        /* istanbul ignore if */\n\t        if (!vm.$route) {\n\t          warn$1('v-link can only be used inside a router-enabled app.');\n\t          return;\n\t        }\n\t        this.router = vm.$route.router;\n\t        // update things when the route changes\n\t        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n\t        // check v-link-active ids\n\t        var activeIds = this.el.getAttribute(LINK_UPDATE);\n\t        if (activeIds) {\n\t          this.el.removeAttribute(LINK_UPDATE);\n\t          this.activeIds = activeIds.split(',');\n\t        }\n\t        // no need to handle click if link expects to be opened\n\t        // in a new window/tab.\n\t        /* istanbul ignore if */\n\t        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n\t          return;\n\t        }\n\t        // handle click\n\t        this.handler = _bind(this.onClick, this);\n\t        this.el.addEventListener('click', this.handler);\n\t      },\n\t\n\t      update: function update(target) {\n\t        this.target = target;\n\t        if (isObject(target)) {\n\t          this.append = target.append;\n\t          this.exact = target.exact;\n\t          this.prevActiveClass = this.activeClass;\n\t          this.activeClass = target.activeClass;\n\t        }\n\t        this.onRouteUpdate(this.vm.$route);\n\t      },\n\t\n\t      onClick: function onClick(e) {\n\t        // don't redirect with control keys\n\t        /* istanbul ignore if */\n\t        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t        // don't redirect when preventDefault called\n\t        /* istanbul ignore if */\n\t        if (e.defaultPrevented) return;\n\t        // don't redirect on right click\n\t        /* istanbul ignore if */\n\t        if (e.button !== 0) return;\n\t\n\t        var target = this.target;\n\t        if (target) {\n\t          // v-link with expression, just go\n\t          e.preventDefault();\n\t          this.router.go(target);\n\t        } else {\n\t          // no expression, delegate for an <a> inside\n\t          var el = e.target;\n\t          while (el.tagName !== 'A' && el !== this.el) {\n\t            el = el.parentNode;\n\t          }\n\t          if (el.tagName === 'A' && sameOrigin(el)) {\n\t            e.preventDefault();\n\t            var path = el.pathname;\n\t            if (this.router.history.root) {\n\t              path = path.replace(this.router.history.rootRE, '');\n\t            }\n\t            this.router.go({\n\t              path: path,\n\t              replace: target && target.replace,\n\t              append: target && target.append\n\t            });\n\t          }\n\t        }\n\t      },\n\t\n\t      onRouteUpdate: function onRouteUpdate(route) {\n\t        // router.stringifyPath is dependent on current route\n\t        // and needs to be called again whenver route changes.\n\t        var newPath = this.router.stringifyPath(this.target);\n\t        if (this.path !== newPath) {\n\t          this.path = newPath;\n\t          this.updateActiveMatch();\n\t          this.updateHref();\n\t        }\n\t        if (this.activeIds) {\n\t          this.vm.$emit(LINK_UPDATE, this, route.path);\n\t        } else {\n\t          this.updateClasses(route.path, this.el);\n\t        }\n\t      },\n\t\n\t      updateActiveMatch: function updateActiveMatch() {\n\t        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n\t      },\n\t\n\t      updateHref: function updateHref() {\n\t        if (this.el.tagName !== 'A') {\n\t          return;\n\t        }\n\t        var path = this.path;\n\t        var router = this.router;\n\t        var isAbsolute = path.charAt(0) === '/';\n\t        // do not format non-hash relative paths\n\t        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n\t        if (href) {\n\t          this.el.href = href;\n\t        } else {\n\t          this.el.removeAttribute('href');\n\t        }\n\t      },\n\t\n\t      updateClasses: function updateClasses(path, el) {\n\t        var activeClass = this.activeClass || this.router._linkActiveClass;\n\t        // clear old class\n\t        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n\t          toggleClasses(el, this.prevActiveClass, removeClass);\n\t        }\n\t        // remove query string before matching\n\t        var dest = this.path.replace(queryStringRE, '');\n\t        path = path.replace(queryStringRE, '');\n\t        // add new class\n\t        if (this.exact) {\n\t          if (dest === path ||\n\t          // also allow additional trailing slash\n\t          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        } else {\n\t          if (this.activeRE && this.activeRE.test(path)) {\n\t            toggleClasses(el, activeClass, addClass);\n\t          } else {\n\t            toggleClasses(el, activeClass, removeClass);\n\t          }\n\t        }\n\t      },\n\t\n\t      unbind: function unbind() {\n\t        this.el.removeEventListener('click', this.handler);\n\t        this.unwatch && this.unwatch();\n\t      }\n\t    });\n\t\n\t    function sameOrigin(link) {\n\t      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n\t    }\n\t\n\t    // this function is copied from v-bind:class implementation until\n\t    // we properly expose it...\n\t    function toggleClasses(el, key, fn) {\n\t      key = key.trim();\n\t      if (key.indexOf(' ') === -1) {\n\t        fn(el, key);\n\t        return;\n\t      }\n\t      var keys = key.split(/\\s+/);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        fn(el, keys[i]);\n\t      }\n\t    }\n\t  }\n\t\n\t  var historyBackends = {\n\t    abstract: AbstractHistory,\n\t    hash: HashHistory,\n\t    html5: HTML5History\n\t  };\n\t\n\t  // late bind during install\n\t  var Vue = undefined;\n\t\n\t  /**\n\t   * Router constructor\n\t   *\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  var Router = (function () {\n\t    function Router() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$hashbang = _ref.hashbang;\n\t      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n\t      var _ref$abstract = _ref.abstract;\n\t      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n\t      var _ref$history = _ref.history;\n\t      var history = _ref$history === undefined ? false : _ref$history;\n\t      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n\t      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n\t      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n\t      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n\t      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n\t      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n\t      var _ref$root = _ref.root;\n\t      var root = _ref$root === undefined ? null : _ref$root;\n\t      var _ref$linkActiveClass = _ref.linkActiveClass;\n\t      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n\t      babelHelpers.classCallCheck(this, Router);\n\t\n\t      /* istanbul ignore if */\n\t      if (!Router.installed) {\n\t        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n\t      }\n\t\n\t      // Vue instances\n\t      this.app = null;\n\t      this._children = [];\n\t\n\t      // route recognizer\n\t      this._recognizer = new RouteRecognizer();\n\t      this._guardRecognizer = new RouteRecognizer();\n\t\n\t      // state\n\t      this._started = false;\n\t      this._startCb = null;\n\t      this._currentRoute = {};\n\t      this._currentTransition = null;\n\t      this._previousTransition = null;\n\t      this._notFoundHandler = null;\n\t      this._notFoundRedirect = null;\n\t      this._beforeEachHooks = [];\n\t      this._afterEachHooks = [];\n\t\n\t      // trigger transition on initial render?\n\t      this._rendered = false;\n\t      this._transitionOnLoad = transitionOnLoad;\n\t\n\t      // history mode\n\t      this._root = root;\n\t      this._abstract = abstract;\n\t      this._hashbang = hashbang;\n\t\n\t      // check if HTML5 history is available\n\t      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n\t      this._history = history && hasPushState;\n\t      this._historyFallback = history && !hasPushState;\n\t\n\t      // create history object\n\t      var inBrowser = Vue.util.inBrowser;\n\t      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\t\n\t      var History = historyBackends[this.mode];\n\t      this.history = new History({\n\t        root: root,\n\t        hashbang: this._hashbang,\n\t        onChange: function onChange(path, state, anchor) {\n\t          _this._match(path, state, anchor);\n\t        }\n\t      });\n\t\n\t      // other options\n\t      this._saveScrollPosition = saveScrollPosition;\n\t      this._linkActiveClass = linkActiveClass;\n\t      this._suppress = suppressTransitionError;\n\t    }\n\t\n\t    /**\n\t     * Allow directly passing components to a route\n\t     * definition.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} handler\n\t     */\n\t\n\t    // API ===================================================\n\t\n\t    /**\n\t    * Register a map of top-level paths.\n\t    *\n\t    * @param {Object} map\n\t    */\n\t\n\t    Router.prototype.map = function map(_map) {\n\t      for (var route in _map) {\n\t        this.on(route, _map[route]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Register a single root-level path\n\t     *\n\t     * @param {String} rootPath\n\t     * @param {Object} handler\n\t     *                 - {String} component\n\t     *                 - {Object} [subRoutes]\n\t     *                 - {Boolean} [forceRefresh]\n\t     *                 - {Function} [before]\n\t     *                 - {Function} [after]\n\t     */\n\t\n\t    Router.prototype.on = function on(rootPath, handler) {\n\t      if (rootPath === '*') {\n\t        this._notFound(handler);\n\t      } else {\n\t        this._addRoute(rootPath, handler, []);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set redirects.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.redirect = function redirect(map) {\n\t      for (var path in map) {\n\t        this._addRedirect(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set aliases.\n\t     *\n\t     * @param {Object} map\n\t     */\n\t\n\t    Router.prototype.alias = function alias(map) {\n\t      for (var path in map) {\n\t        this._addAlias(path, map[path]);\n\t      }\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global before hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.beforeEach = function beforeEach(fn) {\n\t      this._beforeEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Set global after hook.\n\t     *\n\t     * @param {Function} fn\n\t     */\n\t\n\t    Router.prototype.afterEach = function afterEach(fn) {\n\t      this._afterEachHooks.push(fn);\n\t      return this;\n\t    };\n\t\n\t    /**\n\t     * Navigate to a given path.\n\t     * The path can be an object describing a named path in\n\t     * the format of { name: '...', params: {}, query: {}}\n\t     * The path is assumed to be already decoded, and will\n\t     * be resolved against root (if provided)\n\t     *\n\t     * @param {String|Object} path\n\t     * @param {Boolean} [replace]\n\t     */\n\t\n\t    Router.prototype.go = function go(path) {\n\t      var replace = false;\n\t      var append = false;\n\t      if (Vue.util.isObject(path)) {\n\t        replace = path.replace;\n\t        append = path.append;\n\t      }\n\t      path = this.stringifyPath(path);\n\t      if (path) {\n\t        this.history.go(path, replace, append);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Short hand for replacing current path\n\t     *\n\t     * @param {String} path\n\t     */\n\t\n\t    Router.prototype.replace = function replace(path) {\n\t      if (typeof path === 'string') {\n\t        path = { path: path };\n\t      }\n\t      path.replace = true;\n\t      this.go(path);\n\t    };\n\t\n\t    /**\n\t     * Start the router.\n\t     *\n\t     * @param {VueConstructor} App\n\t     * @param {String|Element} container\n\t     * @param {Function} [cb]\n\t     */\n\t\n\t    Router.prototype.start = function start(App, container, cb) {\n\t      /* istanbul ignore if */\n\t      if (this._started) {\n\t        warn$1('already started.');\n\t        return;\n\t      }\n\t      this._started = true;\n\t      this._startCb = cb;\n\t      if (!this.app) {\n\t        /* istanbul ignore if */\n\t        if (!App || !container) {\n\t          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n\t        }\n\t        /* istanbul ignore if */\n\t        if (App instanceof Vue) {\n\t          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n\t        }\n\t        this._appContainer = container;\n\t        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n\t        // give it a name for better debugging\n\t        Ctor.options.name = Ctor.options.name || 'RouterApp';\n\t      }\n\t\n\t      // handle history fallback in browsers that do not\n\t      // support HTML5 history API\n\t      if (this._historyFallback) {\n\t        var _location = window.location;\n\t        var _history = new HTML5History({ root: this._root });\n\t        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n\t        if (path && path !== '/') {\n\t          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n\t          return;\n\t        }\n\t      }\n\t\n\t      this.history.start();\n\t    };\n\t\n\t    /**\n\t     * Stop listening to route changes.\n\t     */\n\t\n\t    Router.prototype.stop = function stop() {\n\t      this.history.stop();\n\t      this._started = false;\n\t    };\n\t\n\t    /**\n\t     * Normalize named route object / string paths into\n\t     * a string.\n\t     *\n\t     * @param {Object|String|Number} path\n\t     * @return {String}\n\t     */\n\t\n\t    Router.prototype.stringifyPath = function stringifyPath(path) {\n\t      var generatedPath = '';\n\t      if (path && typeof path === 'object') {\n\t        if (path.name) {\n\t          var extend = Vue.util.extend;\n\t          var currentParams = this._currentTransition && this._currentTransition.to.params;\n\t          var targetParams = path.params || {};\n\t          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n\t          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n\t        } else if (path.path) {\n\t          generatedPath = encodeURI(path.path);\n\t        }\n\t        if (path.query) {\n\t          // note: the generated query string is pre-URL-encoded by the recognizer\n\t          var query = this._recognizer.generateQueryString(path.query);\n\t          if (generatedPath.indexOf('?') > -1) {\n\t            generatedPath += '&' + query.slice(1);\n\t          } else {\n\t            generatedPath += query;\n\t          }\n\t        }\n\t      } else {\n\t        generatedPath = encodeURI(path ? path + '' : '');\n\t      }\n\t      return generatedPath;\n\t    };\n\t\n\t    // Internal methods ======================================\n\t\n\t    /**\n\t    * Add a route containing a list of segments to the internal\n\t    * route recognizer. Will be called recursively to add all\n\t    * possible sub-routes.\n\t    *\n\t    * @param {String} path\n\t    * @param {Object} handler\n\t    * @param {Array} segments\n\t    */\n\t\n\t    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n\t      guardComponent(path, handler);\n\t      handler.path = path;\n\t      handler.fullPath = (segments.reduce(function (path, segment) {\n\t        return path + segment.path;\n\t      }, '') + path).replace('//', '/');\n\t      segments.push({\n\t        path: path,\n\t        handler: handler\n\t      });\n\t      this._recognizer.add(segments, {\n\t        as: handler.name\n\t      });\n\t      // add sub routes\n\t      if (handler.subRoutes) {\n\t        for (var subPath in handler.subRoutes) {\n\t          // recursively walk all sub routes\n\t          this._addRoute(subPath, handler.subRoutes[subPath],\n\t          // pass a copy in recursion to avoid mutating\n\t          // across branches\n\t          segments.slice());\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Set the notFound route handler.\n\t     *\n\t     * @param {Object} handler\n\t     */\n\t\n\t    Router.prototype._notFound = function _notFound(handler) {\n\t      guardComponent('*', handler);\n\t      this._notFoundHandler = [{ handler: handler }];\n\t    };\n\t\n\t    /**\n\t     * Add a redirect record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} redirectPath\n\t     */\n\t\n\t    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n\t      if (path === '*') {\n\t        this._notFoundRedirect = redirectPath;\n\t      } else {\n\t        this._addGuard(path, redirectPath, this.replace);\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Add an alias record.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} aliasPath\n\t     */\n\t\n\t    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n\t      this._addGuard(path, aliasPath, this._match);\n\t    };\n\t\n\t    /**\n\t     * Add a path guard.\n\t     *\n\t     * @param {String} path\n\t     * @param {String} mappedPath\n\t     * @param {Function} handler\n\t     */\n\t\n\t    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n\t      var _this2 = this;\n\t\n\t      this._guardRecognizer.add([{\n\t        path: path,\n\t        handler: function handler(match, query) {\n\t          var realPath = mapParams(mappedPath, match.params, query);\n\t          _handler.call(_this2, realPath);\n\t        }\n\t      }]);\n\t    };\n\t\n\t    /**\n\t     * Check if a path matches any redirect records.\n\t     *\n\t     * @param {String} path\n\t     * @return {Boolean} - if true, will skip normal match.\n\t     */\n\t\n\t    Router.prototype._checkGuard = function _checkGuard(path) {\n\t      var matched = this._guardRecognizer.recognize(path, true);\n\t      if (matched) {\n\t        matched[0].handler(matched[0], matched.queryParams);\n\t        return true;\n\t      } else if (this._notFoundRedirect) {\n\t        matched = this._recognizer.recognize(path);\n\t        if (!matched) {\n\t          this.replace(this._notFoundRedirect);\n\t          return true;\n\t        }\n\t      }\n\t    };\n\t\n\t    /**\n\t     * Match a URL path and set the route context on vm,\n\t     * triggering view updates.\n\t     *\n\t     * @param {String} path\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._match = function _match(path, state, anchor) {\n\t      var _this3 = this;\n\t\n\t      if (this._checkGuard(path)) {\n\t        return;\n\t      }\n\t\n\t      var currentRoute = this._currentRoute;\n\t      var currentTransition = this._currentTransition;\n\t\n\t      if (currentTransition) {\n\t        if (currentTransition.to.path === path) {\n\t          // do nothing if we have an active transition going to the same path\n\t          return;\n\t        } else if (currentRoute.path === path) {\n\t          // We are going to the same path, but we also have an ongoing but\n\t          // not-yet-validated transition. Abort that transition and reset to\n\t          // prev transition.\n\t          currentTransition.aborted = true;\n\t          this._currentTransition = this._prevTransition;\n\t          return;\n\t        } else {\n\t          // going to a totally different path. abort ongoing transition.\n\t          currentTransition.aborted = true;\n\t        }\n\t      }\n\t\n\t      // construct new route and transition context\n\t      var route = new Route(path, this);\n\t      var transition = new RouteTransition(this, route, currentRoute);\n\t\n\t      // current transition is updated right now.\n\t      // however, current route will only be updated after the transition has\n\t      // been validated.\n\t      this._prevTransition = currentTransition;\n\t      this._currentTransition = transition;\n\t\n\t      if (!this.app) {\n\t        (function () {\n\t          // initial render\n\t          var router = _this3;\n\t          _this3.app = new _this3._appConstructor({\n\t            el: _this3._appContainer,\n\t            created: function created() {\n\t              this.$router = router;\n\t            },\n\t            _meta: {\n\t              $route: route\n\t            }\n\t          });\n\t        })();\n\t      }\n\t\n\t      // check global before hook\n\t      var beforeHooks = this._beforeEachHooks;\n\t      var startTransition = function startTransition() {\n\t        transition.start(function () {\n\t          _this3._postTransition(route, state, anchor);\n\t        });\n\t      };\n\t\n\t      if (beforeHooks.length) {\n\t        transition.runQueue(beforeHooks, function (hook, _, next) {\n\t          if (transition === _this3._currentTransition) {\n\t            transition.callHook(hook, null, next, {\n\t              expectBoolean: true\n\t            });\n\t          }\n\t        }, startTransition);\n\t      } else {\n\t        startTransition();\n\t      }\n\t\n\t      if (!this._rendered && this._startCb) {\n\t        this._startCb.call(null);\n\t      }\n\t\n\t      // HACK:\n\t      // set rendered to true after the transition start, so\n\t      // that components that are acitvated synchronously know\n\t      // whether it is the initial render.\n\t      this._rendered = true;\n\t    };\n\t\n\t    /**\n\t     * Set current to the new transition.\n\t     * This is called by the transition object when the\n\t     * validation of a route has succeeded.\n\t     *\n\t     * @param {Transition} transition\n\t     */\n\t\n\t    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n\t      // set current route\n\t      var route = this._currentRoute = transition.to;\n\t      // update route context for all children\n\t      if (this.app.$route !== route) {\n\t        this.app.$route = route;\n\t        this._children.forEach(function (child) {\n\t          child.$route = route;\n\t        });\n\t      }\n\t      // call global after hook\n\t      if (this._afterEachHooks.length) {\n\t        this._afterEachHooks.forEach(function (hook) {\n\t          return hook.call(null, {\n\t            to: transition.to,\n\t            from: transition.from\n\t          });\n\t        });\n\t      }\n\t      this._currentTransition.done = true;\n\t    };\n\t\n\t    /**\n\t     * Handle stuff after the transition.\n\t     *\n\t     * @param {Route} route\n\t     * @param {Object} [state]\n\t     * @param {String} [anchor]\n\t     */\n\t\n\t    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n\t      // handle scroll positions\n\t      // saved scroll positions take priority\n\t      // then we check if the path has an anchor\n\t      var pos = state && state.pos;\n\t      if (pos && this._saveScrollPosition) {\n\t        Vue.nextTick(function () {\n\t          window.scrollTo(pos.x, pos.y);\n\t        });\n\t      } else if (anchor) {\n\t        Vue.nextTick(function () {\n\t          var el = document.getElementById(anchor.slice(1));\n\t          if (el) {\n\t            window.scrollTo(window.scrollX, el.offsetTop);\n\t          }\n\t        });\n\t      }\n\t    };\n\t\n\t    return Router;\n\t  })();\n\t\n\t  function guardComponent(path, handler) {\n\t    var comp = handler.component;\n\t    if (Vue.util.isPlainObject(comp)) {\n\t      comp = handler.component = Vue.extend(comp);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (typeof comp !== 'function') {\n\t      handler.component = null;\n\t      warn$1('invalid component for route \"' + path + '\".');\n\t    }\n\t  }\n\t\n\t  /* Installation */\n\t\n\t  Router.installed = false;\n\t\n\t  /**\n\t   * Installation interface.\n\t   * Install the necessary directives.\n\t   */\n\t\n\t  Router.install = function (externalVue) {\n\t    /* istanbul ignore if */\n\t    if (Router.installed) {\n\t      warn$1('already installed.');\n\t      return;\n\t    }\n\t    Vue = externalVue;\n\t    applyOverride(Vue);\n\t    View(Vue);\n\t    Link(Vue);\n\t    exports$1.Vue = Vue;\n\t    Router.installed = true;\n\t  };\n\t\n\t  // auto install\n\t  /* istanbul ignore if */\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    window.Vue.use(Router);\n\t  }\n\t\n\t  return Router;\n\t\n\t}));\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t;(function () {\n\t\n\t  var vueTouch = {}\n\t  var Hammer =  true\n\t    ? __webpack_require__(74)\n\t    : window.Hammer\n\t  var gestures = ['tap', 'pan', 'pinch', 'press', 'rotate', 'swipe']\n\t  var directions = ['up', 'down', 'left', 'right', 'horizontal', 'vertical', 'all']\n\t  var customEvents = {}\n\t\n\t  if (!Hammer) {\n\t    throw new Error('[vue-touch] cannot locate Hammer.js.')\n\t  }\n\t\n\t  // exposed global options\n\t  vueTouch.config = {}\n\t\n\t  vueTouch.install = function (Vue) {\n\t\n\t    Vue.directive('touch', {\n\t\n\t      isFn: true,\n\t      acceptStatement: true,\n\t      priority: Vue.directive('on').priority,\n\t\n\t      bind: function () {\n\t        if (!this.el.hammer) {\n\t          this.el.hammer = new Hammer.Manager(this.el)\n\t        }\n\t        var mc = this.mc = this.el.hammer\n\t        // determine event type\n\t        var event = this.arg\n\t        if (!event) {\n\t          console.warn('[vue-touch] event type argument is required.')\n\t        }\n\t        var recognizerType, recognizer\n\t\n\t        if (customEvents[event]) {\n\t          // custom event\n\t          var custom = customEvents[event]\n\t          recognizerType = custom.type\n\t          recognizer = new Hammer[capitalize(recognizerType)](custom)\n\t          recognizer.recognizeWith(mc.recognizers)\n\t          mc.add(recognizer)\n\t        } else {\n\t          // built-in event\n\t          for (var i = 0; i < gestures.length; i++) {\n\t            if (event.indexOf(gestures[i]) === 0) {\n\t              recognizerType = gestures[i]\n\t              break\n\t            }\n\t          }\n\t          if (!recognizerType) {\n\t            console.warn('[vue-touch] invalid event type: ' + event)\n\t            return\n\t          }\n\t          recognizer = mc.get(recognizerType)\n\t          if (!recognizer) {\n\t            // add recognizer\n\t            recognizer = new Hammer[capitalize(recognizerType)]()\n\t            // make sure multiple recognizers work together...\n\t            recognizer.recognizeWith(mc.recognizers)\n\t            mc.add(recognizer)\n\t          }\n\t          // apply global options\n\t          var globalOptions = vueTouch.config[recognizerType]\n\t          if (globalOptions) {\n\t            guardDirections(globalOptions)\n\t            recognizer.set(globalOptions)\n\t          }\n\t          // apply local options\n\t          var localOptions =\n\t            this.el.hammerOptions &&\n\t            this.el.hammerOptions[recognizerType]\n\t          if (localOptions) {\n\t            guardDirections(localOptions)\n\t            recognizer.set(localOptions)\n\t          }\n\t        }\n\t        this.recognizer = recognizer\n\t      },\n\t\n\t      update: function (fn) {\n\t        var mc = this.mc\n\t        var event = this.arg\n\t        // teardown old handler\n\t        if (this.handler) {\n\t          mc.off(event, this.handler)\n\t        }\n\t        if (typeof fn !== 'function') {\n\t          this.handler = null\n\t          console.warn(\n\t            '[vue-touch] invalid handler function for v-touch: ' +\n\t            this.arg + '=\"' + this.descriptor.raw\n\t          )\n\t        } else {\n\t          mc.on(event, (this.handler = fn))\n\t        }\n\t      },\n\t\n\t      unbind: function () {\n\t        if (this.handler) {\n\t          this.mc.off(this.arg, this.handler)\n\t        }\n\t        if (!Object.keys(this.mc.handlers).length) {\n\t          this.mc.destroy()\n\t          this.el.hammer = null\n\t        }\n\t      }\n\t    })\n\t\n\t    Vue.directive('touch-options', {\n\t      priority: Vue.directive('on').priority + 1,\n\t      update: function (options) {\n\t        var opts = this.el.hammerOptions || (this.el.hammerOptions = {})\n\t        if (!this.arg) {\n\t          console.warn('[vue-touch] recognizer type argument for v-touch-options is required.')\n\t        } else {\n\t          opts[this.arg] = options\n\t        }\n\t      }\n\t    })\n\t  }\n\t\n\t  /**\n\t   * Register a custom event.\n\t   *\n\t   * @param {String} event\n\t   * @param {Object} options - a Hammer.js recognizer option object.\n\t   *                           required fields:\n\t   *                           - type: the base recognizer to use for this event\n\t   */\n\t\n\t  vueTouch.registerCustomEvent = function (event, options) {\n\t    options.event = event\n\t    customEvents[event] = options\n\t  }\n\t\n\t  function capitalize (str) {\n\t    return str.charAt(0).toUpperCase() + str.slice(1)\n\t  }\n\t\n\t  function guardDirections (options) {\n\t    var dir = options.direction\n\t    if (typeof dir === 'string') {\n\t      var hammerDirection = 'DIRECTION_' + dir.toUpperCase()\n\t      if (directions.indexOf(dir) > -1 && Hammer.hasOwnProperty(hammerDirection)) {\n\t        options.direction = Hammer[hammerDirection]\n\t      } else {\n\t        console.warn('[vue-touch] invalid direction: ' + dir)\n\t      }\n\t    }\n\t  }\n\t\n\t  if (true) {\n\t    module.exports = vueTouch\n\t  } else if (typeof define == \"function\" && define.amd) {\n\t    define([], function(){ return vueTouch })\n\t  } else if (window.Vue) {\n\t    window.VueTouch = vueTouch\n\t    Vue.use(vueTouch)\n\t  }\n\t\n\t})()\n\n\n/***/ },\n/* 90 */\n/***/ function(module, exports) {\n\n\texports.sync = function (store, router) {\n\t  patchStore(store)\n\t  store.router = router\n\t\n\t  var isTimeTraveling = false\n\t  var currentPath\n\t\n\t  // sync router on store change\n\t  store.watch(\n\t    function (state) {\n\t      return state.route\n\t    },\n\t    function (route) {\n\t      if (route.path === currentPath) {\n\t        return\n\t      }\n\t      isTimeTraveling = true\n\t      currentPath = route.path\n\t      router.go(route.path)\n\t    },\n\t    { deep: true, sync: true }\n\t  )\n\t\n\t  // sync store on router navigation\n\t  router.afterEach(function (transition) {\n\t    if (isTimeTraveling) {\n\t      isTimeTraveling = false\n\t      return\n\t    }\n\t    var to = transition.to\n\t    currentPath = to.path\n\t    store.dispatch('router/ROUTE_CHANGED', {\n\t      path: to.path,\n\t      query: to.query,\n\t      params: to.params\n\t    })\n\t  })\n\t}\n\t\n\tfunction patchStore (store) {\n\t  // add state\n\t  var set = store._vm.constructor.set\n\t  store._dispatching = true\n\t  set(store.state, 'route', {\n\t    path: '',\n\t    query: null,\n\t    params: null\n\t  })\n\t  store._dispatching = false\n\t  // add mutations\n\t  store.hotUpdate({\n\t    modules: {\n\t      route: {\n\t        mutations: {\n\t          'router/ROUTE_CHANGED': function (state, to) {\n\t            state.path = to.path\n\t            state.query = to.query\n\t            state.params = to.params\n\t          }\n\t        }\n\t      }\n\t    }\n\t  })\n\t}\n\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Vuex v0.6.3\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  (global.Vuex = factory());\n\t}(this, function () { 'use strict';\n\t\n\t  var babelHelpers = {};\n\t  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n\t    return typeof obj;\n\t  } : function (obj) {\n\t    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n\t  };\n\t\n\t  babelHelpers.classCallCheck = function (instance, Constructor) {\n\t    if (!(instance instanceof Constructor)) {\n\t      throw new TypeError(\"Cannot call a class as a function\");\n\t    }\n\t  };\n\t\n\t  babelHelpers.createClass = function () {\n\t    function defineProperties(target, props) {\n\t      for (var i = 0; i < props.length; i++) {\n\t        var descriptor = props[i];\n\t        descriptor.enumerable = descriptor.enumerable || false;\n\t        descriptor.configurable = true;\n\t        if (\"value\" in descriptor) descriptor.writable = true;\n\t        Object.defineProperty(target, descriptor.key, descriptor);\n\t      }\n\t    }\n\t\n\t    return function (Constructor, protoProps, staticProps) {\n\t      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n\t      if (staticProps) defineProperties(Constructor, staticProps);\n\t      return Constructor;\n\t    };\n\t  }();\n\t\n\t  babelHelpers.toConsumableArray = function (arr) {\n\t    if (Array.isArray(arr)) {\n\t      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\t\n\t      return arr2;\n\t    } else {\n\t      return Array.from(arr);\n\t    }\n\t  };\n\t\n\t  babelHelpers;\n\t\n\t  /**\n\t   * Merge an array of objects into one.\n\t   *\n\t   * @param {Array<Object>} arr\n\t   * @return {Object}\n\t   */\n\t\n\t  function mergeObjects(arr) {\n\t    return arr.reduce(function (prev, obj) {\n\t      Object.keys(obj).forEach(function (key) {\n\t        var existing = prev[key];\n\t        if (existing) {\n\t          // allow multiple mutation objects to contain duplicate\n\t          // handlers for the same mutation type\n\t          if (Array.isArray(existing)) {\n\t            existing.push(obj[key]);\n\t          } else {\n\t            prev[key] = [prev[key], obj[key]];\n\t          }\n\t        } else {\n\t          prev[key] = obj[key];\n\t        }\n\t      });\n\t      return prev;\n\t    }, {});\n\t  }\n\t\n\t  /**\n\t   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n\t   *\n\t   * @param {*} obj\n\t   * @return {*}\n\t   */\n\t\n\t  function deepClone(obj) {\n\t    if (Array.isArray(obj)) {\n\t      return obj.map(deepClone);\n\t    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : babelHelpers.typeof(obj)) === 'object') {\n\t      var cloned = {};\n\t      var keys = Object.keys(obj);\n\t      for (var i = 0, l = keys.length; i < l; i++) {\n\t        var key = keys[i];\n\t        cloned[key] = deepClone(obj[key]);\n\t      }\n\t      return cloned;\n\t    } else {\n\t      return obj;\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Hacks to get access to Vue internals.\n\t   * Maybe we should expose these...\n\t   */\n\t\n\t  var Watcher = void 0;\n\t  function getWatcher(vm) {\n\t    if (!Watcher) {\n\t      var unwatch = vm.$watch('__vuex__', function (a) {\n\t        return a;\n\t      });\n\t      Watcher = vm._watchers[0].constructor;\n\t      unwatch();\n\t    }\n\t    return Watcher;\n\t  }\n\t\n\t  var Dep = void 0;\n\t  function getDep(vm) {\n\t    if (!Dep) {\n\t      Dep = vm._data.__ob__.dep.constructor;\n\t    }\n\t    return Dep;\n\t  }\n\t\n\t  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t  var devtoolMiddleware = {\n\t    onInit: function onInit(state, store) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:init', store);\n\t      hook.on('vuex:travel-to-state', function (targetState) {\n\t        var currentState = store._vm._data;\n\t        store._dispatching = true;\n\t        Object.keys(targetState).forEach(function (key) {\n\t          currentState[key] = targetState[key];\n\t        });\n\t        store._dispatching = false;\n\t      });\n\t    },\n\t    onMutation: function onMutation(mutation, state) {\n\t      if (!hook) return;\n\t      hook.emit('vuex:mutation', mutation, state);\n\t    }\n\t  };\n\t\n\t  function override (Vue) {\n\t    // override init and inject vuex init procedure\n\t    var _init = Vue.prototype._init;\n\t    Vue.prototype._init = function () {\n\t      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n\t      _init.call(this, options);\n\t    };\n\t\n\t    /**\n\t     * Vuex init hook, injected into each instances init hooks list.\n\t     */\n\t\n\t    function vuexInit() {\n\t      var options = this.$options;\n\t      var store = options.store;\n\t      var vuex = options.vuex;\n\t      // store injection\n\t\n\t      if (store) {\n\t        this.$store = store;\n\t      } else if (options.parent && options.parent.$store) {\n\t        this.$store = options.parent.$store;\n\t      }\n\t      // vuex option handling\n\t      if (vuex) {\n\t        if (!this.$store) {\n\t          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n\t        }\n\t        var state = vuex.state;\n\t        var getters = vuex.getters;\n\t        var actions = vuex.actions;\n\t        // handle deprecated state option\n\t\n\t        if (state && !getters) {\n\t          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n\t          getters = state;\n\t        }\n\t        // getters\n\t        if (getters) {\n\t          options.computed = options.computed || {};\n\t          for (var key in getters) {\n\t            defineVuexGetter(this, key, getters[key]);\n\t          }\n\t        }\n\t        // actions\n\t        if (actions) {\n\t          options.methods = options.methods || {};\n\t          for (var _key in actions) {\n\t            options.methods[_key] = makeBoundAction(this.$store, actions[_key], _key);\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Setter for all getter properties.\n\t     */\n\t\n\t    function setter() {\n\t      throw new Error('vuex getter properties are read-only.');\n\t    }\n\t\n\t    /**\n\t     * Define a Vuex getter on an instance.\n\t     *\n\t     * @param {Vue} vm\n\t     * @param {String} key\n\t     * @param {Function} getter\n\t     */\n\t\n\t    function defineVuexGetter(vm, key, getter) {\n\t      if (typeof getter !== 'function') {\n\t        console.warn('[vuex] Getter bound to key \\'vuex.getters.' + key + '\\' is not a function.');\n\t      } else {\n\t        Object.defineProperty(vm, key, {\n\t          enumerable: true,\n\t          configurable: true,\n\t          get: makeComputedGetter(vm.$store, getter),\n\t          set: setter\n\t        });\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Make a computed getter, using the same caching mechanism of computed\n\t     * properties. In addition, it is cached on the raw getter function using\n\t     * the store's unique cache id. This makes the same getter shared\n\t     * across all components use the same underlying watcher, and makes\n\t     * the getter evaluated only once during every flush.\n\t     *\n\t     * @param {Store} store\n\t     * @param {Function} getter\n\t     */\n\t\n\t    function makeComputedGetter(store, getter) {\n\t      var id = store._getterCacheId;\n\t\n\t      // cached\n\t      if (getter[id]) {\n\t        return getter[id];\n\t      }\n\t      var vm = store._vm;\n\t      var Watcher = getWatcher(vm);\n\t      var Dep = getDep(vm);\n\t      var watcher = new Watcher(vm, function (state) {\n\t        return getter(state);\n\t      }, null, { lazy: true });\n\t      var computedGetter = function computedGetter() {\n\t        if (watcher.dirty) {\n\t          watcher.evaluate();\n\t        }\n\t        if (Dep.target) {\n\t          watcher.depend();\n\t        }\n\t        return watcher.value;\n\t      };\n\t      getter[id] = computedGetter;\n\t      return computedGetter;\n\t    }\n\t\n\t    /**\n\t     * Make a bound-to-store version of a raw action function.\n\t     *\n\t     * @param {Store} store\n\t     * @param {Function} action\n\t     * @param {String} key\n\t     */\n\t\n\t    function makeBoundAction(store, action, key) {\n\t      if (typeof action !== 'function') {\n\t        console.warn('[vuex] Action bound to key \\'vuex.actions.' + key + '\\' is not a function.');\n\t      }\n\t      return function vuexBoundAction() {\n\t        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n\t          args[_key2] = arguments[_key2];\n\t        }\n\t\n\t        return action.call.apply(action, [this, store].concat(args));\n\t      };\n\t    }\n\t\n\t    // option merging\n\t    var merge = Vue.config.optionMergeStrategies.computed;\n\t    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n\t      if (!toVal) return fromVal;\n\t      if (!fromVal) return toVal;\n\t      return {\n\t        getters: merge(toVal.getters, fromVal.getters),\n\t        state: merge(toVal.state, fromVal.state),\n\t        actions: merge(toVal.actions, fromVal.actions)\n\t      };\n\t    };\n\t  }\n\t\n\t  var Vue = void 0;\n\t  var uid = 0;\n\t\n\t  var Store = function () {\n\t\n\t    /**\n\t     * @param {Object} options\n\t     *        - {Object} state\n\t     *        - {Object} actions\n\t     *        - {Object} mutations\n\t     *        - {Array} middlewares\n\t     *        - {Boolean} strict\n\t     */\n\t\n\t    function Store() {\n\t      var _this = this;\n\t\n\t      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t      var _ref$state = _ref.state;\n\t      var state = _ref$state === undefined ? {} : _ref$state;\n\t      var _ref$mutations = _ref.mutations;\n\t      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n\t      var _ref$modules = _ref.modules;\n\t      var modules = _ref$modules === undefined ? {} : _ref$modules;\n\t      var _ref$middlewares = _ref.middlewares;\n\t      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n\t      var _ref$strict = _ref.strict;\n\t      var strict = _ref$strict === undefined ? false : _ref$strict;\n\t      babelHelpers.classCallCheck(this, Store);\n\t\n\t      this._getterCacheId = 'vuex_store_' + uid++;\n\t      this._dispatching = false;\n\t      this._rootMutations = this._mutations = mutations;\n\t      this._modules = modules;\n\t      // bind dispatch to self\n\t      var dispatch = this.dispatch;\n\t      this.dispatch = function () {\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t          args[_key] = arguments[_key];\n\t        }\n\t\n\t        dispatch.apply(_this, args);\n\t      };\n\t      // use a Vue instance to store the state tree\n\t      // suppress warnings just in case the user has added\n\t      // some funky global mixins\n\t      if (!Vue) {\n\t        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n\t      }\n\t      var silent = Vue.config.silent;\n\t      Vue.config.silent = true;\n\t      this._vm = new Vue({\n\t        data: state\n\t      });\n\t      Vue.config.silent = silent;\n\t      this._setupModuleState(state, modules);\n\t      this._setupModuleMutations(modules);\n\t      this._setupMiddlewares(middlewares, state);\n\t      // add extra warnings in strict mode\n\t      if (strict) {\n\t        this._setupMutationCheck();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Getter for the entire state tree.\n\t     * Read only.\n\t     *\n\t     * @return {Object}\n\t     */\n\t\n\t    babelHelpers.createClass(Store, [{\n\t      key: 'dispatch',\n\t\n\t\n\t      /**\n\t       * Dispatch an action.\n\t       *\n\t       * @param {String} type\n\t       */\n\t\n\t      value: function dispatch(type) {\n\t        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n\t          payload[_key2 - 1] = arguments[_key2];\n\t        }\n\t\n\t        var silent = false;\n\t        // compatibility for object actions, e.g. FSA\n\t        if ((typeof type === 'undefined' ? 'undefined' : babelHelpers.typeof(type)) === 'object' && type.type && arguments.length === 1) {\n\t          payload = [type.payload];\n\t          if (type.silent) silent = true;\n\t          type = type.type;\n\t        }\n\t        var mutation = this._mutations[type];\n\t        var state = this.state;\n\t        if (mutation) {\n\t          this._dispatching = true;\n\t          // apply the mutation\n\t          if (Array.isArray(mutation)) {\n\t            mutation.forEach(function (m) {\n\t              return m.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n\t            });\n\t          } else {\n\t            mutation.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n\t          }\n\t          this._dispatching = false;\n\t          if (!silent) this._applyMiddlewares(type, payload);\n\t        } else {\n\t          console.warn('[vuex] Unknown mutation: ' + type);\n\t        }\n\t      }\n\t\n\t      /**\n\t       * Watch state changes on the store.\n\t       * Same API as Vue's $watch, except when watching a function,\n\t       * the function gets the state as the first argument.\n\t       *\n\t       * @param {String|Function} expOrFn\n\t       * @param {Function} cb\n\t       * @param {Object} [options]\n\t       */\n\t\n\t    }, {\n\t      key: 'watch',\n\t      value: function watch(expOrFn, cb, options) {\n\t        var _this2 = this;\n\t\n\t        return this._vm.$watch(function () {\n\t          return typeof expOrFn === 'function' ? expOrFn(_this2.state) : _this2._vm.$get(expOrFn);\n\t        }, cb, options);\n\t      }\n\t\n\t      /**\n\t       * Hot update mutations & modules.\n\t       *\n\t       * @param {Object} options\n\t       *        - {Object} [mutations]\n\t       *        - {Object} [modules]\n\t       */\n\t\n\t    }, {\n\t      key: 'hotUpdate',\n\t      value: function hotUpdate() {\n\t        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t        var mutations = _ref2.mutations;\n\t        var modules = _ref2.modules;\n\t\n\t        this._rootMutations = this._mutations = mutations || this._rootMutations;\n\t        this._setupModuleMutations(modules || this._modules);\n\t      }\n\t\n\t      /**\n\t       * Attach sub state tree of each module to the root tree.\n\t       *\n\t       * @param {Object} state\n\t       * @param {Object} modules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleState',\n\t      value: function _setupModuleState(state, modules) {\n\t        Object.keys(modules).forEach(function (key) {\n\t          Vue.set(state, key, modules[key].state || {});\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Bind mutations for each module to its sub tree and\n\t       * merge them all into one final mutations map.\n\t       *\n\t       * @param {Object} updatedModules\n\t       */\n\t\n\t    }, {\n\t      key: '_setupModuleMutations',\n\t      value: function _setupModuleMutations(updatedModules) {\n\t        var modules = this._modules;\n\t        var allMutations = [this._rootMutations];\n\t        Object.keys(updatedModules).forEach(function (key) {\n\t          modules[key] = updatedModules[key];\n\t        });\n\t        Object.keys(modules).forEach(function (key) {\n\t          var module = modules[key];\n\t          if (!module || !module.mutations) return;\n\t          // bind mutations to sub state tree\n\t          var mutations = {};\n\t          Object.keys(module.mutations).forEach(function (name) {\n\t            var original = module.mutations[name];\n\t            mutations[name] = function (state) {\n\t              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n\t                args[_key3 - 1] = arguments[_key3];\n\t              }\n\t\n\t              original.apply(undefined, [state[key]].concat(args));\n\t            };\n\t          });\n\t          allMutations.push(mutations);\n\t        });\n\t        this._mutations = mergeObjects(allMutations);\n\t      }\n\t\n\t      /**\n\t       * Setup mutation check: if the vuex instance's state is mutated\n\t       * outside of a mutation handler, we throw en error. This effectively\n\t       * enforces all mutations to the state to be trackable and hot-reloadble.\n\t       * However, this comes at a run time cost since we are doing a deep\n\t       * watch on the entire state tree, so it is only enalbed with the\n\t       * strict option is set to true.\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMutationCheck',\n\t      value: function _setupMutationCheck() {\n\t        var _this3 = this;\n\t\n\t        var Watcher = getWatcher(this._vm);\n\t        /* eslint-disable no-new */\n\t        new Watcher(this._vm, '$data', function () {\n\t          if (!_this3._dispatching) {\n\t            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n\t          }\n\t        }, { deep: true, sync: true });\n\t        /* eslint-enable no-new */\n\t      }\n\t\n\t      /**\n\t       * Setup the middlewares. The devtools middleware is always\n\t       * included, since it does nothing if no devtool is detected.\n\t       *\n\t       * A middleware can demand the state it receives to be\n\t       * \"snapshots\", i.e. deep clones of the actual state tree.\n\t       *\n\t       * @param {Array} middlewares\n\t       * @param {Object} state\n\t       */\n\t\n\t    }, {\n\t      key: '_setupMiddlewares',\n\t      value: function _setupMiddlewares(middlewares, state) {\n\t        var _this4 = this;\n\t\n\t        this._middlewares = [devtoolMiddleware].concat(middlewares);\n\t        this._needSnapshots = middlewares.some(function (m) {\n\t          return m.snapshot;\n\t        });\n\t        if (this._needSnapshots) {\n\t          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n\t        }\n\t        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n\t        // call init hooks\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onInit) {\n\t            m.onInit(m.snapshot ? initialSnapshot : state, _this4);\n\t          }\n\t        });\n\t      }\n\t\n\t      /**\n\t       * Apply the middlewares on a given mutation.\n\t       *\n\t       * @param {String} type\n\t       * @param {Array} payload\n\t       */\n\t\n\t    }, {\n\t      key: '_applyMiddlewares',\n\t      value: function _applyMiddlewares(type, payload) {\n\t        var _this5 = this;\n\t\n\t        var state = this.state;\n\t        var prevSnapshot = this._prevSnapshot;\n\t        var snapshot = void 0,\n\t            clonedPayload = void 0;\n\t        if (this._needSnapshots) {\n\t          snapshot = this._prevSnapshot = deepClone(state);\n\t          clonedPayload = deepClone(payload);\n\t        }\n\t        this._middlewares.forEach(function (m) {\n\t          if (m.onMutation) {\n\t            if (m.snapshot) {\n\t              m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this5);\n\t            } else {\n\t              m.onMutation({ type: type, payload: payload }, state, _this5);\n\t            }\n\t          }\n\t        });\n\t      }\n\t    }, {\n\t      key: 'state',\n\t      get: function get() {\n\t        return this._vm._data;\n\t      },\n\t      set: function set(v) {\n\t        throw new Error('[vuex] Vuex root state is read only.');\n\t      }\n\t    }]);\n\t    return Store;\n\t  }();\n\t\n\t  function install(_Vue) {\n\t    if (Vue) {\n\t      console.warn('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n\t      return;\n\t    }\n\t    Vue = _Vue;\n\t    override(Vue);\n\t  }\n\t\n\t  // auto install in dist mode\n\t  if (typeof window !== 'undefined' && window.Vue) {\n\t    install(window.Vue);\n\t  }\n\t\n\t  function createLogger() {\n\t    console.warn('[vuex] Vuex.createLogger has been deprecated.' + 'Use `import createLogger from \\'vuex/logger\\' instead.');\n\t  }\n\t\n\t  var index = {\n\t    Store: Store,\n\t    install: install,\n\t    createLogger: createLogger\n\t  };\n\t\n\t  return index;\n\t\n\t}));\n\n/***/ },\n/* 92 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// Credits: borrowed code from fcomb/redux-logger\n\t\n\tfunction createLogger() {\n\t  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t  var _ref$collapsed = _ref.collapsed;\n\t  var collapsed = _ref$collapsed === undefined ? true : _ref$collapsed;\n\t  var _ref$transformer = _ref.transformer;\n\t  var transformer = _ref$transformer === undefined ? function (state) {\n\t    return state;\n\t  } : _ref$transformer;\n\t  var _ref$mutationTransfor = _ref.mutationTransformer;\n\t  var mutationTransformer = _ref$mutationTransfor === undefined ? function (mut) {\n\t    return mut;\n\t  } : _ref$mutationTransfor;\n\t\n\t  return {\n\t    snapshot: true,\n\t    onMutation: function onMutation(mutation, nextState, prevState) {\n\t      if (typeof console === 'undefined') {\n\t        return;\n\t      }\n\t      var time = new Date();\n\t      var formattedTime = ' @ ' + pad(time.getHours(), 2) + ':' + pad(time.getMinutes(), 2) + ':' + pad(time.getSeconds(), 2) + '.' + pad(time.getMilliseconds(), 3);\n\t      var formattedMutation = mutationTransformer(mutation);\n\t      var message = 'mutation ' + mutation.type + formattedTime;\n\t      var startMessage = collapsed ? console.groupCollapsed : console.group;\n\t\n\t      // render\n\t      try {\n\t        startMessage.call(console, message);\n\t      } catch (e) {\n\t        console.log(message);\n\t      }\n\t\n\t      console.log('%c prev state', 'color: #9E9E9E; font-weight: bold', prevState);\n\t      console.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);\n\t      console.log('%c next state', 'color: #4CAF50; font-weight: bold', nextState);\n\t\n\t      try {\n\t        console.groupEnd();\n\t      } catch (e) {\n\t        console.log('—— log end ——');\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tfunction repeat(str, times) {\n\t  return new Array(times + 1).join(str);\n\t}\n\t\n\tfunction pad(num, maxLength) {\n\t  return repeat('0', maxLength - num.toString().length) + num;\n\t}\n\t\n\tmodule.exports = createLogger;\n\n/***/ },\n/* 93 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.67f29fe56e150b71cf96.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d7b9eb9a0f1489c541a1\n **/","import App from './pages/App'\nimport router from './router'\nimport store from './vuex/store' // vuex store instance\n\n// プラグイン追加\nimport Vue from 'vue'\nimport VueAnimatedList from 'vue-animated-list'\nVue.use(VueAnimatedList)\n\nimport VueTouch from 'vue-touch'\nVue.use(VueTouch)\nVueTouch.config.swipe = {\n  threshold: 10\n}\n\nimport { sync } from 'vuex-router-sync'\nsync(store, router)\nrouter.start(App, '#app')\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","var store  = require('./$.shared')('wks')\n  , uid    = require('./$.uid')\n  , Symbol = require('./$.global').Symbol;\nmodule.exports = function(name){\n  return store[name] || (store[name] =\n    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.wks.js\n ** module id = 1\n ** module chunks = 0\n **/","var $Object = Object;\nmodule.exports = {\n  create:     $Object.create,\n  getProto:   $Object.getPrototypeOf,\n  isEnum:     {}.propertyIsEnumerable,\n  getDesc:    $Object.getOwnPropertyDescriptor,\n  setDesc:    $Object.defineProperty,\n  setDescs:   $Object.defineProperties,\n  getKeys:    $Object.keys,\n  getNames:   $Object.getOwnPropertyNames,\n  getSymbols: $Object.getOwnPropertySymbols,\n  each:       [].forEach\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.js\n ** module id = 2\n ** module chunks = 0\n **/","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const CHECKOUT_REQUEST = 'CHECKOUT_REQUEST'\nexport const CHECKOUT_SUCCESS = 'CHECKOUT_SUCCESS'\nexport const CHECKOUT_FAILURE = 'CHECKOUT_FAILURE'\n\n// Twitter\nexport const RECEIVE_TIMELINE = 'RECEIVE_TIMELINE'\nexport const ADD_TWEET = 'ADD_TWEET'\nexport const REMOVE_TWEET = 'REMOVE_TWEET'\n\n// LocalStorage\nexport const SAVE_LOCALSTORAGE = 'SAVE_LOCALSTORAGE'\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/mutation-types.js\n **/","var core = module.exports = {version: '1.2.6'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.core.js\n ** module id = 4\n ** module chunks = 0\n **/","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (obj, key, value) {\n  if (key in obj) {\n    (0, _defineProperty2.default)(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/helpers/defineProperty.js\n ** module id = 5\n ** module chunks = 0\n **/","var global    = require('./$.global')\n  , core      = require('./$.core')\n  , ctx       = require('./$.ctx')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && key in target;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(param){\n        return this instanceof C ? new C(param) : C(param);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n  }\n};\n// type bitmap\n$export.F = 1;  // forced\n$export.G = 2;  // global\n$export.S = 4;  // static\n$export.P = 8;  // proto\n$export.B = 16; // bind\n$export.W = 32; // wrap\nmodule.exports = $export;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.export.js\n ** module id = 6\n ** module chunks = 0\n **/","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.global.js\n ** module id = 7\n ** module chunks = 0\n **/","var $          = require('./$')\n  , createDesc = require('./$.property-desc');\nmodule.exports = require('./$.descriptors') ? function(object, key, value){\n  return $.setDesc(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.hide.js\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = {};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.iterators.js\n ** module id = 9\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * YOU CAN SAFELY REMOVE THIS FILE.\n * FILE FOR DEMO PURPOSE ONLY\n *\n * Notes:\n *\n * This file contains 'getters' for the cart, which are functions which\n * take a whole state and transforms it into data we're interested in\n */\n\n// The cartProducts function return all the products in our cart\n// but also looks up the title and price, since we only store the IDs\n// in the cart\nexport const cartProducts = state => {\n  return state.cart.added.map(({ id, quantity }) => {\n    const product = state.products.all.find(p => p.id === id)\n    return {\n      title: product.title,\n      price: product.price,\n      quantity\n    }\n  })\n}\n\n// This creates a total sum of all the items in the cart. This is an example\n// of how a getter can return a scalar value which can be re-used in views\nexport const cartCount = state => {\n  var totalCount = 0\n  state.cart.added.forEach(({ quantity }) => {\n    totalCount += quantity\n  })\n\n  return totalCount\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/cart/getters.js\n **/","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport cart from './cart/store'\nimport timeline from './timeline/store'\nimport localStorage from './localstorage/store'\n\nimport createLogger from 'vuex/logger'\n\nVue.use(Vuex)\nVue.config.debug = true\n\nconst debug = process.env.NODE_ENV !== 'production'\n\nexport default new Vuex.Store({\n  modules: {\n    cart,\n    timeline,\n    localStorage\n  },\n  strict: debug,\n  middlewares: debug ? [createLogger()] : []\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/store.js\n **/","var toString = {}.toString;\n\nmodule.exports = function(it){\n  return toString.call(it).slice(8, -1);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.cof.js\n ** module id = 13\n ** module chunks = 0\n **/","// optional / simple context binding\nvar aFunction = require('./$.a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.ctx.js\n ** module id = 14\n ** module chunks = 0\n **/","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function(it){\n  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.defined.js\n ** module id = 15\n ** module chunks = 0\n **/","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.fails.js\n ** module id = 16\n ** module chunks = 0\n **/","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function(it, key){\n  return hasOwnProperty.call(it, key);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.has.js\n ** module id = 17\n ** module chunks = 0\n **/","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.property-desc.js\n ** module id = 18\n ** module chunks = 0\n **/","var def = require('./$').setDesc\n  , has = require('./$.has')\n  , TAG = require('./$.wks')('toStringTag');\n\nmodule.exports = function(it, tag, stat){\n  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.set-to-string-tag.js\n ** module id = 19\n ** module chunks = 0\n **/","// 7.1.4 ToInteger\nvar ceil  = Math.ceil\n  , floor = Math.floor;\nmodule.exports = function(it){\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.to-integer.js\n ** module id = 20\n ** module chunks = 0\n **/","// 7.1.13 ToObject(argument)\nvar defined = require('./$.defined');\nmodule.exports = function(it){\n  return Object(defined(it));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.to-object.js\n ** module id = 21\n ** module chunks = 0\n **/","/*--------------------------------------------------------------------------\r\n * linq.js - LINQ for JavaScript\r\n * ver 3.0.4-Beta5 (Jun. 20th, 2013)\r\n *\r\n * created and maintained by neuecc <ils@neue.cc>\r\n * licensed under MIT License\r\n * http://linqjs.codeplex.com/\r\n *------------------------------------------------------------------------*/\r\n\r\n(function (root, undefined) {\r\n    // ReadOnly Function\r\n    var Functions = {\r\n        Identity: function (x) { return x; },\r\n        True: function () { return true; },\r\n        Blank: function () { }\r\n    };\r\n\r\n    // const Type\r\n    var Types = {\r\n        Boolean: typeof true,\r\n        Number: typeof 0,\r\n        String: typeof \"\",\r\n        Object: typeof {},\r\n        Undefined: typeof undefined,\r\n        Function: typeof function () { }\r\n    };\r\n\r\n    // createLambda cache\r\n    var funcCache = { \"\": Functions.Identity };\r\n\r\n    // private utility methods\r\n    var Utils = {\r\n        // Create anonymous function from lambda expression string\r\n        createLambda: function (expression) {\r\n            if (expression == null) return Functions.Identity;\r\n            if (typeof expression === Types.String) {\r\n                // get from cache\r\n                var f = funcCache[expression];\r\n                if (f != null) {\r\n                    return f;\r\n                }\r\n\r\n                if (expression.indexOf(\"=>\") === -1) {\r\n                    var regexp = new RegExp(\"[$]+\", \"g\");\r\n\r\n                    var maxLength = 0;\r\n                    var match;\r\n                    while ((match = regexp.exec(expression)) != null) {\r\n                        var paramNumber = match[0].length;\r\n                        if (paramNumber > maxLength) {\r\n                            maxLength = paramNumber;\r\n                        }\r\n                    }\r\n\r\n                    var argArray = [];\r\n                    for (var i = 1; i <= maxLength; i++) {\r\n                        var dollar = \"\";\r\n                        for (var j = 0; j < i; j++) {\r\n                            dollar += \"$\";\r\n                        }\r\n                        argArray.push(dollar);\r\n                    }\r\n\r\n                    var args = Array.prototype.join.call(argArray, \",\");\r\n\r\n                    f = new Function(args, \"return \" + expression);\r\n                    funcCache[expression] = f;\r\n                    return f;\r\n                }\r\n                else {\r\n                    var expr = expression.match(/^[(\\s]*([^()]*?)[)\\s]*=>(.*)/);\r\n                    f = new Function(expr[1], \"return \" + expr[2]);\r\n                    funcCache[expression] = f;\r\n                    return f;\r\n                }\r\n            }\r\n            return expression;\r\n        },\r\n\r\n        isIEnumerable: function (obj) {\r\n            if (typeof Enumerator !== Types.Undefined) {\r\n                try {\r\n                    new Enumerator(obj); // check JScript(IE)'s Enumerator\r\n                    return true;\r\n                }\r\n                catch (e) { }\r\n            }\r\n\r\n            return false;\r\n        },\r\n\r\n        // IE8's defineProperty is defined but cannot use, therefore check defineProperties\r\n        defineProperty: (Object.defineProperties != null)\r\n            ? function (target, methodName, value) {\r\n                Object.defineProperty(target, methodName, {\r\n                    enumerable: false,\r\n                    configurable: true,\r\n                    writable: true,\r\n                    value: value\r\n                })\r\n            }\r\n            : function (target, methodName, value) {\r\n                target[methodName] = value;\r\n            },\r\n\r\n        compare: function (a, b) {\r\n            return (a === b) ? 0\r\n                 : (a > b) ? 1\r\n                 : -1;\r\n        },\r\n\r\n        dispose: function (obj) {\r\n            if (obj != null) obj.dispose();\r\n        }\r\n    };\r\n\r\n    // IEnumerator State\r\n    var State = { Before: 0, Running: 1, After: 2 };\r\n\r\n    // \"Enumerator\" is conflict JScript's \"Enumerator\"\r\n    var IEnumerator = function (initialize, tryGetNext, dispose) {\r\n        var yielder = new Yielder();\r\n        var state = State.Before;\r\n\r\n        this.current = yielder.current;\r\n\r\n        this.moveNext = function () {\r\n            try {\r\n                switch (state) {\r\n                    case State.Before:\r\n                        state = State.Running;\r\n                        initialize();\r\n                        // fall through\r\n                    case State.Running:\r\n                        if (tryGetNext.apply(yielder)) {\r\n                            return true;\r\n                        }\r\n                        else {\r\n                            this.dispose();\r\n                            return false;\r\n                        }\r\n                    case State.After:\r\n                        return false;\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.dispose();\r\n                throw e;\r\n            }\r\n        };\r\n\r\n        this.dispose = function () {\r\n            if (state != State.Running) return;\r\n\r\n            try {\r\n                dispose();\r\n            }\r\n            finally {\r\n                state = State.After;\r\n            }\r\n        };\r\n    };\r\n\r\n    // for tryGetNext\r\n    var Yielder = function () {\r\n        var current = null;\r\n        this.current = function () { return current; };\r\n        this.yieldReturn = function (value) {\r\n            current = value;\r\n            return true;\r\n        };\r\n        this.yieldBreak = function () {\r\n            return false;\r\n        };\r\n    };\r\n\r\n    // Enumerable constuctor\r\n    var Enumerable = function (getEnumerator) {\r\n        this.getEnumerator = getEnumerator;\r\n    };\r\n\r\n    // Utility\r\n\r\n    Enumerable.Utils = {}; // container\r\n\r\n    Enumerable.Utils.createLambda = function (expression) {\r\n        return Utils.createLambda(expression);\r\n    };\r\n\r\n    Enumerable.Utils.createEnumerable = function (getEnumerator) {\r\n        return new Enumerable(getEnumerator);\r\n    };\r\n\r\n    Enumerable.Utils.createEnumerator = function (initialize, tryGetNext, dispose) {\r\n        return new IEnumerator(initialize, tryGetNext, dispose);\r\n    };\r\n\r\n    Enumerable.Utils.extendTo = function (type) {\r\n        var typeProto = type.prototype;\r\n        var enumerableProto;\r\n\r\n        if (type === Array) {\r\n            enumerableProto = ArrayEnumerable.prototype;\r\n            Utils.defineProperty(typeProto, \"getSource\", function () {\r\n                return this;\r\n            });\r\n        }\r\n        else {\r\n            enumerableProto = Enumerable.prototype;\r\n            Utils.defineProperty(typeProto, \"getEnumerator\", function () {\r\n                return Enumerable.from(this).getEnumerator();\r\n            });\r\n        }\r\n\r\n        for (var methodName in enumerableProto) {\r\n            var func = enumerableProto[methodName];\r\n\r\n            // already extended\r\n            if (typeProto[methodName] == func) continue;\r\n\r\n            // already defined(example Array#reverse/join/forEach...)\r\n            if (typeProto[methodName] != null) {\r\n                methodName = methodName + \"ByLinq\";\r\n                if (typeProto[methodName] == func) continue; // recheck\r\n            }\r\n\r\n            if (func instanceof Function) {\r\n                Utils.defineProperty(typeProto, methodName, func);\r\n            }\r\n        }\r\n    };\r\n\r\n    // Generator\r\n\r\n    Enumerable.choice = function () // variable argument\r\n    {\r\n        var args = arguments;\r\n\r\n        return new Enumerable(function () {\r\n            return new IEnumerator(\r\n                function () {\r\n                    args = (args[0] instanceof Array) ? args[0]\r\n                        : (args[0].getEnumerator != null) ? args[0].toArray()\r\n                        : args;\r\n                },\r\n                function () {\r\n                    return this.yieldReturn(args[Math.floor(Math.random() * args.length)]);\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.cycle = function () // variable argument\r\n    {\r\n        var args = arguments;\r\n\r\n        return new Enumerable(function () {\r\n            var index = 0;\r\n            return new IEnumerator(\r\n                function () {\r\n                    args = (args[0] instanceof Array) ? args[0]\r\n                        : (args[0].getEnumerator != null) ? args[0].toArray()\r\n                        : args;\r\n                },\r\n                function () {\r\n                    if (index >= args.length) index = 0;\r\n                    return this.yieldReturn(args[index++]);\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.empty = function () {\r\n        return new Enumerable(function () {\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () { return false; },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.from = function (obj) {\r\n        if (obj == null) {\r\n            return Enumerable.empty();\r\n        }\r\n        if (obj instanceof Enumerable) {\r\n            return obj;\r\n        }\r\n        if (typeof obj == Types.Number || typeof obj == Types.Boolean) {\r\n            return Enumerable.repeat(obj, 1);\r\n        }\r\n        if (typeof obj == Types.String) {\r\n            return new Enumerable(function () {\r\n                var index = 0;\r\n                return new IEnumerator(\r\n                    Functions.Blank,\r\n                    function () {\r\n                        return (index < obj.length) ? this.yieldReturn(obj.charAt(index++)) : false;\r\n                    },\r\n                    Functions.Blank);\r\n            });\r\n        }\r\n        if (typeof obj != Types.Function) {\r\n            // array or array like object\r\n            if (typeof obj.length == Types.Number) {\r\n                return new ArrayEnumerable(obj);\r\n            }\r\n\r\n            // JScript's IEnumerable\r\n            if (!(obj instanceof Object) && Utils.isIEnumerable(obj)) {\r\n                return new Enumerable(function () {\r\n                    var isFirst = true;\r\n                    var enumerator;\r\n                    return new IEnumerator(\r\n                        function () { enumerator = new Enumerator(obj); },\r\n                        function () {\r\n                            if (isFirst) isFirst = false;\r\n                            else enumerator.moveNext();\r\n\r\n                            return (enumerator.atEnd()) ? false : this.yieldReturn(enumerator.item());\r\n                        },\r\n                        Functions.Blank);\r\n                });\r\n            }\r\n\r\n            // WinMD IIterable<T>\r\n            if (typeof Windows === Types.Object && typeof obj.first === Types.Function) {\r\n                return new Enumerable(function () {\r\n                    var isFirst = true;\r\n                    var enumerator;\r\n                    return new IEnumerator(\r\n                        function () { enumerator = obj.first(); },\r\n                        function () {\r\n                            if (isFirst) isFirst = false;\r\n                            else enumerator.moveNext();\r\n\r\n                            return (enumerator.hasCurrent) ? this.yieldReturn(enumerator.current) : this.yieldBreak();\r\n                        },\r\n                        Functions.Blank);\r\n                });\r\n            }\r\n        }\r\n\r\n        // case function/object : Create keyValuePair[]\r\n        return new Enumerable(function () {\r\n            var array = [];\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    for (var key in obj) {\r\n                        var value = obj[key];\r\n                        if (!(value instanceof Function) && Object.prototype.hasOwnProperty.call(obj, key)) {\r\n                            array.push({ key: key, value: value });\r\n                        }\r\n                    }\r\n                },\r\n                function () {\r\n                    return (index < array.length)\r\n                        ? this.yieldReturn(array[index++])\r\n                        : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    },\r\n\r\n    Enumerable.make = function (element) {\r\n        return Enumerable.repeat(element, 1);\r\n    };\r\n\r\n    // Overload:function(input, pattern)\r\n    // Overload:function(input, pattern, flags)\r\n    Enumerable.matches = function (input, pattern, flags) {\r\n        if (flags == null) flags = \"\";\r\n        if (pattern instanceof RegExp) {\r\n            flags += (pattern.ignoreCase) ? \"i\" : \"\";\r\n            flags += (pattern.multiline) ? \"m\" : \"\";\r\n            pattern = pattern.source;\r\n        }\r\n        if (flags.indexOf(\"g\") === -1) flags += \"g\";\r\n\r\n        return new Enumerable(function () {\r\n            var regex;\r\n            return new IEnumerator(\r\n                function () { regex = new RegExp(pattern, flags); },\r\n                function () {\r\n                    var match = regex.exec(input);\r\n                    return (match) ? this.yieldReturn(match) : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function(start, count)\r\n    // Overload:function(start, count, step)\r\n    Enumerable.range = function (start, count, step) {\r\n        if (step == null) step = 1;\r\n\r\n        return new Enumerable(function () {\r\n            var value;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { value = start - step; },\r\n                function () {\r\n                    return (index++ < count)\r\n                        ? this.yieldReturn(value += step)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function(start, count)\r\n    // Overload:function(start, count, step)\r\n    Enumerable.rangeDown = function (start, count, step) {\r\n        if (step == null) step = 1;\r\n\r\n        return new Enumerable(function () {\r\n            var value;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { value = start + step; },\r\n                function () {\r\n                    return (index++ < count)\r\n                        ? this.yieldReturn(value -= step)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function(start, to)\r\n    // Overload:function(start, to, step)\r\n    Enumerable.rangeTo = function (start, to, step) {\r\n        if (step == null) step = 1;\r\n\r\n        if (start < to) {\r\n            return new Enumerable(function () {\r\n                var value;\r\n\r\n                return new IEnumerator(\r\n                function () { value = start - step; },\r\n                function () {\r\n                    var next = value += step;\r\n                    return (next <= to)\r\n                        ? this.yieldReturn(next)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n            });\r\n        }\r\n        else {\r\n            return new Enumerable(function () {\r\n                var value;\r\n\r\n                return new IEnumerator(\r\n                function () { value = start + step; },\r\n                function () {\r\n                    var next = value -= step;\r\n                    return (next >= to)\r\n                        ? this.yieldReturn(next)\r\n                        : this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n            });\r\n        }\r\n    };\r\n\r\n    // Overload:function(element)\r\n    // Overload:function(element, count)\r\n    Enumerable.repeat = function (element, count) {\r\n        if (count != null) return Enumerable.repeat(element).take(count);\r\n\r\n        return new Enumerable(function () {\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () { return this.yieldReturn(element); },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.repeatWithFinalize = function (initializer, finalizer) {\r\n        initializer = Utils.createLambda(initializer);\r\n        finalizer = Utils.createLambda(finalizer);\r\n\r\n        return new Enumerable(function () {\r\n            var element;\r\n            return new IEnumerator(\r\n                function () { element = initializer(); },\r\n                function () { return this.yieldReturn(element); },\r\n                function () {\r\n                    if (element != null) {\r\n                        finalizer(element);\r\n                        element = null;\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(func, count)\r\n    Enumerable.generate = function (func, count) {\r\n        if (count != null) return Enumerable.generate(func).take(count);\r\n        func = Utils.createLambda(func);\r\n\r\n        return new Enumerable(function () {\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () { return this.yieldReturn(func()); },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(start)\r\n    // Overload:function(start, step)\r\n    Enumerable.toInfinity = function (start, step) {\r\n        if (start == null) start = 0;\r\n        if (step == null) step = 1;\r\n\r\n        return new Enumerable(function () {\r\n            var value;\r\n            return new IEnumerator(\r\n                function () { value = start - step; },\r\n                function () { return this.yieldReturn(value += step); },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(start)\r\n    // Overload:function(start, step)\r\n    Enumerable.toNegativeInfinity = function (start, step) {\r\n        if (start == null) start = 0;\r\n        if (step == null) step = 1;\r\n\r\n        return new Enumerable(function () {\r\n            var value;\r\n            return new IEnumerator(\r\n                function () { value = start + step; },\r\n                function () { return this.yieldReturn(value -= step); },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.unfold = function (seed, func) {\r\n        func = Utils.createLambda(func);\r\n\r\n        return new Enumerable(function () {\r\n            var isFirst = true;\r\n            var value;\r\n            return new IEnumerator(\r\n                Functions.Blank,\r\n                function () {\r\n                    if (isFirst) {\r\n                        isFirst = false;\r\n                        value = seed;\r\n                        return this.yieldReturn(value);\r\n                    }\r\n                    value = func(value);\r\n                    return this.yieldReturn(value);\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.defer = function (enumerableFactory) {\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = Enumerable.from(enumerableFactory()).getEnumerator(); },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : this.yieldBreak();\r\n                },\r\n                function () {\r\n                    Utils.dispose(enumerator);\r\n                });\r\n        });\r\n    };\r\n\r\n    // Extension Methods\r\n\r\n    /* Projection and Filtering Methods */\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(func, resultSelector<element>)\r\n    // Overload:function(func, resultSelector<element, nestLevel>)\r\n    Enumerable.prototype.traverseBreadthFirst = function (func, resultSelector) {\r\n        var source = this;\r\n        func = Utils.createLambda(func);\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var nestLevel = 0;\r\n            var buffer = [];\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (true) {\r\n                        if (enumerator.moveNext()) {\r\n                            buffer.push(enumerator.current());\r\n                            return this.yieldReturn(resultSelector(enumerator.current(), nestLevel));\r\n                        }\r\n\r\n                        var next = Enumerable.from(buffer).selectMany(function (x) { return func(x); });\r\n                        if (!next.any()) {\r\n                            return false;\r\n                        }\r\n                        else {\r\n                            nestLevel++;\r\n                            buffer = [];\r\n                            Utils.dispose(enumerator);\r\n                            enumerator = next.getEnumerator();\r\n                        }\r\n                    }\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(func, resultSelector<element>)\r\n    // Overload:function(func, resultSelector<element, nestLevel>)\r\n    Enumerable.prototype.traverseDepthFirst = function (func, resultSelector) {\r\n        var source = this;\r\n        func = Utils.createLambda(func);\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumeratorStack = [];\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (true) {\r\n                        if (enumerator.moveNext()) {\r\n                            var value = resultSelector(enumerator.current(), enumeratorStack.length);\r\n                            enumeratorStack.push(enumerator);\r\n                            enumerator = Enumerable.from(func(enumerator.current())).getEnumerator();\r\n                            return this.yieldReturn(value);\r\n                        }\r\n\r\n                        if (enumeratorStack.length <= 0) return false;\r\n                        Utils.dispose(enumerator);\r\n                        enumerator = enumeratorStack.pop();\r\n                    }\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    }\r\n                    finally {\r\n                        Enumerable.from(enumeratorStack).forEach(function (s) { s.dispose(); });\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.flatten = function () {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var middleEnumerator = null;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (true) {\r\n                        if (middleEnumerator != null) {\r\n                            if (middleEnumerator.moveNext()) {\r\n                                return this.yieldReturn(middleEnumerator.current());\r\n                            }\r\n                            else {\r\n                                middleEnumerator = null;\r\n                            }\r\n                        }\r\n\r\n                        if (enumerator.moveNext()) {\r\n                            if (enumerator.current() instanceof Array) {\r\n                                Utils.dispose(middleEnumerator);\r\n                                middleEnumerator = Enumerable.from(enumerator.current())\r\n                                    .selectMany(Functions.Identity)\r\n                                    .flatten()\r\n                                    .getEnumerator();\r\n                                continue;\r\n                            }\r\n                            else {\r\n                                return this.yieldReturn(enumerator.current());\r\n                            }\r\n                        }\r\n\r\n                        return false;\r\n                    }\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(middleEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.pairwise = function (selector) {\r\n        var source = this;\r\n        selector = Utils.createLambda(selector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    enumerator.moveNext();\r\n                },\r\n                function () {\r\n                    var prev = enumerator.current();\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(selector(prev, enumerator.current()))\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(seed,func<value,element>)\r\n    Enumerable.prototype.scan = function (seed, func) {\r\n        var isUseSeed;\r\n        if (func == null) {\r\n            func = Utils.createLambda(seed); // arguments[0]\r\n            isUseSeed = false;\r\n        } else {\r\n            func = Utils.createLambda(func);\r\n            isUseSeed = true;\r\n        }\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var value;\r\n            var isFirst = true;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (isFirst) {\r\n                        isFirst = false;\r\n                        if (!isUseSeed) {\r\n                            if (enumerator.moveNext()) {\r\n                                return this.yieldReturn(value = enumerator.current());\r\n                            }\r\n                        }\r\n                        else {\r\n                            return this.yieldReturn(value = seed);\r\n                        }\r\n                    }\r\n\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(value = func(value, enumerator.current()))\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(selector<element>)\r\n    // Overload:function(selector<element,index>)\r\n    Enumerable.prototype.select = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        if (selector.length <= 1) {\r\n            return new WhereSelectEnumerable(this, null, selector);\r\n        }\r\n        else {\r\n            var source = this;\r\n\r\n            return new Enumerable(function () {\r\n                var enumerator;\r\n                var index = 0;\r\n\r\n                return new IEnumerator(\r\n                    function () { enumerator = source.getEnumerator(); },\r\n                    function () {\r\n                        return (enumerator.moveNext())\r\n                            ? this.yieldReturn(selector(enumerator.current(), index++))\r\n                            : false;\r\n                    },\r\n                    function () { Utils.dispose(enumerator); });\r\n            });\r\n        }\r\n    };\r\n\r\n    // Overload:function(collectionSelector<element>)\r\n    // Overload:function(collectionSelector<element,index>)\r\n    // Overload:function(collectionSelector<element>,resultSelector)\r\n    // Overload:function(collectionSelector<element,index>,resultSelector)\r\n    Enumerable.prototype.selectMany = function (collectionSelector, resultSelector) {\r\n        var source = this;\r\n        collectionSelector = Utils.createLambda(collectionSelector);\r\n        if (resultSelector == null) resultSelector = function (a, b) { return b; };\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var middleEnumerator = undefined;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (middleEnumerator === undefined) {\r\n                        if (!enumerator.moveNext()) return false;\r\n                    }\r\n                    do {\r\n                        if (middleEnumerator == null) {\r\n                            var middleSeq = collectionSelector(enumerator.current(), index++);\r\n                            middleEnumerator = Enumerable.from(middleSeq).getEnumerator();\r\n                        }\r\n                        if (middleEnumerator.moveNext()) {\r\n                            return this.yieldReturn(resultSelector(enumerator.current(), middleEnumerator.current()));\r\n                        }\r\n                        Utils.dispose(middleEnumerator);\r\n                        middleEnumerator = null;\r\n                    } while (enumerator.moveNext());\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(middleEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    // Overload:function(predicate<element>)\r\n    // Overload:function(predicate<element,index>)\r\n    Enumerable.prototype.where = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        if (predicate.length <= 1) {\r\n            return new WhereEnumerable(this, predicate);\r\n        }\r\n        else {\r\n            var source = this;\r\n\r\n            return new Enumerable(function () {\r\n                var enumerator;\r\n                var index = 0;\r\n\r\n                return new IEnumerator(\r\n                    function () { enumerator = source.getEnumerator(); },\r\n                    function () {\r\n                        while (enumerator.moveNext()) {\r\n                            if (predicate(enumerator.current(), index++)) {\r\n                                return this.yieldReturn(enumerator.current());\r\n                            }\r\n                        }\r\n                        return false;\r\n                    },\r\n                    function () { Utils.dispose(enumerator); });\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    // Overload:function(selector<element>)\r\n    // Overload:function(selector<element,index>)\r\n    Enumerable.prototype.choose = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        var result = selector(enumerator.current(), index++);\r\n                        if (result != null) {\r\n                            return this.yieldReturn(result);\r\n                        }\r\n                    }\r\n                    return this.yieldBreak();\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.ofType = function (type) {\r\n        var typeName;\r\n        switch (type) {\r\n            case Number:\r\n                typeName = Types.Number;\r\n                break;\r\n            case String:\r\n                typeName = Types.String;\r\n                break;\r\n            case Boolean:\r\n                typeName = Types.Boolean;\r\n                break;\r\n            case Function:\r\n                typeName = Types.Function;\r\n                break;\r\n            default:\r\n                typeName = null;\r\n                break;\r\n        }\r\n        return (typeName === null)\r\n            ? this.where(function (x) { return x instanceof type; })\r\n            : this.where(function (x) { return typeof x === typeName; });\r\n    };\r\n\r\n    // mutiple arguments, last one is selector, others are enumerable\r\n    Enumerable.prototype.zip = function () {\r\n        var args = arguments;\r\n        var selector = Utils.createLambda(arguments[arguments.length - 1]);\r\n\r\n        var source = this;\r\n        // optimized case:argument is 2\r\n        if (arguments.length == 2) {\r\n            var second = arguments[0];\r\n\r\n            return new Enumerable(function () {\r\n                var firstEnumerator;\r\n                var secondEnumerator;\r\n                var index = 0;\r\n\r\n                return new IEnumerator(\r\n                function () {\r\n                    firstEnumerator = source.getEnumerator();\r\n                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                },\r\n                function () {\r\n                    if (firstEnumerator.moveNext() && secondEnumerator.moveNext()) {\r\n                        return this.yieldReturn(selector(firstEnumerator.current(), secondEnumerator.current(), index++));\r\n                    }\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    } finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            return new Enumerable(function () {\r\n                var enumerators;\r\n                var index = 0;\r\n\r\n                return new IEnumerator(\r\n                function () {\r\n                    var array = Enumerable.make(source)\r\n                        .concat(Enumerable.from(args).takeExceptLast().select(Enumerable.from))\r\n                        .select(function (x) { return x.getEnumerator() })\r\n                        .toArray();\r\n                    enumerators = Enumerable.from(array);\r\n                },\r\n                function () {\r\n                    if (enumerators.all(function (x) { return x.moveNext() })) {\r\n                        var array = enumerators\r\n                            .select(function (x) { return x.current() })\r\n                            .toArray();\r\n                        array.push(index++);\r\n                        return this.yieldReturn(selector.apply(null, array));\r\n                    }\r\n                    else {\r\n                        return this.yieldBreak();\r\n                    }\r\n                },\r\n                function () {\r\n                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    // mutiple arguments\r\n    Enumerable.prototype.merge = function () {\r\n        var args = arguments;\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerators;\r\n            var index = -1;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerators = Enumerable.make(source)\r\n                        .concat(Enumerable.from(args).select(Enumerable.from))\r\n                        .select(function (x) { return x.getEnumerator() })\r\n                        .toArray();\r\n                },\r\n                function () {\r\n                    while (enumerators.length > 0) {\r\n                        index = (index >= enumerators.length - 1) ? 0 : index + 1;\r\n                        var enumerator = enumerators[index];\r\n\r\n                        if (enumerator.moveNext()) {\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n                        else {\r\n                            enumerator.dispose();\r\n                            enumerators.splice(index--, 1);\r\n                        }\r\n                    }\r\n                    return this.yieldBreak();\r\n                },\r\n                function () {\r\n                    Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                });\r\n        });\r\n    };\r\n\r\n    /* Join Methods */\r\n\r\n    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\n    Enumerable.prototype.join = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n        outerKeySelector = Utils.createLambda(outerKeySelector);\r\n        innerKeySelector = Utils.createLambda(innerKeySelector);\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var outerEnumerator;\r\n            var lookup;\r\n            var innerElements = null;\r\n            var innerCount = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    outerEnumerator = source.getEnumerator();\r\n                    lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n                },\r\n                function () {\r\n                    while (true) {\r\n                        if (innerElements != null) {\r\n                            var innerElement = innerElements[innerCount++];\r\n                            if (innerElement !== undefined) {\r\n                                return this.yieldReturn(resultSelector(outerEnumerator.current(), innerElement));\r\n                            }\r\n\r\n                            innerElement = null;\r\n                            innerCount = 0;\r\n                        }\r\n\r\n                        if (outerEnumerator.moveNext()) {\r\n                            var key = outerKeySelector(outerEnumerator.current());\r\n                            innerElements = lookup.get(key).toArray();\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                },\r\n                function () { Utils.dispose(outerEnumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector)\r\n    // Overload:function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector)\r\n    Enumerable.prototype.groupJoin = function (inner, outerKeySelector, innerKeySelector, resultSelector, compareSelector) {\r\n        outerKeySelector = Utils.createLambda(outerKeySelector);\r\n        innerKeySelector = Utils.createLambda(innerKeySelector);\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator = source.getEnumerator();\r\n            var lookup = null;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    lookup = Enumerable.from(inner).toLookup(innerKeySelector, Functions.Identity, compareSelector);\r\n                },\r\n                function () {\r\n                    if (enumerator.moveNext()) {\r\n                        var innerElement = lookup.get(outerKeySelector(enumerator.current()));\r\n                        return this.yieldReturn(resultSelector(enumerator.current(), innerElement));\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    /* Set Methods */\r\n\r\n    Enumerable.prototype.all = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        var result = true;\r\n        this.forEach(function (x) {\r\n            if (!predicate(x)) {\r\n                result = false;\r\n                return false; // break\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.any = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        var enumerator = this.getEnumerator();\r\n        try {\r\n            if (arguments.length == 0) return enumerator.moveNext(); // case:function()\r\n\r\n            while (enumerator.moveNext()) // case:function(predicate)\r\n            {\r\n                if (predicate(enumerator.current())) return true;\r\n            }\r\n            return false;\r\n        }\r\n        finally {\r\n            Utils.dispose(enumerator);\r\n        }\r\n    };\r\n\r\n    Enumerable.prototype.isEmpty = function () {\r\n        return !this.any();\r\n    };\r\n\r\n    // multiple arguments\r\n    Enumerable.prototype.concat = function () {\r\n        var source = this;\r\n\r\n        if (arguments.length == 1) {\r\n            var second = arguments[0];\r\n\r\n            return new Enumerable(function () {\r\n                var firstEnumerator;\r\n                var secondEnumerator;\r\n\r\n                return new IEnumerator(\r\n                function () { firstEnumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (secondEnumerator == null) {\r\n                        if (firstEnumerator.moveNext()) return this.yieldReturn(firstEnumerator.current());\r\n                        secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                    }\r\n                    if (secondEnumerator.moveNext()) return this.yieldReturn(secondEnumerator.current());\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        else {\r\n            var args = arguments;\r\n\r\n            return new Enumerable(function () {\r\n                var enumerators;\r\n\r\n                return new IEnumerator(\r\n                    function () {\r\n                        enumerators = Enumerable.make(source)\r\n                            .concat(Enumerable.from(args).select(Enumerable.from))\r\n                            .select(function (x) { return x.getEnumerator() })\r\n                            .toArray();\r\n                    },\r\n                    function () {\r\n                        while (enumerators.length > 0) {\r\n                            var enumerator = enumerators[0];\r\n\r\n                            if (enumerator.moveNext()) {\r\n                                return this.yieldReturn(enumerator.current());\r\n                            }\r\n                            else {\r\n                                enumerator.dispose();\r\n                                enumerators.splice(0, 1);\r\n                            }\r\n                        }\r\n                        return this.yieldBreak();\r\n                    },\r\n                    function () {\r\n                        Enumerable.from(enumerators).forEach(Utils.dispose);\r\n                    });\r\n            });\r\n        }\r\n    };\r\n\r\n    Enumerable.prototype.insert = function (index, second) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var firstEnumerator;\r\n            var secondEnumerator;\r\n            var count = 0;\r\n            var isEnumerated = false;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    firstEnumerator = source.getEnumerator();\r\n                    secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                },\r\n                function () {\r\n                    if (count == index && secondEnumerator.moveNext()) {\r\n                        isEnumerated = true;\r\n                        return this.yieldReturn(secondEnumerator.current());\r\n                    }\r\n                    if (firstEnumerator.moveNext()) {\r\n                        count++;\r\n                        return this.yieldReturn(firstEnumerator.current());\r\n                    }\r\n                    if (!isEnumerated && secondEnumerator.moveNext()) {\r\n                        return this.yieldReturn(secondEnumerator.current());\r\n                    }\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.alternate = function (alternateValueOrSequence) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var buffer;\r\n            var enumerator;\r\n            var alternateSequence;\r\n            var alternateEnumerator;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    if (alternateValueOrSequence instanceof Array || alternateValueOrSequence.getEnumerator != null) {\r\n                        alternateSequence = Enumerable.from(Enumerable.from(alternateValueOrSequence).toArray()); // freeze\r\n                    }\r\n                    else {\r\n                        alternateSequence = Enumerable.make(alternateValueOrSequence);\r\n                    }\r\n                    enumerator = source.getEnumerator();\r\n                    if (enumerator.moveNext()) buffer = enumerator.current();\r\n                },\r\n                function () {\r\n                    while (true) {\r\n                        if (alternateEnumerator != null) {\r\n                            if (alternateEnumerator.moveNext()) {\r\n                                return this.yieldReturn(alternateEnumerator.current());\r\n                            }\r\n                            else {\r\n                                alternateEnumerator = null;\r\n                            }\r\n                        }\r\n\r\n                        if (buffer == null && enumerator.moveNext()) {\r\n                            buffer = enumerator.current(); // hasNext\r\n                            alternateEnumerator = alternateSequence.getEnumerator();\r\n                            continue; // GOTO\r\n                        }\r\n                        else if (buffer != null) {\r\n                            var retVal = buffer;\r\n                            buffer = null;\r\n                            return this.yieldReturn(retVal);\r\n                        }\r\n\r\n                        return this.yieldBreak();\r\n                    }\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(alternateEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    // Overload:function(value)\r\n    // Overload:function(value, compareSelector)\r\n    Enumerable.prototype.contains = function (value, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var enumerator = this.getEnumerator();\r\n        try {\r\n            while (enumerator.moveNext()) {\r\n                if (compareSelector(enumerator.current()) === value) return true;\r\n            }\r\n            return false;\r\n        }\r\n        finally {\r\n            Utils.dispose(enumerator);\r\n        }\r\n    };\r\n\r\n    Enumerable.prototype.defaultIfEmpty = function (defaultValue) {\r\n        var source = this;\r\n        if (defaultValue === undefined) defaultValue = null;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var isFirst = true;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (enumerator.moveNext()) {\r\n                        isFirst = false;\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                    else if (isFirst) {\r\n                        isFirst = false;\r\n                        return this.yieldReturn(defaultValue);\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(compareSelector)\r\n    Enumerable.prototype.distinct = function (compareSelector) {\r\n        return this.except(Enumerable.empty(), compareSelector);\r\n    };\r\n\r\n    Enumerable.prototype.distinctUntilChanged = function (compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var compareKey;\r\n            var initial;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        var key = compareSelector(enumerator.current());\r\n\r\n                        if (initial) {\r\n                            initial = false;\r\n                            compareKey = key;\r\n                            return this.yieldReturn(enumerator.current());\r\n                        }\r\n\r\n                        if (compareKey === key) {\r\n                            continue;\r\n                        }\r\n\r\n                        compareKey = key;\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                    return this.yieldBreak();\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(second)\r\n    // Overload:function(second, compareSelector)\r\n    Enumerable.prototype.except = function (second, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var keys;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    keys = new Dictionary(compareSelector);\r\n                    Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n                },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        var current = enumerator.current();\r\n                        if (!keys.contains(current)) {\r\n                            keys.add(current);\r\n                            return this.yieldReturn(current);\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(second)\r\n    // Overload:function(second, compareSelector)\r\n    Enumerable.prototype.intersect = function (second, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var keys;\r\n            var outs;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n\r\n                    keys = new Dictionary(compareSelector);\r\n                    Enumerable.from(second).forEach(function (key) { keys.add(key); });\r\n                    outs = new Dictionary(compareSelector);\r\n                },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        var current = enumerator.current();\r\n                        if (!outs.contains(current) && keys.contains(current)) {\r\n                            outs.add(current);\r\n                            return this.yieldReturn(current);\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(second)\r\n    // Overload:function(second, compareSelector)\r\n    Enumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n\r\n        var firstEnumerator = this.getEnumerator();\r\n        try {\r\n            var secondEnumerator = Enumerable.from(second).getEnumerator();\r\n            try {\r\n                while (firstEnumerator.moveNext()) {\r\n                    if (!secondEnumerator.moveNext()\r\n                    || compareSelector(firstEnumerator.current()) !== compareSelector(secondEnumerator.current())) {\r\n                        return false;\r\n                    }\r\n                }\r\n\r\n                if (secondEnumerator.moveNext()) return false;\r\n                return true;\r\n            }\r\n            finally {\r\n                Utils.dispose(secondEnumerator);\r\n            }\r\n        }\r\n        finally {\r\n            Utils.dispose(firstEnumerator);\r\n        }\r\n    };\r\n\r\n    Enumerable.prototype.union = function (second, compareSelector) {\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var firstEnumerator;\r\n            var secondEnumerator;\r\n            var keys;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    firstEnumerator = source.getEnumerator();\r\n                    keys = new Dictionary(compareSelector);\r\n                },\r\n                function () {\r\n                    var current;\r\n                    if (secondEnumerator === undefined) {\r\n                        while (firstEnumerator.moveNext()) {\r\n                            current = firstEnumerator.current();\r\n                            if (!keys.contains(current)) {\r\n                                keys.add(current);\r\n                                return this.yieldReturn(current);\r\n                            }\r\n                        }\r\n                        secondEnumerator = Enumerable.from(second).getEnumerator();\r\n                    }\r\n                    while (secondEnumerator.moveNext()) {\r\n                        current = secondEnumerator.current();\r\n                        if (!keys.contains(current)) {\r\n                            keys.add(current);\r\n                            return this.yieldReturn(current);\r\n                        }\r\n                    }\r\n                    return false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(firstEnumerator);\r\n                    }\r\n                    finally {\r\n                        Utils.dispose(secondEnumerator);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    /* Ordering Methods */\r\n\r\n    Enumerable.prototype.orderBy = function (keySelector) {\r\n        return new OrderedEnumerable(this, keySelector, false);\r\n    };\r\n\r\n    Enumerable.prototype.orderByDescending = function (keySelector) {\r\n        return new OrderedEnumerable(this, keySelector, true);\r\n    };\r\n\r\n    Enumerable.prototype.reverse = function () {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var buffer;\r\n            var index;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    buffer = source.toArray();\r\n                    index = buffer.length;\r\n                },\r\n                function () {\r\n                    return (index > 0)\r\n                        ? this.yieldReturn(buffer[--index])\r\n                        : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.shuffle = function () {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var buffer;\r\n\r\n            return new IEnumerator(\r\n                function () { buffer = source.toArray(); },\r\n                function () {\r\n                    if (buffer.length > 0) {\r\n                        var i = Math.floor(Math.random() * buffer.length);\r\n                        return this.yieldReturn(buffer.splice(i, 1)[0]);\r\n                    }\r\n                    return false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.weightedSample = function (weightSelector) {\r\n        weightSelector = Utils.createLambda(weightSelector);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var sortedByBound;\r\n            var totalWeight = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    sortedByBound = source\r\n                        .choose(function (x) {\r\n                            var weight = weightSelector(x);\r\n                            if (weight <= 0) return null; // ignore 0\r\n\r\n                            totalWeight += weight;\r\n                            return { value: x, bound: totalWeight };\r\n                        })\r\n                        .toArray();\r\n                },\r\n                function () {\r\n                    if (sortedByBound.length > 0) {\r\n                        var draw = Math.floor(Math.random() * totalWeight) + 1;\r\n\r\n                        var lower = -1;\r\n                        var upper = sortedByBound.length;\r\n                        while (upper - lower > 1) {\r\n                            var index = Math.floor((lower + upper) / 2);\r\n                            if (sortedByBound[index].bound >= draw) {\r\n                                upper = index;\r\n                            }\r\n                            else {\r\n                                lower = index;\r\n                            }\r\n                        }\r\n\r\n                        return this.yieldReturn(sortedByBound[upper].value);\r\n                    }\r\n\r\n                    return this.yieldBreak();\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    /* Grouping Methods */\r\n\r\n    // Overload:function(keySelector)\r\n    // Overload:function(keySelector,elementSelector)\r\n    // Overload:function(keySelector,elementSelector,resultSelector)\r\n    // Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\n    Enumerable.prototype.groupBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n        var source = this;\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n        if (resultSelector != null) resultSelector = Utils.createLambda(resultSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.toLookup(keySelector, elementSelector, compareSelector)\r\n                        .toEnumerable()\r\n                        .getEnumerator();\r\n                },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        return (resultSelector == null)\r\n                            ? this.yieldReturn(enumerator.current())\r\n                            : this.yieldReturn(resultSelector(enumerator.current().key(), enumerator.current()));\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(keySelector)\r\n    // Overload:function(keySelector,elementSelector)\r\n    // Overload:function(keySelector,elementSelector,resultSelector)\r\n    // Overload:function(keySelector,elementSelector,resultSelector,compareSelector)\r\n    Enumerable.prototype.partitionBy = function (keySelector, elementSelector, resultSelector, compareSelector) {\r\n\r\n        var source = this;\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n        var hasResultSelector;\r\n        if (resultSelector == null) {\r\n            hasResultSelector = false;\r\n            resultSelector = function (key, group) { return new Grouping(key, group); };\r\n        }\r\n        else {\r\n            hasResultSelector = true;\r\n            resultSelector = Utils.createLambda(resultSelector);\r\n        }\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var key;\r\n            var compareKey;\r\n            var group = [];\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    if (enumerator.moveNext()) {\r\n                        key = keySelector(enumerator.current());\r\n                        compareKey = compareSelector(key);\r\n                        group.push(elementSelector(enumerator.current()));\r\n                    }\r\n                },\r\n                function () {\r\n                    var hasNext;\r\n                    while ((hasNext = enumerator.moveNext()) == true) {\r\n                        if (compareKey === compareSelector(keySelector(enumerator.current()))) {\r\n                            group.push(elementSelector(enumerator.current()));\r\n                        }\r\n                        else break;\r\n                    }\r\n\r\n                    if (group.length > 0) {\r\n                        var result = (hasResultSelector)\r\n                            ? resultSelector(key, Enumerable.from(group))\r\n                            : resultSelector(key, group);\r\n                        if (hasNext) {\r\n                            key = keySelector(enumerator.current());\r\n                            compareKey = compareSelector(key);\r\n                            group = [elementSelector(enumerator.current())];\r\n                        }\r\n                        else group = [];\r\n\r\n                        return this.yieldReturn(result);\r\n                    }\r\n\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.buffer = function (count) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    var array = [];\r\n                    var index = 0;\r\n                    while (enumerator.moveNext()) {\r\n                        array.push(enumerator.current());\r\n                        if (++index >= count) return this.yieldReturn(array);\r\n                    }\r\n                    if (array.length > 0) return this.yieldReturn(array);\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    /* Aggregate Methods */\r\n\r\n    // Overload:function(func)\r\n    // Overload:function(seed,func)\r\n    // Overload:function(seed,func,resultSelector)\r\n    Enumerable.prototype.aggregate = function (seed, func, resultSelector) {\r\n        resultSelector = Utils.createLambda(resultSelector);\r\n        return resultSelector(this.scan(seed, func, resultSelector).last());\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.average = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        var sum = 0;\r\n        var count = 0;\r\n        this.forEach(function (x) {\r\n            sum += selector(x);\r\n            ++count;\r\n        });\r\n\r\n        return sum / count;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.count = function (predicate) {\r\n        predicate = (predicate == null) ? Functions.True : Utils.createLambda(predicate);\r\n\r\n        var count = 0;\r\n        this.forEach(function (x, i) {\r\n            if (predicate(x, i))++count;\r\n        });\r\n        return count;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.max = function (selector) {\r\n        if (selector == null) selector = Functions.Identity;\r\n        return this.select(selector).aggregate(function (a, b) { return (a > b) ? a : b; });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.min = function (selector) {\r\n        if (selector == null) selector = Functions.Identity;\r\n        return this.select(selector).aggregate(function (a, b) { return (a < b) ? a : b; });\r\n    };\r\n\r\n    Enumerable.prototype.maxBy = function (keySelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        return this.aggregate(function (a, b) { return (keySelector(a) > keySelector(b)) ? a : b; });\r\n    };\r\n\r\n    Enumerable.prototype.minBy = function (keySelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        return this.aggregate(function (a, b) { return (keySelector(a) < keySelector(b)) ? a : b; });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.sum = function (selector) {\r\n        if (selector == null) selector = Functions.Identity;\r\n        return this.select(selector).aggregate(0, function (a, b) { return a + b; });\r\n    };\r\n\r\n    /* Paging Methods */\r\n\r\n    Enumerable.prototype.elementAt = function (index) {\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x, i) {\r\n            if (i == index) {\r\n                value = x;\r\n                found = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        if (!found) throw new Error(\"index is less than 0 or greater than or equal to the number of elements in source.\");\r\n        return value;\r\n    };\r\n\r\n    Enumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x, i) {\r\n            if (i == index) {\r\n                value = x;\r\n                found = true;\r\n                return false;\r\n            }\r\n        });\r\n\r\n        return (!found) ? defaultValue : value;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.first = function (predicate) {\r\n        if (predicate != null) return this.where(predicate).first();\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            value = x;\r\n            found = true;\r\n            return false;\r\n        });\r\n\r\n        if (!found) throw new Error(\"first:No element satisfies the condition.\");\r\n        return value;\r\n    };\r\n\r\n    Enumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        if (predicate != null) return this.where(predicate).firstOrDefault(null, defaultValue);\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            value = x;\r\n            found = true;\r\n            return false;\r\n        });\r\n        return (!found) ? defaultValue : value;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.last = function (predicate) {\r\n        if (predicate != null) return this.where(predicate).last();\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            found = true;\r\n            value = x;\r\n        });\r\n\r\n        if (!found) throw new Error(\"last:No element satisfies the condition.\");\r\n        return value;\r\n    };\r\n\r\n    // Overload:function(defaultValue)\r\n    // Overload:function(defaultValue,predicate)\r\n    Enumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        if (predicate != null) return this.where(predicate).lastOrDefault(null, defaultValue);\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            found = true;\r\n            value = x;\r\n        });\r\n        return (!found) ? defaultValue : value;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.single = function (predicate) {\r\n        if (predicate != null) return this.where(predicate).single();\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            if (!found) {\r\n                found = true;\r\n                value = x;\r\n            } else throw new Error(\"single:sequence contains more than one element.\");\r\n        });\r\n\r\n        if (!found) throw new Error(\"single:No element satisfies the condition.\");\r\n        return value;\r\n    };\r\n\r\n    // Overload:function(defaultValue)\r\n    // Overload:function(defaultValue,predicate)\r\n    Enumerable.prototype.singleOrDefault = function (predicate, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        if (predicate != null) return this.where(predicate).singleOrDefault(null, defaultValue);\r\n\r\n        var value;\r\n        var found = false;\r\n        this.forEach(function (x) {\r\n            if (!found) {\r\n                found = true;\r\n                value = x;\r\n            } else throw new Error(\"single:sequence contains more than one element.\");\r\n        });\r\n\r\n        return (!found) ? defaultValue : value;\r\n    };\r\n\r\n    Enumerable.prototype.skip = function (count) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = source.getEnumerator();\r\n                    while (index++ < count && enumerator.moveNext()) {\r\n                    }\r\n                    ;\r\n                },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(predicate<element>)\r\n    // Overload:function(predicate<element,index>)\r\n    Enumerable.prototype.skipWhile = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n            var isSkipEnd = false;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (!isSkipEnd) {\r\n                        if (enumerator.moveNext()) {\r\n                            if (!predicate(enumerator.current(), index++)) {\r\n                                isSkipEnd = true;\r\n                                return this.yieldReturn(enumerator.current());\r\n                            }\r\n                            continue;\r\n                        } else return false;\r\n                    }\r\n\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.take = function (count) {\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    return (index++ < count && enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); }\r\n            );\r\n        });\r\n    };\r\n\r\n    // Overload:function(predicate<element>)\r\n    // Overload:function(predicate<element,index>)\r\n    Enumerable.prototype.takeWhile = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    return (enumerator.moveNext() && predicate(enumerator.current(), index++))\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(count)\r\n    Enumerable.prototype.takeExceptLast = function (count) {\r\n        if (count == null) count = 1;\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            if (count <= 0) return source.getEnumerator(); // do nothing\r\n\r\n            var enumerator;\r\n            var q = [];\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (enumerator.moveNext()) {\r\n                        if (q.length == count) {\r\n                            q.push(enumerator.current());\r\n                            return this.yieldReturn(q.shift());\r\n                        }\r\n                        q.push(enumerator.current());\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.takeFromLast = function (count) {\r\n        if (count <= 0 || count == null) return Enumerable.empty();\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var sourceEnumerator;\r\n            var enumerator;\r\n            var q = [];\r\n\r\n            return new IEnumerator(\r\n                function () { sourceEnumerator = source.getEnumerator(); },\r\n                function () {\r\n                    while (sourceEnumerator.moveNext()) {\r\n                        if (q.length == count) q.shift();\r\n                        q.push(sourceEnumerator.current());\r\n                    }\r\n                    if (enumerator == null) {\r\n                        enumerator = Enumerable.from(q).getEnumerator();\r\n                    }\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(item)\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.indexOf = function (item) {\r\n        var found = null;\r\n\r\n        // item as predicate\r\n        if (typeof (item) === Types.Function) {\r\n            this.forEach(function (x, i) {\r\n                if (item(x, i)) {\r\n                    found = i;\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            this.forEach(function (x, i) {\r\n                if (x === item) {\r\n                    found = i;\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n\r\n        return (found !== null) ? found : -1;\r\n    };\r\n\r\n    // Overload:function(item)\r\n    // Overload:function(predicate)\r\n    Enumerable.prototype.lastIndexOf = function (item) {\r\n        var result = -1;\r\n\r\n        // item as predicate\r\n        if (typeof (item) === Types.Function) {\r\n            this.forEach(function (x, i) {\r\n                if (item(x, i)) result = i;\r\n            });\r\n        }\r\n        else {\r\n            this.forEach(function (x, i) {\r\n                if (x === item) result = i;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    /* Convert Methods */\r\n\r\n    Enumerable.prototype.cast = function () {\r\n        return this;\r\n    };\r\n\r\n    Enumerable.prototype.asEnumerable = function () {\r\n        return Enumerable.from(this);\r\n    };\r\n\r\n    Enumerable.prototype.toArray = function () {\r\n        var array = [];\r\n        this.forEach(function (x) { array.push(x); });\r\n        return array;\r\n    };\r\n\r\n    // Overload:function(keySelector)\r\n    // Overload:function(keySelector, elementSelector)\r\n    // Overload:function(keySelector, elementSelector, compareSelector)\r\n    Enumerable.prototype.toLookup = function (keySelector, elementSelector, compareSelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n\r\n        var dict = new Dictionary(compareSelector);\r\n        this.forEach(function (x) {\r\n            var key = keySelector(x);\r\n            var element = elementSelector(x);\r\n\r\n            var array = dict.get(key);\r\n            if (array !== undefined) array.push(element);\r\n            else dict.add(key, [element]);\r\n        });\r\n        return new Lookup(dict);\r\n    };\r\n\r\n    Enumerable.prototype.toObject = function (keySelector, elementSelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n\r\n        var obj = {};\r\n        this.forEach(function (x) {\r\n            obj[keySelector(x)] = elementSelector(x);\r\n        });\r\n        return obj;\r\n    };\r\n\r\n    // Overload:function(keySelector, elementSelector)\r\n    // Overload:function(keySelector, elementSelector, compareSelector)\r\n    Enumerable.prototype.toDictionary = function (keySelector, elementSelector, compareSelector) {\r\n        keySelector = Utils.createLambda(keySelector);\r\n        elementSelector = Utils.createLambda(elementSelector);\r\n        compareSelector = Utils.createLambda(compareSelector);\r\n\r\n        var dict = new Dictionary(compareSelector);\r\n        this.forEach(function (x) {\r\n            dict.add(keySelector(x), elementSelector(x));\r\n        });\r\n        return dict;\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(replacer)\r\n    // Overload:function(replacer, space)\r\n    Enumerable.prototype.toJSONString = function (replacer, space) {\r\n        if (typeof JSON === Types.Undefined || JSON.stringify == null) {\r\n            throw new Error(\"toJSONString can't find JSON.stringify. This works native JSON support Browser or include json2.js\");\r\n        }\r\n        return JSON.stringify(this.toArray(), replacer, space);\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(separator)\r\n    // Overload:function(separator,selector)\r\n    Enumerable.prototype.toJoinedString = function (separator, selector) {\r\n        if (separator == null) separator = \"\";\r\n        if (selector == null) selector = Functions.Identity;\r\n\r\n        return this.select(selector).toArray().join(separator);\r\n    };\r\n\r\n\r\n    /* Action Methods */\r\n\r\n    // Overload:function(action<element>)\r\n    // Overload:function(action<element,index>)\r\n    Enumerable.prototype.doAction = function (action) {\r\n        var source = this;\r\n        action = Utils.createLambda(action);\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n            var index = 0;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    if (enumerator.moveNext()) {\r\n                        action(enumerator.current(), index++);\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                    return false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    // Overload:function(action<element>)\r\n    // Overload:function(action<element,index>)\r\n    // Overload:function(func<element,bool>)\r\n    // Overload:function(func<element,index,bool>)\r\n    Enumerable.prototype.forEach = function (action) {\r\n        action = Utils.createLambda(action);\r\n\r\n        var index = 0;\r\n        var enumerator = this.getEnumerator();\r\n        try {\r\n            while (enumerator.moveNext()) {\r\n                if (action(enumerator.current(), index++) === false) break;\r\n            }\r\n        } finally {\r\n            Utils.dispose(enumerator);\r\n        }\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(separator)\r\n    // Overload:function(separator,selector)\r\n    Enumerable.prototype.write = function (separator, selector) {\r\n        if (separator == null) separator = \"\";\r\n        selector = Utils.createLambda(selector);\r\n\r\n        var isFirst = true;\r\n        this.forEach(function (item) {\r\n            if (isFirst) isFirst = false;\r\n            else document.write(separator);\r\n            document.write(selector(item));\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.writeLine = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        this.forEach(function (item) {\r\n            document.writeln(selector(item) + \"<br />\");\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.force = function () {\r\n        var enumerator = this.getEnumerator();\r\n\r\n        try {\r\n            while (enumerator.moveNext()) {\r\n            }\r\n        }\r\n        finally {\r\n            Utils.dispose(enumerator);\r\n        }\r\n    };\r\n\r\n    /* Functional Methods */\r\n\r\n    Enumerable.prototype.letBind = function (func) {\r\n        func = Utils.createLambda(func);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    enumerator = Enumerable.from(func(source)).getEnumerator();\r\n                },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.share = function () {\r\n        var source = this;\r\n        var sharedEnumerator;\r\n        var disposed = false;\r\n\r\n        return new DisposableEnumerable(function () {\r\n            return new IEnumerator(\r\n                function () {\r\n                    if (sharedEnumerator == null) {\r\n                        sharedEnumerator = source.getEnumerator();\r\n                    }\r\n                },\r\n                function () {\r\n                    if (disposed) throw new Error(\"enumerator is disposed\");\r\n\r\n                    return (sharedEnumerator.moveNext())\r\n                        ? this.yieldReturn(sharedEnumerator.current())\r\n                        : false;\r\n                },\r\n                Functions.Blank\r\n            );\r\n        }, function () {\r\n            disposed = true;\r\n            Utils.dispose(sharedEnumerator);\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.memoize = function () {\r\n        var source = this;\r\n        var cache;\r\n        var enumerator;\r\n        var disposed = false;\r\n\r\n        return new DisposableEnumerable(function () {\r\n            var index = -1;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    if (enumerator == null) {\r\n                        enumerator = source.getEnumerator();\r\n                        cache = [];\r\n                    }\r\n                },\r\n                function () {\r\n                    if (disposed) throw new Error(\"enumerator is disposed\");\r\n\r\n                    index++;\r\n                    if (cache.length <= index) {\r\n                        return (enumerator.moveNext())\r\n                            ? this.yieldReturn(cache[index] = enumerator.current())\r\n                            : false;\r\n                    }\r\n\r\n                    return this.yieldReturn(cache[index]);\r\n                },\r\n                Functions.Blank\r\n            );\r\n        }, function () {\r\n            disposed = true;\r\n            Utils.dispose(enumerator);\r\n            cache = null;\r\n        });\r\n    };\r\n\r\n    /* Error Handling Methods */\r\n\r\n    Enumerable.prototype.catchError = function (handler) {\r\n        handler = Utils.createLambda(handler);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    try {\r\n                        return (enumerator.moveNext())\r\n                            ? this.yieldReturn(enumerator.current())\r\n                            : false;\r\n                    } catch (e) {\r\n                        handler(e);\r\n                        return false;\r\n                    }\r\n                },\r\n                function () { Utils.dispose(enumerator); });\r\n        });\r\n    };\r\n\r\n    Enumerable.prototype.finallyAction = function (finallyAction) {\r\n        finallyAction = Utils.createLambda(finallyAction);\r\n        var source = this;\r\n\r\n        return new Enumerable(function () {\r\n            var enumerator;\r\n\r\n            return new IEnumerator(\r\n                function () { enumerator = source.getEnumerator(); },\r\n                function () {\r\n                    return (enumerator.moveNext())\r\n                        ? this.yieldReturn(enumerator.current())\r\n                        : false;\r\n                },\r\n                function () {\r\n                    try {\r\n                        Utils.dispose(enumerator);\r\n                    } finally {\r\n                        finallyAction();\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    /* For Debug Methods */\r\n\r\n    // Overload:function()\r\n    // Overload:function(selector)\r\n    Enumerable.prototype.log = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        return this.doAction(function (item) {\r\n            if (typeof console !== Types.Undefined) {\r\n                console.log(selector(item));\r\n            }\r\n        });\r\n    };\r\n\r\n    // Overload:function()\r\n    // Overload:function(message)\r\n    // Overload:function(message,selector)\r\n    Enumerable.prototype.trace = function (message, selector) {\r\n        if (message == null) message = \"Trace\";\r\n        selector = Utils.createLambda(selector);\r\n\r\n        return this.doAction(function (item) {\r\n            if (typeof console !== Types.Undefined) {\r\n                console.log(message, selector(item));\r\n            }\r\n        });\r\n    };\r\n\r\n    // private\r\n\r\n    var OrderedEnumerable = function (source, keySelector, descending, parent) {\r\n        this.source = source;\r\n        this.keySelector = Utils.createLambda(keySelector);\r\n        this.descending = descending;\r\n        this.parent = parent;\r\n    };\r\n    OrderedEnumerable.prototype = new Enumerable();\r\n\r\n    OrderedEnumerable.prototype.createOrderedEnumerable = function (keySelector, descending) {\r\n        return new OrderedEnumerable(this.source, keySelector, descending, this);\r\n    };\r\n\r\n    OrderedEnumerable.prototype.thenBy = function (keySelector) {\r\n        return this.createOrderedEnumerable(keySelector, false);\r\n    };\r\n\r\n    OrderedEnumerable.prototype.thenByDescending = function (keySelector) {\r\n        return this.createOrderedEnumerable(keySelector, true);\r\n    };\r\n\r\n    OrderedEnumerable.prototype.getEnumerator = function () {\r\n        var self = this;\r\n        var buffer;\r\n        var indexes;\r\n        var index = 0;\r\n\r\n        return new IEnumerator(\r\n            function () {\r\n                buffer = [];\r\n                indexes = [];\r\n                self.source.forEach(function (item, index) {\r\n                    buffer.push(item);\r\n                    indexes.push(index);\r\n                });\r\n                var sortContext = SortContext.create(self, null);\r\n                sortContext.GenerateKeys(buffer);\r\n\r\n                indexes.sort(function (a, b) { return sortContext.compare(a, b); });\r\n            },\r\n            function () {\r\n                return (index < indexes.length)\r\n                    ? this.yieldReturn(buffer[indexes[index++]])\r\n                    : false;\r\n            },\r\n            Functions.Blank\r\n        );\r\n    };\r\n\r\n    var SortContext = function (keySelector, descending, child) {\r\n        this.keySelector = keySelector;\r\n        this.descending = descending;\r\n        this.child = child;\r\n        this.keys = null;\r\n    };\r\n\r\n    SortContext.create = function (orderedEnumerable, currentContext) {\r\n        var context = new SortContext(orderedEnumerable.keySelector, orderedEnumerable.descending, currentContext);\r\n        if (orderedEnumerable.parent != null) return SortContext.create(orderedEnumerable.parent, context);\r\n        return context;\r\n    };\r\n\r\n    SortContext.prototype.GenerateKeys = function (source) {\r\n        var len = source.length;\r\n        var keySelector = this.keySelector;\r\n        var keys = new Array(len);\r\n        for (var i = 0; i < len; i++) keys[i] = keySelector(source[i]);\r\n        this.keys = keys;\r\n\r\n        if (this.child != null) this.child.GenerateKeys(source);\r\n    };\r\n\r\n    SortContext.prototype.compare = function (index1, index2) {\r\n        var comparison = Utils.compare(this.keys[index1], this.keys[index2]);\r\n\r\n        if (comparison == 0) {\r\n            if (this.child != null) return this.child.compare(index1, index2);\r\n            return Utils.compare(index1, index2);\r\n        }\r\n\r\n        return (this.descending) ? -comparison : comparison;\r\n    };\r\n\r\n    var DisposableEnumerable = function (getEnumerator, dispose) {\r\n        this.dispose = dispose;\r\n        Enumerable.call(this, getEnumerator);\r\n    };\r\n    DisposableEnumerable.prototype = new Enumerable();\r\n\r\n    // optimize array or arraylike object\r\n\r\n    var ArrayEnumerable = function (source) {\r\n        this.getSource = function () { return source; };\r\n    };\r\n    ArrayEnumerable.prototype = new Enumerable();\r\n\r\n    ArrayEnumerable.prototype.any = function (predicate) {\r\n        return (predicate == null)\r\n            ? (this.getSource().length > 0)\r\n            : Enumerable.prototype.any.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.count = function (predicate) {\r\n        return (predicate == null)\r\n            ? this.getSource().length\r\n            : Enumerable.prototype.count.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.elementAt = function (index) {\r\n        var source = this.getSource();\r\n        return (0 <= index && index < source.length)\r\n            ? source[index]\r\n            : Enumerable.prototype.elementAt.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.elementAtOrDefault = function (index, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        var source = this.getSource();\r\n        return (0 <= index && index < source.length)\r\n            ? source[index]\r\n            : defaultValue;\r\n    };\r\n\r\n    ArrayEnumerable.prototype.first = function (predicate) {\r\n        var source = this.getSource();\r\n        return (predicate == null && source.length > 0)\r\n            ? source[0]\r\n            : Enumerable.prototype.first.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.firstOrDefault = function (predicate, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        if (predicate != null) {\r\n            return Enumerable.prototype.firstOrDefault.apply(this, arguments);\r\n        }\r\n\r\n        var source = this.getSource();\r\n        return source.length > 0 ? source[0] : defaultValue;\r\n    };\r\n\r\n    ArrayEnumerable.prototype.last = function (predicate) {\r\n        var source = this.getSource();\r\n        return (predicate == null && source.length > 0)\r\n            ? source[source.length - 1]\r\n            : Enumerable.prototype.last.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.lastOrDefault = function (predicate, defaultValue) {\r\n        if (defaultValue === undefined) defaultValue = null;\r\n        if (predicate != null) {\r\n            return Enumerable.prototype.lastOrDefault.apply(this, arguments);\r\n        }\r\n\r\n        var source = this.getSource();\r\n        return source.length > 0 ? source[source.length - 1] : defaultValue;\r\n    };\r\n\r\n    ArrayEnumerable.prototype.skip = function (count) {\r\n        var source = this.getSource();\r\n\r\n        return new Enumerable(function () {\r\n            var index;\r\n\r\n            return new IEnumerator(\r\n                function () { index = (count < 0) ? 0 : count; },\r\n                function () {\r\n                    return (index < source.length)\r\n                        ? this.yieldReturn(source[index++])\r\n                        : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    ArrayEnumerable.prototype.takeExceptLast = function (count) {\r\n        if (count == null) count = 1;\r\n        return this.take(this.getSource().length - count);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.takeFromLast = function (count) {\r\n        return this.skip(this.getSource().length - count);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.reverse = function () {\r\n        var source = this.getSource();\r\n\r\n        return new Enumerable(function () {\r\n            var index;\r\n\r\n            return new IEnumerator(\r\n                function () {\r\n                    index = source.length;\r\n                },\r\n                function () {\r\n                    return (index > 0)\r\n                        ? this.yieldReturn(source[--index])\r\n                        : false;\r\n                },\r\n                Functions.Blank);\r\n        });\r\n    };\r\n\r\n    ArrayEnumerable.prototype.sequenceEqual = function (second, compareSelector) {\r\n        if ((second instanceof ArrayEnumerable || second instanceof Array)\r\n            && compareSelector == null\r\n            && Enumerable.from(second).count() != this.count()) {\r\n            return false;\r\n        }\r\n\r\n        return Enumerable.prototype.sequenceEqual.apply(this, arguments);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.toJoinedString = function (separator, selector) {\r\n        var source = this.getSource();\r\n        if (selector != null || !(source instanceof Array)) {\r\n            return Enumerable.prototype.toJoinedString.apply(this, arguments);\r\n        }\r\n\r\n        if (separator == null) separator = \"\";\r\n        return source.join(separator);\r\n    };\r\n\r\n    ArrayEnumerable.prototype.getEnumerator = function () {\r\n        var source = this.getSource();\r\n        var index = -1;\r\n\r\n        // fast and simple enumerator\r\n        return {\r\n            current: function () { return source[index]; },\r\n            moveNext: function () {\r\n                return ++index < source.length;\r\n            },\r\n            dispose: Functions.Blank\r\n        };\r\n    };\r\n\r\n    // optimization for multiple where and multiple select and whereselect\r\n\r\n    var WhereEnumerable = function (source, predicate) {\r\n        this.prevSource = source;\r\n        this.prevPredicate = predicate; // predicate.length always <= 1\r\n    };\r\n    WhereEnumerable.prototype = new Enumerable();\r\n\r\n    WhereEnumerable.prototype.where = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        if (predicate.length <= 1) {\r\n            var prevPredicate = this.prevPredicate;\r\n            var composedPredicate = function (x) { return prevPredicate(x) && predicate(x); };\r\n            return new WhereEnumerable(this.prevSource, composedPredicate);\r\n        }\r\n        else {\r\n            // if predicate use index, can't compose\r\n            return Enumerable.prototype.where.call(this, predicate);\r\n        }\r\n    };\r\n\r\n    WhereEnumerable.prototype.select = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        return (selector.length <= 1)\r\n            ? new WhereSelectEnumerable(this.prevSource, this.prevPredicate, selector)\r\n            : Enumerable.prototype.select.call(this, selector);\r\n    };\r\n\r\n    WhereEnumerable.prototype.getEnumerator = function () {\r\n        var predicate = this.prevPredicate;\r\n        var source = this.prevSource;\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    if (predicate(enumerator.current())) {\r\n                        return this.yieldReturn(enumerator.current());\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    };\r\n\r\n    var WhereSelectEnumerable = function (source, predicate, selector) {\r\n        this.prevSource = source;\r\n        this.prevPredicate = predicate; // predicate.length always <= 1 or null\r\n        this.prevSelector = selector; // selector.length always <= 1\r\n    };\r\n    WhereSelectEnumerable.prototype = new Enumerable();\r\n\r\n    WhereSelectEnumerable.prototype.where = function (predicate) {\r\n        predicate = Utils.createLambda(predicate);\r\n\r\n        return (predicate.length <= 1)\r\n            ? new WhereEnumerable(this, predicate)\r\n            : Enumerable.prototype.where.call(this, predicate);\r\n    };\r\n\r\n    WhereSelectEnumerable.prototype.select = function (selector) {\r\n        selector = Utils.createLambda(selector);\r\n\r\n        if (selector.length <= 1) {\r\n            var prevSelector = this.prevSelector;\r\n            var composedSelector = function (x) { return selector(prevSelector(x)); };\r\n            return new WhereSelectEnumerable(this.prevSource, this.prevPredicate, composedSelector);\r\n        }\r\n        else {\r\n            // if selector use index, can't compose\r\n            return Enumerable.prototype.select.call(this, selector);\r\n        }\r\n    };\r\n\r\n    WhereSelectEnumerable.prototype.getEnumerator = function () {\r\n        var predicate = this.prevPredicate;\r\n        var selector = this.prevSelector;\r\n        var source = this.prevSource;\r\n        var enumerator;\r\n\r\n        return new IEnumerator(\r\n            function () { enumerator = source.getEnumerator(); },\r\n            function () {\r\n                while (enumerator.moveNext()) {\r\n                    if (predicate == null || predicate(enumerator.current())) {\r\n                        return this.yieldReturn(selector(enumerator.current()));\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            function () { Utils.dispose(enumerator); });\r\n    };\r\n\r\n    // Collections\r\n\r\n    var Dictionary = (function () {\r\n        // static utility methods\r\n        var callHasOwnProperty = function (target, key) {\r\n            return Object.prototype.hasOwnProperty.call(target, key);\r\n        };\r\n\r\n        var computeHashCode = function (obj) {\r\n            if (obj === null) return \"null\";\r\n            if (obj === undefined) return \"undefined\";\r\n\r\n            return (typeof obj.toString === Types.Function)\r\n                ? obj.toString()\r\n                : Object.prototype.toString.call(obj);\r\n        };\r\n\r\n        // LinkedList for Dictionary\r\n        var HashEntry = function (key, value) {\r\n            this.key = key;\r\n            this.value = value;\r\n            this.prev = null;\r\n            this.next = null;\r\n        };\r\n\r\n        var EntryList = function () {\r\n            this.first = null;\r\n            this.last = null;\r\n        };\r\n        EntryList.prototype =\r\n        {\r\n            addLast: function (entry) {\r\n                if (this.last != null) {\r\n                    this.last.next = entry;\r\n                    entry.prev = this.last;\r\n                    this.last = entry;\r\n                } else this.first = this.last = entry;\r\n            },\r\n\r\n            replace: function (entry, newEntry) {\r\n                if (entry.prev != null) {\r\n                    entry.prev.next = newEntry;\r\n                    newEntry.prev = entry.prev;\r\n                } else this.first = newEntry;\r\n\r\n                if (entry.next != null) {\r\n                    entry.next.prev = newEntry;\r\n                    newEntry.next = entry.next;\r\n                } else this.last = newEntry;\r\n\r\n            },\r\n\r\n            remove: function (entry) {\r\n                if (entry.prev != null) entry.prev.next = entry.next;\r\n                else this.first = entry.next;\r\n\r\n                if (entry.next != null) entry.next.prev = entry.prev;\r\n                else this.last = entry.prev;\r\n            }\r\n        };\r\n\r\n        // Overload:function()\r\n        // Overload:function(compareSelector)\r\n        var Dictionary = function (compareSelector) {\r\n            this.countField = 0;\r\n            this.entryList = new EntryList();\r\n            this.buckets = {}; // as Dictionary<string,List<object>>\r\n            this.compareSelector = (compareSelector == null) ? Functions.Identity : compareSelector;\r\n        };\r\n        Dictionary.prototype =\r\n        {\r\n            add: function (key, value) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                var entry = new HashEntry(key, value);\r\n                if (callHasOwnProperty(this.buckets, hash)) {\r\n                    var array = this.buckets[hash];\r\n                    for (var i = 0; i < array.length; i++) {\r\n                        if (this.compareSelector(array[i].key) === compareKey) {\r\n                            this.entryList.replace(array[i], entry);\r\n                            array[i] = entry;\r\n                            return;\r\n                        }\r\n                    }\r\n                    array.push(entry);\r\n                } else {\r\n                    this.buckets[hash] = [entry];\r\n                }\r\n                this.countField++;\r\n                this.entryList.addLast(entry);\r\n            },\r\n\r\n            get: function (key) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                if (!callHasOwnProperty(this.buckets, hash)) return undefined;\r\n\r\n                var array = this.buckets[hash];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    var entry = array[i];\r\n                    if (this.compareSelector(entry.key) === compareKey) return entry.value;\r\n                }\r\n                return undefined;\r\n            },\r\n\r\n            set: function (key, value) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                if (callHasOwnProperty(this.buckets, hash)) {\r\n                    var array = this.buckets[hash];\r\n                    for (var i = 0; i < array.length; i++) {\r\n                        if (this.compareSelector(array[i].key) === compareKey) {\r\n                            var newEntry = new HashEntry(key, value);\r\n                            this.entryList.replace(array[i], newEntry);\r\n                            array[i] = newEntry;\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n\r\n            contains: function (key) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                if (!callHasOwnProperty(this.buckets, hash)) return false;\r\n\r\n                var array = this.buckets[hash];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    if (this.compareSelector(array[i].key) === compareKey) return true;\r\n                }\r\n                return false;\r\n            },\r\n\r\n            clear: function () {\r\n                this.countField = 0;\r\n                this.buckets = {};\r\n                this.entryList = new EntryList();\r\n            },\r\n\r\n            remove: function (key) {\r\n                var compareKey = this.compareSelector(key);\r\n                var hash = computeHashCode(compareKey);\r\n                if (!callHasOwnProperty(this.buckets, hash)) return;\r\n\r\n                var array = this.buckets[hash];\r\n                for (var i = 0; i < array.length; i++) {\r\n                    if (this.compareSelector(array[i].key) === compareKey) {\r\n                        this.entryList.remove(array[i]);\r\n                        array.splice(i, 1);\r\n                        if (array.length == 0) delete this.buckets[hash];\r\n                        this.countField--;\r\n                        return;\r\n                    }\r\n                }\r\n            },\r\n\r\n            count: function () {\r\n                return this.countField;\r\n            },\r\n\r\n            toEnumerable: function () {\r\n                var self = this;\r\n                return new Enumerable(function () {\r\n                    var currentEntry;\r\n\r\n                    return new IEnumerator(\r\n                        function () { currentEntry = self.entryList.first; },\r\n                        function () {\r\n                            if (currentEntry != null) {\r\n                                var result = { key: currentEntry.key, value: currentEntry.value };\r\n                                currentEntry = currentEntry.next;\r\n                                return this.yieldReturn(result);\r\n                            }\r\n                            return false;\r\n                        },\r\n                        Functions.Blank);\r\n                });\r\n            }\r\n        };\r\n\r\n        return Dictionary;\r\n    })();\r\n\r\n    // dictionary = Dictionary<TKey, TValue[]>\r\n    var Lookup = function (dictionary) {\r\n        this.count = function () {\r\n            return dictionary.count();\r\n        };\r\n        this.get = function (key) {\r\n            return Enumerable.from(dictionary.get(key));\r\n        };\r\n        this.contains = function (key) {\r\n            return dictionary.contains(key);\r\n        };\r\n        this.toEnumerable = function () {\r\n            return dictionary.toEnumerable().select(function (kvp) {\r\n                return new Grouping(kvp.key, kvp.value);\r\n            });\r\n        };\r\n    };\r\n\r\n    var Grouping = function (groupKey, elements) {\r\n        this.key = function () {\r\n            return groupKey;\r\n        };\r\n        ArrayEnumerable.call(this, elements);\r\n    };\r\n    Grouping.prototype = new ArrayEnumerable();\r\n\r\n    // module export\r\n    if (typeof define === Types.Function && define.amd) { // AMD\r\n        define(\"linqjs\", [], function () { return Enumerable; });\r\n    }\r\n    else if (typeof module !== Types.Undefined && module.exports) { // Node\r\n        module.exports = Enumerable;\r\n    }\r\n    else {\r\n        root.Enumerable = Enumerable;\r\n    }\r\n})(this);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/linq/linq.js\n ** module id = 22\n ** module chunks = 0\n **/","\"use strict\"\n// Module export pattern from\n// https://github.com/umdjs/umd/blob/master/returnExports.js\n;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        // Node. Does not work with strict CommonJS, but\n        // only CommonJS-like environments that support module.exports,\n        // like Node.\n        module.exports = factory();\n    } else {\n        // Browser globals (root is window)\n        root.store = factory();\n  }\n}(this, function () {\n\t\n\t// Store.js\n\tvar store = {},\n\t\twin = (typeof window != 'undefined' ? window : global),\n\t\tdoc = win.document,\n\t\tlocalStorageName = 'localStorage',\n\t\tscriptTag = 'script',\n\t\tstorage\n\n\tstore.disabled = false\n\tstore.version = '1.3.20'\n\tstore.set = function(key, value) {}\n\tstore.get = function(key, defaultVal) {}\n\tstore.has = function(key) { return store.get(key) !== undefined }\n\tstore.remove = function(key) {}\n\tstore.clear = function() {}\n\tstore.transact = function(key, defaultVal, transactionFn) {\n\t\tif (transactionFn == null) {\n\t\t\ttransactionFn = defaultVal\n\t\t\tdefaultVal = null\n\t\t}\n\t\tif (defaultVal == null) {\n\t\t\tdefaultVal = {}\n\t\t}\n\t\tvar val = store.get(key, defaultVal)\n\t\ttransactionFn(val)\n\t\tstore.set(key, val)\n\t}\n\tstore.getAll = function() {}\n\tstore.forEach = function() {}\n\n\tstore.serialize = function(value) {\n\t\treturn JSON.stringify(value)\n\t}\n\tstore.deserialize = function(value) {\n\t\tif (typeof value != 'string') { return undefined }\n\t\ttry { return JSON.parse(value) }\n\t\tcatch(e) { return value || undefined }\n\t}\n\n\t// Functions to encapsulate questionable FireFox 3.6.13 behavior\n\t// when about.config::dom.storage.enabled === false\n\t// See https://github.com/marcuswestin/store.js/issues#issue/13\n\tfunction isLocalStorageNameSupported() {\n\t\ttry { return (localStorageName in win && win[localStorageName]) }\n\t\tcatch(err) { return false }\n\t}\n\n\tif (isLocalStorageNameSupported()) {\n\t\tstorage = win[localStorageName]\n\t\tstore.set = function(key, val) {\n\t\t\tif (val === undefined) { return store.remove(key) }\n\t\t\tstorage.setItem(key, store.serialize(val))\n\t\t\treturn val\n\t\t}\n\t\tstore.get = function(key, defaultVal) {\n\t\t\tvar val = store.deserialize(storage.getItem(key))\n\t\t\treturn (val === undefined ? defaultVal : val)\n\t\t}\n\t\tstore.remove = function(key) { storage.removeItem(key) }\n\t\tstore.clear = function() { storage.clear() }\n\t\tstore.getAll = function() {\n\t\t\tvar ret = {}\n\t\t\tstore.forEach(function(key, val) {\n\t\t\t\tret[key] = val\n\t\t\t})\n\t\t\treturn ret\n\t\t}\n\t\tstore.forEach = function(callback) {\n\t\t\tfor (var i=0; i<storage.length; i++) {\n\t\t\t\tvar key = storage.key(i)\n\t\t\t\tcallback(key, store.get(key))\n\t\t\t}\n\t\t}\n\t} else if (doc && doc.documentElement.addBehavior) {\n\t\tvar storageOwner,\n\t\t\tstorageContainer\n\t\t// Since #userData storage applies only to specific paths, we need to\n\t\t// somehow link our data to a specific path.  We choose /favicon.ico\n\t\t// as a pretty safe option, since all browsers already make a request to\n\t\t// this URL anyway and being a 404 will not hurt us here.  We wrap an\n\t\t// iframe pointing to the favicon in an ActiveXObject(htmlfile) object\n\t\t// (see: http://msdn.microsoft.com/en-us/library/aa752574(v=VS.85).aspx)\n\t\t// since the iframe access rules appear to allow direct access and\n\t\t// manipulation of the document element, even for a 404 page.  This\n\t\t// document can be used instead of the current document (which would\n\t\t// have been limited to the current path) to perform #userData storage.\n\t\ttry {\n\t\t\tstorageContainer = new ActiveXObject('htmlfile')\n\t\t\tstorageContainer.open()\n\t\t\tstorageContainer.write('<'+scriptTag+'>document.w=window</'+scriptTag+'><iframe src=\"/favicon.ico\"></iframe>')\n\t\t\tstorageContainer.close()\n\t\t\tstorageOwner = storageContainer.w.frames[0].document\n\t\t\tstorage = storageOwner.createElement('div')\n\t\t} catch(e) {\n\t\t\t// somehow ActiveXObject instantiation failed (perhaps some special\n\t\t\t// security settings or otherwse), fall back to per-path storage\n\t\t\tstorage = doc.createElement('div')\n\t\t\tstorageOwner = doc.body\n\t\t}\n\t\tvar withIEStorage = function(storeFunction) {\n\t\t\treturn function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments, 0)\n\t\t\t\targs.unshift(storage)\n\t\t\t\t// See http://msdn.microsoft.com/en-us/library/ms531081(v=VS.85).aspx\n\t\t\t\t// and http://msdn.microsoft.com/en-us/library/ms531424(v=VS.85).aspx\n\t\t\t\tstorageOwner.appendChild(storage)\n\t\t\t\tstorage.addBehavior('#default#userData')\n\t\t\t\tstorage.load(localStorageName)\n\t\t\t\tvar result = storeFunction.apply(store, args)\n\t\t\t\tstorageOwner.removeChild(storage)\n\t\t\t\treturn result\n\t\t\t}\n\t\t}\n\n\t\t// In IE7, keys cannot start with a digit or contain certain chars.\n\t\t// See https://github.com/marcuswestin/store.js/issues/40\n\t\t// See https://github.com/marcuswestin/store.js/issues/83\n\t\tvar forbiddenCharsRegex = new RegExp(\"[!\\\"#$%&'()*+,/\\\\\\\\:;<=>?@[\\\\]^`{|}~]\", \"g\")\n\t\tvar ieKeyFix = function(key) {\n\t\t\treturn key.replace(/^d/, '___$&').replace(forbiddenCharsRegex, '___')\n\t\t}\n\t\tstore.set = withIEStorage(function(storage, key, val) {\n\t\t\tkey = ieKeyFix(key)\n\t\t\tif (val === undefined) { return store.remove(key) }\n\t\t\tstorage.setAttribute(key, store.serialize(val))\n\t\t\tstorage.save(localStorageName)\n\t\t\treturn val\n\t\t})\n\t\tstore.get = withIEStorage(function(storage, key, defaultVal) {\n\t\t\tkey = ieKeyFix(key)\n\t\t\tvar val = store.deserialize(storage.getAttribute(key))\n\t\t\treturn (val === undefined ? defaultVal : val)\n\t\t})\n\t\tstore.remove = withIEStorage(function(storage, key) {\n\t\t\tkey = ieKeyFix(key)\n\t\t\tstorage.removeAttribute(key)\n\t\t\tstorage.save(localStorageName)\n\t\t})\n\t\tstore.clear = withIEStorage(function(storage) {\n\t\t\tvar attributes = storage.XMLDocument.documentElement.attributes\n\t\t\tstorage.load(localStorageName)\n\t\t\tfor (var i=attributes.length-1; i>=0; i--) {\n\t\t\t\tstorage.removeAttribute(attributes[i].name)\n\t\t\t}\n\t\t\tstorage.save(localStorageName)\n\t\t})\n\t\tstore.getAll = function(storage) {\n\t\t\tvar ret = {}\n\t\t\tstore.forEach(function(key, val) {\n\t\t\t\tret[key] = val\n\t\t\t})\n\t\t\treturn ret\n\t\t}\n\t\tstore.forEach = withIEStorage(function(storage, callback) {\n\t\t\tvar attributes = storage.XMLDocument.documentElement.attributes\n\t\t\tfor (var i=0, attr; attr=attributes[i]; ++i) {\n\t\t\t\tcallback(attr.name, store.deserialize(storage.getAttribute(attr.name)))\n\t\t\t}\n\t\t})\n\t}\n\n\ttry {\n\t\tvar testKey = '__storejs__'\n\t\tstore.set(testKey, testKey)\n\t\tif (store.get(testKey) != testKey) { store.disabled = true }\n\t\tstore.remove(testKey)\n\t} catch(e) {\n\t\tstore.disabled = true\n\t}\n\tstore.enabled = !store.disabled\n\t\n\treturn store\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/store/store.js\n ** module id = 23\n ** module chunks = 0\n **/","const _products = [\n  {'id': 1, 'title': 'iPad 4 Mini', 'price': 500.01, 'inventory': 2},\n  {'id': 2, 'title': 'H&M T-Shirt White', 'price': 10.99, 'inventory': 10},\n  {'id': 3, 'title': 'Charli XCX - Sucker CD', 'price': 19.99, 'inventory': 5}\n]\n\nexport default {\n  getProducts (cb) {\n    setTimeout(() => cb(_products), 100)\n  },\n\n  buyProducts (products, cb, errorCb) {\n    setTimeout(() => {\n      // simulate random checkout failure.\n      (Math.random() > 0.5 || navigator.userAgent.indexOf('PhantomJS') > -1)\n        ? cb()\n        : errorCb()\n    }, 100)\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/api/shop.js\n **/","// API のシミュレート\nconst _tweets = [\n  {'id': 1, 'text': 'ここにテキストが入ります', 'date': Date.now()},\n  {'id': 2, 'text': 'ここにテキストが入ります', 'date': Date.now()},\n  {'id': 3, 'text': 'ここにテキストが入ります', 'date': Date.now()}\n]\n\n// import Linq from 'linq-es6'\nimport Enumerable from 'linq'\n\nexport default {\n  stub: [],\n  getTimeline (callback, isAsync = true) {\n    if (this.stub.length <= 0) {\n      let newStub = Enumerable.range(0, 200)\n      // .selectMany(x => _tweets)\n        .select(i => {\n          let t = Object.assign({}, _tweets[0]) // コピー\n          t.id = i\n          t.text = 'デフォルトテキスト: ' + i\n          t.date = Date.now() + (i * 1)\n          return t\n        })\n        .toArray()\n\n      this.stub = newStub\n    }\n\n    if (isAsync) {\n      setTimeout(() => callback(this.stub), 100)\n    }\n    else {\n      callback(this.stub)\n    }\n  },\n  getNewTweet (callback, message, isAsync = true) {\n    let newTweet = Object.assign({}, _tweets[0])\n    newTweet.text = message\n    newTweet.date = Date.now()\n\n    if (isAsync) { setTimeout(() => callback(newTweet), 100) }\n    else { callback(newTweet) }\n  }\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/modules/api/twitter.js\n **/","import CartPage from './pages/CartPage'\nimport TimelinePage from './pages/TimelinePage.vue'\n\nimport Vue from 'vue'\nimport VueRouter from 'vue-router'\n\nVue.use(VueRouter)\nvar router = new VueRouter({\n  history: false\n})\n\nrouter.map({\n  '/': {\n    component: TimelinePage\n  },\n  '/cart': {\n    component: CartPage\n  },\n  '/timeline': {\n    component: TimelinePage\n  },\n  '/timeline/:id': {\n    component: TimelinePage\n  }\n})\n\nexport default router\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/router.js\n **/","/**\n * YOU CAN SAFELY REMOVE THIS FILE.\n * FILE FOR DEMO PURPOSE ONLY\n *\n * Notes:\n *\n * This file contains actions for the cart, specific functions with\n * arguments which apply mutations on the store.\n */\nimport shop from '../../modules/api/shop'\nimport * as types from '../mutation-types'\n\n// The first argument is the vuex store, but we're using only the\n// dispatch function, which applies a mutation to the store,\n// and the current state of the store\nexport const checkout = ({ dispatch, state }, products) => {\n  const savedCartItems = [...state.cart.added]\n  dispatch(types.CHECKOUT_REQUEST)\n  // Call our fake shop API\n  shop.buyProducts(\n    products,\n    // Callback function which dispatches CHECKOUT_SUCCESS\n    () => dispatch(types.CHECKOUT_SUCCESS),\n    // Callback function which dispatches CHECKOUT_FAILURE\n    () => dispatch(types.CHECKOUT_FAILURE, savedCartItems)\n  )\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/cart/actions.js\n **/","/**\n * YOU CAN SAFELY REMOVE THIS FILE.\n * FILE FOR DEMO PURPOSE ONLY\n *\n * Notes:\n *\n * This file contains the store for the cart. The store contains two parts:\n *\n * 1. The initial state: Which defines the state object when it's just created\n * 2. Logic on how to apply \"mutations\". A mutation is simply a clear \"atomic\" change\n *    which has a clear and single purpose of modifying the state in a particular way\n */\n\n// What kind of mutations are we handling? import them so any\n// typing mistakes are caught easily by the compiler.\nimport {\n  ADD_TO_CART,\n  CHECKOUT_REQUEST,\n  CHECKOUT_SUCCESS,\n  CHECKOUT_FAILURE\n} from '../mutation-types'\n\n// shape: [{ id, quantity }]\nconst state = {\n  added: [],\n  lastCheckout: null\n}\n\n// mutations\nconst mutations = {\n  [ADD_TO_CART] (state, productId) {\n    state.lastCheckout = null\n    const record = state.added.find(p => p.id === productId)\n    if (!record) {\n      state.added.push({\n        id: productId,\n        quantity: 1\n      })\n    }\n    else {\n      record.quantity++\n    }\n  },\n\n  [CHECKOUT_REQUEST] (state) {\n    // clear cart\n    state.added = []\n    state.lastCheckout = null\n  },\n\n  [CHECKOUT_SUCCESS] (state) {\n    state.lastCheckout = 'successful'\n  },\n\n  [CHECKOUT_FAILURE] (state, savedCartItems) {\n    // rollback to the cart saved before sending the request\n    state.added = savedCartItems\n    state.lastCheckout = 'failed'\n  }\n}\n\nexport default {\n  state,\n  mutations\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/cart/store.js\n **/","import {\n  SAVE_LOCALSTORAGE\n} from '../mutation-types'\n\nimport store from 'store'\n\n// initial state\n// const state = store.get('vuexstorage')\n// FIXME: 書きかけ､引数で名前を渡して取得できるように作りたい\nconst state = () => {\n  return store.get('vuexstorage')\n}\n\n// mutations\nconst mutations = {\n  [SAVE_LOCALSTORAGE] (state, newState) {\n    store.set('vuexstorage', newState)\n  }\n}\n\nexport default {\n  state,\n  mutations\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/localstorage/store.js\n **/","import twitter from '../../modules/api/twitter'\nimport * as types from '../mutation-types'\n\n// 元から来た引数の dispatch フィールドを取得するオブジェクト分割代入\nexport const getTimeline = ({ dispatch }) => {\n  // 非同期API\n  twitter.getTimeline(tweets => {\n    dispatch(types.RECEIVE_TIMELINE, tweets)\n  }, true)\n}\n\nexport const addTweet = ({ dispatch }, text) => {\n  // 非同期API\n  twitter.getNewTweet(tweet => {\n    dispatch(types.ADD_TWEET, tweet)\n  }, text, true)\n}\n\nexport const removeTweet = ({ dispatch }, targetTweet) => {\n  // 非同期API\n  dispatch(types.REMOVE_TWEET, targetTweet)\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/timeline/actions.js\n **/","import {\n  RECEIVE_TIMELINE,\n  ADD_TWEET,\n  REMOVE_TWEET\n} from '../mutation-types'\n\nimport Enumerable from 'linq'\n\n// initial state\nconst state = {\n  all: []\n}\n\n// mutations\nconst mutations = {\n  [RECEIVE_TIMELINE] (state, tweets) {\n    tweets = Enumerable.from(tweets)\n      .select(t => {\n        t.text = t.text.length < 3 ? Math.round(Math.random() * 10).toString() : t.text\n        return t\n      })\n      .toArray()\n    state.all = tweets\n  },\n  [ADD_TWEET] (state, newTweet) {\n    state.all.push(newTweet)\n    // console.log(JSON.stringify(state.all))\n  },\n  [REMOVE_TWEET] (state, targetTweet) {\n    state.all = state.all.filter((t) => t !== targetTweet)\n    console.log('state.all.count: ' + state.all.length)\n  }\n\n  // [ADD_TO_CART] (state, productId) {\n  //   state.all.find(p => p.id === productId).inventory--\n  // }\n}\n\nexport default {\n  state,\n  mutations\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vuex/timeline/store.js\n **/","<template>\n  <div class=\"menu-links\">\n    <a v-link=\"{path:'/timeline'}\">タイムライン</a>\n    <a v-link=\"{path:'/cart'}\">返信 ({{ count }})</a>\n  </div>\n</template>\n\n<script>\nimport { cartCount } from '../vuex/cart/getters'\nexport default {\n  vuex: {\n    getters: {\n      count: cartCount\n    }\n  }\n}\n</script>\n\n<style>\n.menu-links a {\n  display: inline-block;\n  text-decoration: none;\n  color: #555;\n  margin-right: 30px;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** HeaderBar.vue?0e99b1bd\n **/","<!-- 新規ポスト作成ウィンドウ -->\n<!-- 本コンポーネントはTimeline以外でも利用される -->\n<!-- Storeを持つ必要が無いのでVuexに依存しない -->\n\n<template>\n  <!-- バインディングに失敗すると動かない -->\n  <div\n    class=\"card\"\n    v-if=\"isShow\"\n    transition=\"expand\"\n  >\n    <h4 class=\"card-header\">投稿用フォーム</h4>\n    <div class=\"card-inverse card-block\" >\n      <label class=\"control-label\" for=\"textarea1\">今何してる？</label>\n      <div class=\"text-xs-right\">\n      <textarea\n        id=\"textarea1\"\n        v-model=\"message\"\n        placeholder=\"デフォルト文字列\"\n        class=\"form-control\"\n        rows=\"3\"\n        @input=\"saveStubMessage\"\n      ></textarea>\n        <button @click=\"postMessage\" class=\"btn btn-primary\">投稿</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import store from 'store'\n\n  export default {\n    props: {\n      message: {\n        type: String,\n        default: ''\n      }\n    },\n    data () {\n      return {\n        isShow: false // data なり props なりで定義されていない値をバインドするとエラーを吐かずに動かない\n      }\n    },\n    methods: {\n      // 投稿に使用するアクションは外部から挿入される\n      // post: function () {\n      postMessage () {\n        this.$dispatch('event-post', this.message)\n\n        // this.isShow = false\n        // let self = this\n        // setTimeout(() => { self.isShow = true }, 1000)\n      },\n      saveStubMessage () {\n        store.set('stubMessage', this.message)\n      }\n    },\n    created () {\n      let self = this\n      setTimeout(() => { self.isShow = true }, 1000)\n\n      this.message = store.get('stubMessage')\n    }\n  }\n</script>\n\n<style>\n  /* 常に表示 */\n  .expand-transition {\n    transition: all .3s ease;\n    height: 300px;\n    overflow: hidden;\n  }\n\n  /* .expand-enter は entering に対する開始状態を定義 */\n  /* .expand-leave は leaving に対する終了状態を定義 */\n  .expand-enter, .expand-leave {\n    height: 0;\n    opacity: 0;\n  }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** PostMessageComponent.vue?ce3f4c38\n **/","<!-- 本コンポーネントはTimeline以外でも利用される -->\n<!-- Storeを持つ必要が無いのでVuexに依存しない -->\n\n<template>\n  <!-- バインディングに失敗すると動かない -->\n\n  <div\n    class=\"card card-block\"\n    v-touch:swiperight=\"onSwipeRight\"\n    v-touch-options:swipe=\"{ direction: 'horizontal', threshold: 50 }\"\n  >\n    <div header=\"テキスト\">\n      <span>{{ text }}</span>\n    </div>\n    <div header=\"日付\">\n      <span>{{ dateText }}</span>\n    </div>\n    <div header=\"無効化されたタブ\" disabled></div>\n  </div>\n\n</template>\n\n<script>\n  import DateFormat from 'dateformat'\n  // import tab from 'vue-strap/src/tab'\n  // import tabs from 'vue-strap/src/tabset'\n  // require('style!raw!./node_modules/bootstrap/dist/css/bootstrap.min.css')\n\n  export default {\n    props: {\n      text: {\n        type: String,\n        default: 'defalut text'\n      },\n      date: {\n        type: Number\n      },\n      obj: {\n        type: Object\n      }\n    },\n    // prop は内部テンプレートで利用でき、\n    // そして `this.msg` として設定されます\n    // template: '<span>{{ msg }}</span>'\n\n    // 算出プロパティはバインド式が肥大化するのを防ぐために使う\n    computed: {\n      dateText: x => {\n        return DateFormat(x.date, 'yyyy/mm/dd HH:MM:ss')\n      }\n    },\n    methods: {\n      onSwipeRight () {\n        console.log('Swipe left !!')\n        this.$dispatch('event-remove', this.obj)\n      }\n    },\n    destroyed () {\n      console.log('DESTROYED: ' + this.text)\n    }\n  }\n</script>\n\n<style>\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** TweetComponent.vue?4bc7ac47\n **/","<template>\n<div class=\"app\">\n  <div class=\"header\">\n  <header-bar></header-bar>\n  </div>\n  <div class=\"page\">\n    <router-view></router-view>\n  </div>\n</div>\n</template>\n\n<script>\n  import store from '../vuex/store'\n  import HeaderBar from '../components/HeaderBar'\n  //\n  export default {\n    store, // == store: store\n    // http://vuex.vuejs.org/en/state.html\n    // > 1.Install Vuex and connect your root component to the store:\n\n    // https://jp.vuejs.org/guide/components.html#ローカル登録\n    // コンポーネントのローカル登録\n    components: {HeaderBar}\n  }\n</script>\n\n<style>\nhtml {\n}\nbody {\n  font-family: \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n  color: #333;\n}\n.app {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n}\n\n.header {\n  border-bottom: 1px solid #b3b3b3;\n  width: 100%;\n  padding: 30px 50px;\n}\n\n.page {\n  width: 100%;\n  padding: 30px 50px;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?9482d498\n **/","<template>\n  <div class=\"cart\">\n    <p v-show=\"!products.length\"><i>Please add some products to cart.</i></p>\n    <div v-show=\"products.length > 0\">\n    <table class=\"checkout-table\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Quantity</th>\n          <th>Per Unit</th>\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tbody>\n      <tr v-for=\"p in products\">\n        <td><a v-link=\"{name:'product', params:{id:p.id}}\">{{ p.title }}</a></td>\n        <td>{{ p.price|currency }}</td>\n        <td>{{ p.quantity }}</td>\n        <td>{{ p.price * p.quantity | currency }}</td>\n      </tr>\n      <tr class='total'>\n        <td><b>TOTAL</b></td>\n        <td></td>\n        <td></td>\n        <td>{{ total|currency }}</td>\n      </tr>\n      </tbody>\n    </table>\n    <p><button :disabled=\"!products.length\" @click=\"checkout(products)\" class='checkout-button'>Checkout</button></p>\n    <p v-show=\"checkoutStatus\">Checkout {{ checkoutStatus }}.</p>\n    </div>\n  </div>\n</template>\n\n<script>\n  import { checkout } from '../vuex/cart/actions'\n  import { cartProducts } from '../vuex/cart/getters'\n\n  export default {\n    vuex: {\n      getters: {\n        products: cartProducts,\n        checkoutStatus: ({ cart }) => cart.lastCheckout\n      },\n      actions: {\n        checkout\n      }\n    },\n    computed: {\n      total () {\n        return this.products.reduce((total, p) => {\n          return total + p.price * p.quantity\n        }, 0)\n      }\n    }\n  }\n</script>\n\n<style>\n\n.cart {\n  width: 600px;\n}\n.checkout-table {\n  width: 100%;\n}\n\n.checkout-table th {\n  text-align: left;\n  padding: 15px 0px;\n  border-bottom: 1px solid #aaa;\n}\n\n.checkout-table td {\n  padding: 8px 0px;\n}\n\n.checkout-button {\n  float: right;\n  width: 120px;\n  height: 40px;\n  margin-top: 20px;\n}\n\n.total td {\n  border-top: 1px solid #aaa;\n  padding-top: 10px;\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** CartPage.vue?af27fae8\n **/","<template>\n  <!-- バインディングに失敗すると動かない -->\n  <div class=\"cart\">\n    <post-message-component\n      @event-post=\"addTweet\"\n    ></post-message-component>\n\n    <div>\n      <button v-on:click=\"update\" class=\"btn btn-info-outline\">Timeline update</button>\n    </div>\n\n    <p v-show=\"tweets.length===0\"><i>メッセージ無し</i></p>\n\n    <div v-show=\"tweets.length > 0\">\n      <div\n       v-for=\"t in tweets | orderBy 'date' -1\"\n       transition=\"item\"\n      >\n        <!-- 動的な値を渡すときは v-bind:propname (省略して:propname) -->\n        <tweet-component\n          :text=\"t.text\"\n          :date=\"t.date\"\n          :obj=\"t\"\n          @event-remove=\"removeTweet\"\n        ></tweet-component>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import { getTimeline, addTweet, removeTweet } from '../vuex/timeline/actions'\n  import TweetComponent from '../components/TweetComponent.vue'\n  import PostMessageComponent from '../components/PostMessageComponent.vue'\n\n  export default {\n    components: {\n      TweetComponent,\n      PostMessageComponent\n    },\n    vuex: {\n      // storeへの直接アクセスを防ぐためのもの｡引数に親コンポーネント(App.vue)からstateが注入される\n      // getters は pure function でなければならない\n      getters: {\n        // ここの引数に入るのは store.state\n        // route は vue-router-sync 使ってるからある\n        tweets: ({ timeline, route }) => {\n          var id = parseInt(route.params.id)\n          console.log('id: ' + id)\n          return timeline.all\n        }\n      },\n      actions: {\n        getTimeline,\n        addTweet,\n        removeTweet\n      }\n    },\n    created () {\n      this.getTimeline()\n    },\n    methods: {\n      // アロー関数を使うとthisが束縛されるので使わない\n      update: function () {\n        this.getTimeline()\n      }\n    }\n  }\n</script>\n\n<style>\n\n.cart {\n  width: 600px;\n}\n.checkout-table {\n  width: 100%;\n}\n\n.checkout-table th {\n  text-align: left;\n  padding: 15px 0px;\n  border-bottom: 1px solid #aaa;\n}\n\n.checkout-table td {\n  padding: 8px 0px;\n}\n\n.checkout-button {\n  float: right;\n  width: 120px;\n  height: 40px;\n  margin-top: 20px;\n}\n\n.total td {\n  border-top: 1px solid #aaa;\n  padding-top: 10px;\n}\n\n.item-move {\n  /* applied to the element when moving */\n  transition: transform .5s cubic-bezier(.55,0,.1,1);\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** TimelinePage.vue?f862eec2\n **/","module.exports = { \"default\": require(\"core-js/library/fn/array/from\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/array/from.js\n ** module id = 38\n ** module chunks = 0\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/assign\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/object/assign.js\n ** module id = 39\n ** module chunks = 0\n **/","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/core-js/object/define-property.js\n ** module id = 40\n ** module chunks = 0\n **/","\"use strict\";\n\nexports.__esModule = true;\n\nvar _from = require(\"../core-js/array/from\");\n\nvar _from2 = _interopRequireDefault(_from);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/helpers/toConsumableArray.js\n ** module id = 41\n ** module chunks = 0\n **/","require('../../modules/es6.string.iterator');\nrequire('../../modules/es6.array.from');\nmodule.exports = require('../../modules/$.core').Array.from;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/fn/array/from.js\n ** module id = 42\n ** module chunks = 0\n **/","require('../../modules/es6.object.assign');\nmodule.exports = require('../../modules/$.core').Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/fn/object/assign.js\n ** module id = 43\n ** module chunks = 0\n **/","var $ = require('../../modules/$');\nmodule.exports = function defineProperty(it, key, desc){\n  return $.setDesc(it, key, desc);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/fn/object/define-property.js\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.a-function.js\n ** module id = 45\n ** module chunks = 0\n **/","var isObject = require('./$.is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.an-object.js\n ** module id = 46\n ** module chunks = 0\n **/","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./$.cof')\n  , TAG = require('./$.wks')('toStringTag')\n  // ES3 wrong here\n  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\nmodule.exports = function(it){\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.classof.js\n ** module id = 47\n ** module chunks = 0\n **/","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./$.fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.descriptors.js\n ** module id = 48\n ** module chunks = 0\n **/","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./$.cof');\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.iobject.js\n ** module id = 49\n ** module chunks = 0\n **/","// check on default Array iterator\nvar Iterators  = require('./$.iterators')\n  , ITERATOR   = require('./$.wks')('iterator')\n  , ArrayProto = Array.prototype;\n\nmodule.exports = function(it){\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.is-array-iter.js\n ** module id = 50\n ** module chunks = 0\n **/","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.is-object.js\n ** module id = 51\n ** module chunks = 0\n **/","// call something on iterator step with safe closing on error\nvar anObject = require('./$.an-object');\nmodule.exports = function(iterator, fn, value, entries){\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch(e){\n    var ret = iterator['return'];\n    if(ret !== undefined)anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.iter-call.js\n ** module id = 52\n ** module chunks = 0\n **/","'use strict';\nvar $              = require('./$')\n  , descriptor     = require('./$.property-desc')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./$.hide')(IteratorPrototype, require('./$.wks')('iterator'), function(){ return this; });\n\nmodule.exports = function(Constructor, NAME, next){\n  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.iter-create.js\n ** module id = 53\n ** module chunks = 0\n **/","'use strict';\nvar LIBRARY        = require('./$.library')\n  , $export        = require('./$.export')\n  , redefine       = require('./$.redefine')\n  , hide           = require('./$.hide')\n  , has            = require('./$.has')\n  , Iterators      = require('./$.iterators')\n  , $iterCreate    = require('./$.iter-create')\n  , setToStringTag = require('./$.set-to-string-tag')\n  , getProto       = require('./$').getProto\n  , ITERATOR       = require('./$.wks')('iterator')\n  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n  , FF_ITERATOR    = '@@iterator'\n  , KEYS           = 'keys'\n  , VALUES         = 'values';\n\nvar returnThis = function(){ return this; };\n\nmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function(kind){\n    if(!BUGGY && kind in proto)return proto[kind];\n    switch(kind){\n      case KEYS: return function keys(){ return new Constructor(this, kind); };\n      case VALUES: return function values(){ return new Constructor(this, kind); };\n    } return function entries(){ return new Constructor(this, kind); };\n  };\n  var TAG        = NAME + ' Iterator'\n    , DEF_VALUES = DEFAULT == VALUES\n    , VALUES_BUG = false\n    , proto      = Base.prototype\n    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n    , $default   = $native || getMethod(DEFAULT)\n    , methods, key;\n  // Fix native\n  if($native){\n    var IteratorPrototype = getProto($default.call(new Base));\n    // Set @@toStringTag to native iterators\n    setToStringTag(IteratorPrototype, TAG, true);\n    // FF fix\n    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n    // fix Array#{values, @@iterator}.name in V8 / FF\n    if(DEF_VALUES && $native.name !== VALUES){\n      VALUES_BUG = true;\n      $default = function values(){ return $native.call(this); };\n    }\n  }\n  // Define iterator\n  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG]  = returnThis;\n  if(DEFAULT){\n    methods = {\n      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n      keys:    IS_SET      ? $default : getMethod(KEYS),\n      entries: !DEF_VALUES ? $default : getMethod('entries')\n    };\n    if(FORCED)for(key in methods){\n      if(!(key in proto))redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.iter-define.js\n ** module id = 54\n ** module chunks = 0\n **/","var ITERATOR     = require('./$.wks')('iterator')\n  , SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function(){ SAFE_CLOSING = true; };\n  Array.from(riter, function(){ throw 2; });\n} catch(e){ /* empty */ }\n\nmodule.exports = function(exec, skipClosing){\n  if(!skipClosing && !SAFE_CLOSING)return false;\n  var safe = false;\n  try {\n    var arr  = [7]\n      , iter = arr[ITERATOR]();\n    iter.next = function(){ return {done: safe = true}; };\n    arr[ITERATOR] = function(){ return iter; };\n    exec(arr);\n  } catch(e){ /* empty */ }\n  return safe;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.iter-detect.js\n ** module id = 55\n ** module chunks = 0\n **/","module.exports = true;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.library.js\n ** module id = 56\n ** module chunks = 0\n **/","// 19.1.2.1 Object.assign(target, source, ...)\nvar $        = require('./$')\n  , toObject = require('./$.to-object')\n  , IObject  = require('./$.iobject');\n\n// should work with symbols and should have deterministic property order (V8 bug)\nmodule.exports = require('./$.fails')(function(){\n  var a = Object.assign\n    , A = {}\n    , B = {}\n    , S = Symbol()\n    , K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function(k){ B[k] = k; });\n  return a({}, A)[S] != 7 || Object.keys(a({}, B)).join('') != K;\n}) ? function assign(target, source){ // eslint-disable-line no-unused-vars\n  var T     = toObject(target)\n    , $$    = arguments\n    , $$len = $$.length\n    , index = 1\n    , getKeys    = $.getKeys\n    , getSymbols = $.getSymbols\n    , isEnum     = $.isEnum;\n  while($$len > index){\n    var S      = IObject($$[index++])\n      , keys   = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S)\n      , length = keys.length\n      , j      = 0\n      , key;\n    while(length > j)if(isEnum.call(S, key = keys[j++]))T[key] = S[key];\n  }\n  return T;\n} : Object.assign;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.object-assign.js\n ** module id = 57\n ** module chunks = 0\n **/","module.exports = require('./$.hide');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.redefine.js\n ** module id = 58\n ** module chunks = 0\n **/","var global = require('./$.global')\n  , SHARED = '__core-js_shared__'\n  , store  = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function(key){\n  return store[key] || (store[key] = {});\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.shared.js\n ** module id = 59\n ** module chunks = 0\n **/","var toInteger = require('./$.to-integer')\n  , defined   = require('./$.defined');\n// true  -> String#at\n// false -> String#codePointAt\nmodule.exports = function(TO_STRING){\n  return function(that, pos){\n    var s = String(defined(that))\n      , i = toInteger(pos)\n      , l = s.length\n      , a, b;\n    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.string-at.js\n ** module id = 60\n ** module chunks = 0\n **/","// 7.1.15 ToLength\nvar toInteger = require('./$.to-integer')\n  , min       = Math.min;\nmodule.exports = function(it){\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.to-length.js\n ** module id = 61\n ** module chunks = 0\n **/","var id = 0\n  , px = Math.random();\nmodule.exports = function(key){\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/$.uid.js\n ** module id = 62\n ** module chunks = 0\n **/","var classof   = require('./$.classof')\n  , ITERATOR  = require('./$.wks')('iterator')\n  , Iterators = require('./$.iterators');\nmodule.exports = require('./$.core').getIteratorMethod = function(it){\n  if(it != undefined)return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/core.get-iterator-method.js\n ** module id = 63\n ** module chunks = 0\n **/","'use strict';\nvar ctx         = require('./$.ctx')\n  , $export     = require('./$.export')\n  , toObject    = require('./$.to-object')\n  , call        = require('./$.iter-call')\n  , isArrayIter = require('./$.is-array-iter')\n  , toLength    = require('./$.to-length')\n  , getIterFn   = require('./core.get-iterator-method');\n$export($export.S + $export.F * !require('./$.iter-detect')(function(iter){ Array.from(iter); }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike/*, mapfn = undefined, thisArg = undefined*/){\n    var O       = toObject(arrayLike)\n      , C       = typeof this == 'function' ? this : Array\n      , $$      = arguments\n      , $$len   = $$.length\n      , mapfn   = $$len > 1 ? $$[1] : undefined\n      , mapping = mapfn !== undefined\n      , index   = 0\n      , iterFn  = getIterFn(O)\n      , length, result, step, iterator;\n    if(mapping)mapfn = ctx(mapfn, $$len > 2 ? $$[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if(iterFn != undefined && !(C == Array && isArrayIter(iterFn))){\n      for(iterator = iterFn.call(O), result = new C; !(step = iterator.next()).done; index++){\n        result[index] = mapping ? call(iterator, mapfn, [step.value, index], true) : step.value;\n      }\n    } else {\n      length = toLength(O.length);\n      for(result = new C(length); length > index; index++){\n        result[index] = mapping ? mapfn(O[index], index) : O[index];\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/es6.array.from.js\n ** module id = 64\n ** module chunks = 0\n **/","// 19.1.3.1 Object.assign(target, source)\nvar $export = require('./$.export');\n\n$export($export.S + $export.F, 'Object', {assign: require('./$.object-assign')});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/es6.object.assign.js\n ** module id = 65\n ** module chunks = 0\n **/","'use strict';\nvar $at  = require('./$.string-at')(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\nrequire('./$.iter-define')(String, 'String', function(iterated){\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function(){\n  var O     = this._t\n    , index = this._i\n    , point;\n  if(index >= O.length)return {value: undefined, done: true};\n  point = $at(O, index);\n  this._i += point.length;\n  return {value: point, done: false};\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/babel-runtime/~/core-js/library/modules/es6.string.iterator.js\n ** module id = 66\n ** module chunks = 0\n **/","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\n(function(global) {\n  'use strict';\n\n  var dateFormat = (function() {\n      var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|'[^']*'|'[^']*'/g;\n      var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n      var timezoneClip = /[^-+\\dA-Z]/g;\n  \n      // Regexes and supporting functions are cached through closure\n      return function (date, mask, utc, gmt) {\n  \n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n          mask = date;\n          date = undefined;\n        }\n  \n        date = date || new Date;\n  \n        if(!(date instanceof Date)) {\n          date = new Date(date);\n        }\n  \n        if (isNaN(date)) {\n          throw TypeError('Invalid date');\n        }\n  \n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n  \n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n          mask = mask.slice(4);\n          utc = true;\n          if (maskSlice === 'GMT:') {\n            gmt = true;\n          }\n        }\n  \n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n          d:    d,\n          dd:   pad(d),\n          ddd:  dateFormat.i18n.dayNames[D],\n          dddd: dateFormat.i18n.dayNames[D + 7],\n          m:    m + 1,\n          mm:   pad(m + 1),\n          mmm:  dateFormat.i18n.monthNames[m],\n          mmmm: dateFormat.i18n.monthNames[m + 12],\n          yy:   String(y).slice(2),\n          yyyy: y,\n          h:    H % 12 || 12,\n          hh:   pad(H % 12 || 12),\n          H:    H,\n          HH:   pad(H),\n          M:    M,\n          MM:   pad(M),\n          s:    s,\n          ss:   pad(s),\n          l:    pad(L, 3),\n          L:    pad(Math.round(L / 10)),\n          t:    H < 12 ? 'a'  : 'p',\n          tt:   H < 12 ? 'am' : 'pm',\n          T:    H < 12 ? 'A'  : 'P',\n          TT:   H < 12 ? 'AM' : 'PM',\n          Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n          o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n          S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n          W:    W,\n          N:    N\n        };\n  \n        return mask.replace(token, function (match) {\n          if (match in flags) {\n            return flags[match];\n          }\n          return match.slice(1, match.length - 1);\n        });\n      };\n    })();\n\n  dateFormat.masks = {\n    'default':               'ddd mmm dd yyyy HH:MM:ss',\n    'shortDate':             'm/d/yy',\n    'mediumDate':            'mmm d, yyyy',\n    'longDate':              'mmmm d, yyyy',\n    'fullDate':              'dddd, mmmm d, yyyy',\n    'shortTime':             'h:MM TT',\n    'mediumTime':            'h:MM:ss TT',\n    'longTime':              'h:MM:ss TT Z',\n    'isoDate':               'yyyy-mm-dd',\n    'isoTime':               'HH:MM:ss',\n    'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n    'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n    'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n  };\n\n  // Internationalization strings\n  dateFormat.i18n = {\n    dayNames: [\n      'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n      'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n    ],\n    monthNames: [\n      'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n      'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n    ]\n  };\n\nfunction pad(val, len) {\n  val = String(val);\n  len = len || 2;\n  while (val.length < len) {\n    val = '0' + val;\n  }\n  return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n  // Remove time components of date\n  var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n  // Change date to Thursday same week\n  targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n  // Take January 4th as it is always in week 1 (see ISO 8601)\n  var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n  // Change date to Thursday same week\n  firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n  // Check if daylight-saving-time-switch occured and correct for it\n  var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n  targetThursday.setHours(targetThursday.getHours() - ds);\n\n  // Number of weeks between target Thursday and first Thursday\n  var weekDiff = (targetThursday - firstThursday) / (86400000*7);\n  return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n * \n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n  var dow = date.getDay();\n  if(dow === 0) {\n    dow = 7;\n  }\n  return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n  if (val === null) {\n    return 'null';\n  }\n\n  if (val === undefined) {\n    return 'undefined';\n  }\n\n  if (typeof val !== 'object') {\n    return typeof val;\n  }\n\n  if (Array.isArray(val)) {\n    return 'array';\n  }\n\n  return {}.toString.call(val)\n    .slice(8, -1).toLowerCase();\n};\n\n\n\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return dateFormat;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = dateFormat;\n  } else {\n    global.dateFormat = dateFormat;\n  }\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dateformat/lib/dateformat.js\n ** module id = 67\n ** module chunks = 0\n **/","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/hammerjs/hammer.js\n ** module id = 74\n ** module chunks = 0\n **/","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.VueAnimatedList = factory());\n}(this, function () { 'use strict';\n  function install (Vue) {\n    var _ = Vue.util\n    var transitionEndEvent = _.transitionEndEvent\n    var addClass = _.addClass\n    var removeClass = _.removeClass\n    var on = _.on\n    var off = _.off\n    var transitionProp = _.transitionProp\n\n    // patch v-for\n    var vFor = Vue.directive('for')\n    var diff = vFor.diff\n    vFor.diff = function () {\n      var needMoveTransition = prepareMoveTransition(this.frags)\n      diff.apply(this, arguments)\n      if (needMoveTransition) {\n        applyMoveTransition(this.frags)\n      }\n    }\n\n    /**\n     * Check if move transitions are needed, and if so,\n     * record the bounding client rects for each item.\n     *\n     * @param {Array<Fragment>|undefined} frags\n     * @return {Boolean|undefined}\n     */\n\n    function prepareMoveTransition (frags) {\n      var transition =\n        transitionEndEvent && // css transition supported?\n        frags && frags.length && // has frags to be moved?\n        frags[0].node.__v_trans // has transitions?\n      if (transition) {\n        var node = frags[0].node\n        var moveClass = transition.id + '-move'\n        var moving = node._pendingMoveCb\n        var hasTransition = false\n        if (!moving) {\n          // sniff whether element has a transition duration for transform\n          // with the move class applied\n          addClass(node, moveClass)\n          var type = transition.getCssTransitionType(moveClass)\n          if (type === 'transition') {\n            var computedStyles = window.getComputedStyle(node)\n            var transitionedProps = computedStyles[transitionProp + 'Property']\n            if (/\\btransform(,|$)/.test(transitionedProps)) {\n              hasTransition = true\n            }\n          }\n          removeClass(node, moveClass)\n        }\n        if (moving || hasTransition) {\n          frags.forEach(function (frag) {\n            frag._oldPos = frag.node.getBoundingClientRect()\n          })\n          return true\n        }\n      }\n    }\n\n    /**\n     * Apply move transitions.\n     * Calculate new target positions after the move, then apply the\n     * FLIP technique to trigger CSS transforms.\n     *\n     * @param {Array<Fragment>} frags\n     */\n\n    function applyMoveTransition (frags) {\n      frags.forEach(function (frag) {\n        var node = frag.node\n        var oldPos = frag._oldPos\n        if (!oldPos) return\n        if (!frag.moved) {\n          // transition busting to ensure correct bounding rect:\n          // if an element has an ongoing transition and not \"reinserted\",\n          // the bounding rect will not be calculated at its target position,\n          // but rather an in-transition position.\n          var p = node.parentNode\n          var next = node.nextSibling\n          p.removeChild(node)\n          p.insertBefore(node, next)\n        }\n        var newPos = node.getBoundingClientRect()\n        var dx = oldPos.left - newPos.left\n        var dy = oldPos.top - newPos.top\n        if (dx !== 0 || dy !== 0) {\n          frag.moved = true\n          node.style.transform =\n          node.style.WebkitTransform =\n            'translate(' + dx + 'px, ' + dy + 'px)'\n          node.style.transitionDuration = '0s'\n        } else {\n          frag.moved = false\n        }\n      })\n      Vue.nextTick(function () {\n        var f = document.documentElement.offsetHeight\n        frags.forEach(function (frag) {\n          var node = frag.node\n          var moveClass = node.__v_trans.id + '-move'\n          if (frag.moved) {\n            addClass(node, moveClass)\n            node.style.transform = node.style.WebkitTransform = ''\n            node.style.transitionDuration = ''\n            if (node._pendingMoveCb) {\n              off(node, transitionEndEvent, node._pendingMoveCb)\n            }\n            node._pendingMoveCb = function cb () {\n              off(node, transitionEndEvent, cb)\n              node._pendingMoveCb = null\n              removeClass(node, moveClass)\n            }\n            on(node, transitionEndEvent, node._pendingMoveCb)\n          }\n        })\n      })\n    }\n  }\n\n  if (typeof Vue !== 'undefined') {\n    Vue.use(install)\n  }\n  return install\n}));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-animated-list/vue-animated-list.js\n ** module id = 75\n ** module chunks = 0\n **/","module.exports = \" <div class=menu-links> <a v-link=\\\"{path:'/timeline'}\\\">タイムライン</a> <a v-link=\\\"{path:'/cart'}\\\">返信 ({{ count }})</a> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/HeaderBar.vue\n ** module id = 76\n ** module chunks = 0\n **/","module.exports = \" <div class=card v-if=isShow transition=expand> <h4 class=card-header>投稿用フォーム</h4> <div class=\\\"card-inverse card-block\\\"> <label class=control-label for=textarea1>今何してる？</label> <div class=text-xs-right> <textarea id=textarea1 v-model=message placeholder=デフォルト文字列 class=form-control rows=3 @input=saveStubMessage></textarea> <button @click=postMessage class=\\\"btn btn-primary\\\">投稿</button> </div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/PostMessageComponent.vue\n ** module id = 77\n ** module chunks = 0\n **/","module.exports = \" <div class=\\\"card card-block\\\" v-touch:swiperight=onSwipeRight v-touch-options:swipe=\\\"{ direction: 'horizontal', threshold: 50 }\\\"> <div header=テキスト> <span>{{ text }}</span> </div> <div header=日付> <span>{{ dateText }}</span> </div> <div header=無効化されたタブ disabled=disabled></div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/TweetComponent.vue\n ** module id = 78\n ** module chunks = 0\n **/","module.exports = \" <div class=app> <div class=header> <header-bar></header-bar> </div> <div class=page> <router-view></router-view> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/pages/App.vue\n ** module id = 79\n ** module chunks = 0\n **/","module.exports = \" <div class=cart> <p v-show=!products.length><i>Please add some products to cart.</i></p> <div v-show=\\\"products.length > 0\\\"> <table class=checkout-table> <thead> <tr> <th>Name</th> <th>Quantity</th> <th>Per Unit</th> <th>Total</th> </tr> </thead> <tbody> <tr v-for=\\\"p in products\\\"> <td><a v-link=\\\"{name:'product', params:{id:p.id}}\\\">{{ p.title }}</a></td> <td>{{ p.price|currency }}</td> <td>{{ p.quantity }}</td> <td>{{ p.price * p.quantity | currency }}</td> </tr> <tr class=total> <td><b>TOTAL</b></td> <td></td> <td></td> <td>{{ total|currency }}</td> </tr> </tbody> </table> <p><button :disabled=!products.length @click=checkout(products) class=checkout-button>Checkout</button></p> <p v-show=checkoutStatus>Checkout {{ checkoutStatus }}.</p> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/pages/CartPage.vue\n ** module id = 80\n ** module chunks = 0\n **/","module.exports = \" <div class=cart> <post-message-component @event-post=addTweet></post-message-component> <div> <button v-on:click=update class=\\\"btn btn-info-outline\\\">Timeline update</button> </div> <p v-show=\\\"tweets.length===0\\\"><i>メッセージ無し</i></p> <div v-show=\\\"tweets.length > 0\\\"> <div v-for=\\\"t in tweets | orderBy 'date' -1\\\" transition=item> <tweet-component :text=t.text :date=t.date :obj=t @event-remove=removeTweet></tweet-component> </div> </div> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/pages/TimelinePage.vue\n ** module id = 81\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./HeaderBar.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./HeaderBar.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./HeaderBar.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/HeaderBar.vue\n ** module id = 82\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./PostMessageComponent.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./PostMessageComponent.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./PostMessageComponent.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/PostMessageComponent.vue\n ** module id = 83\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./TweetComponent.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./TweetComponent.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./TweetComponent.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/TweetComponent.vue\n ** module id = 84\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/App.vue\n ** module id = 85\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./CartPage.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./CartPage.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./CartPage.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/CartPage.vue\n ** module id = 86\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./TimelinePage.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./TimelinePage.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./TimelinePage.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/TimelinePage.vue\n ** module id = 87\n ** module chunks = 0\n **/","/*!\n * vue-router v0.7.13\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.VueRouter = factory();\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n  function Target(path, matcher, delegate) {\n    this.path = path;\n    this.matcher = matcher;\n    this.delegate = delegate;\n  }\n\n  Target.prototype = {\n    to: function to(target, callback) {\n      var delegate = this.delegate;\n\n      if (delegate && delegate.willAddRoute) {\n        target = delegate.willAddRoute(this.matcher.target, target);\n      }\n\n      this.matcher.add(this.path, target);\n\n      if (callback) {\n        if (callback.length === 0) {\n          throw new Error(\"You must have an argument in the function passed to `to`\");\n        }\n        this.matcher.addChild(this.path, target, callback, this.delegate);\n      }\n      return this;\n    }\n  };\n\n  function Matcher(target) {\n    this.routes = {};\n    this.children = {};\n    this.target = target;\n  }\n\n  Matcher.prototype = {\n    add: function add(path, handler) {\n      this.routes[path] = handler;\n    },\n\n    addChild: function addChild(path, target, callback, delegate) {\n      var matcher = new Matcher(target);\n      this.children[path] = matcher;\n\n      var match = generateMatch(path, matcher, delegate);\n\n      if (delegate && delegate.contextEntered) {\n        delegate.contextEntered(target, match);\n      }\n\n      callback(match);\n    }\n  };\n\n  function generateMatch(startingPath, matcher, delegate) {\n    return function (path, nestedCallback) {\n      var fullPath = startingPath + path;\n\n      if (nestedCallback) {\n        nestedCallback(generateMatch(fullPath, matcher, delegate));\n      } else {\n        return new Target(startingPath + path, matcher, delegate);\n      }\n    };\n  }\n\n  function addRoute(routeArray, path, handler) {\n    var len = 0;\n    for (var i = 0, l = routeArray.length; i < l; i++) {\n      len += routeArray[i].path.length;\n    }\n\n    path = path.substr(len);\n    var route = { path: path, handler: handler };\n    routeArray.push(route);\n  }\n\n  function eachRoute(baseRoute, matcher, callback, binding) {\n    var routes = matcher.routes;\n\n    for (var path in routes) {\n      if (routes.hasOwnProperty(path)) {\n        var routeArray = baseRoute.slice();\n        addRoute(routeArray, path, routes[path]);\n\n        if (matcher.children[path]) {\n          eachRoute(routeArray, matcher.children[path], callback, binding);\n        } else {\n          callback.call(binding, routeArray);\n        }\n      }\n    }\n  }\n\n  function map (callback, addRouteCallback) {\n    var matcher = new Matcher();\n\n    callback(generateMatch(\"\", matcher, this.delegate));\n\n    eachRoute([], matcher, function (route) {\n      if (addRouteCallback) {\n        addRouteCallback(this, route);\n      } else {\n        this.add(route);\n      }\n    }, this);\n  }\n\n  var specials = ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\'];\n\n  var escapeRegex = new RegExp('(\\\\' + specials.join('|\\\\') + ')', 'g');\n\n  var noWarning = false;\n  function warn(msg) {\n    if (!noWarning && typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  function tryDecode(uri, asComponent) {\n    try {\n      return asComponent ? decodeURIComponent(uri) : decodeURI(uri);\n    } catch (e) {\n      warn('malformed URI' + (asComponent ? ' component: ' : ': ') + uri);\n    }\n  }\n\n  function isArray(test) {\n    return Object.prototype.toString.call(test) === \"[object Array]\";\n  }\n\n  // A Segment represents a segment in the original route description.\n  // Each Segment type provides an `eachChar` and `regex` method.\n  //\n  // The `eachChar` method invokes the callback with one or more character\n  // specifications. A character specification consumes one or more input\n  // characters.\n  //\n  // The `regex` method returns a regex fragment for the segment. If the\n  // segment is a dynamic of star segment, the regex fragment also includes\n  // a capture.\n  //\n  // A character specification contains:\n  //\n  // * `validChars`: a String with a list of all valid characters, or\n  // * `invalidChars`: a String with a list of all invalid characters\n  // * `repeat`: true if the character specification can repeat\n\n  function StaticSegment(string) {\n    this.string = string;\n  }\n  StaticSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      var string = this.string,\n          ch;\n\n      for (var i = 0, l = string.length; i < l; i++) {\n        ch = string.charAt(i);\n        callback({ validChars: ch });\n      }\n    },\n\n    regex: function regex() {\n      return this.string.replace(escapeRegex, '\\\\$1');\n    },\n\n    generate: function generate() {\n      return this.string;\n    }\n  };\n\n  function DynamicSegment(name) {\n    this.name = name;\n  }\n  DynamicSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"/\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"([^/]+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function StarSegment(name) {\n    this.name = name;\n  }\n  StarSegment.prototype = {\n    eachChar: function eachChar(callback) {\n      callback({ invalidChars: \"\", repeat: true });\n    },\n\n    regex: function regex() {\n      return \"(.+)\";\n    },\n\n    generate: function generate(params) {\n      var val = params[this.name];\n      return val == null ? \":\" + this.name : val;\n    }\n  };\n\n  function EpsilonSegment() {}\n  EpsilonSegment.prototype = {\n    eachChar: function eachChar() {},\n    regex: function regex() {\n      return \"\";\n    },\n    generate: function generate() {\n      return \"\";\n    }\n  };\n\n  function parse(route, names, specificity) {\n    // normalize route as not starting with a \"/\". Recognition will\n    // also normalize.\n    if (route.charAt(0) === \"/\") {\n      route = route.substr(1);\n    }\n\n    var segments = route.split(\"/\"),\n        results = [];\n\n    // A routes has specificity determined by the order that its different segments\n    // appear in. This system mirrors how the magnitude of numbers written as strings\n    // works.\n    // Consider a number written as: \"abc\". An example would be \"200\". Any other number written\n    // \"xyz\" will be smaller than \"abc\" so long as `a > z`. For instance, \"199\" is smaller\n    // then \"200\", even though \"y\" and \"z\" (which are both 9) are larger than \"0\" (the value\n    // of (`b` and `c`). This is because the leading symbol, \"2\", is larger than the other\n    // leading symbol, \"1\".\n    // The rule is that symbols to the left carry more weight than symbols to the right\n    // when a number is written out as a string. In the above strings, the leading digit\n    // represents how many 100's are in the number, and it carries more weight than the middle\n    // number which represents how many 10's are in the number.\n    // This system of number magnitude works well for route specificity, too. A route written as\n    // `a/b/c` will be more specific than `x/y/z` as long as `a` is more specific than\n    // `x`, irrespective of the other parts.\n    // Because of this similarity, we assign each type of segment a number value written as a\n    // string. We can find the specificity of compound routes by concatenating these strings\n    // together, from left to right. After we have looped through all of the segments,\n    // we convert the string to a number.\n    specificity.val = '';\n\n    for (var i = 0, l = segments.length; i < l; i++) {\n      var segment = segments[i],\n          match;\n\n      if (match = segment.match(/^:([^\\/]+)$/)) {\n        results.push(new DynamicSegment(match[1]));\n        names.push(match[1]);\n        specificity.val += '3';\n      } else if (match = segment.match(/^\\*([^\\/]+)$/)) {\n        results.push(new StarSegment(match[1]));\n        specificity.val += '2';\n        names.push(match[1]);\n      } else if (segment === \"\") {\n        results.push(new EpsilonSegment());\n        specificity.val += '1';\n      } else {\n        results.push(new StaticSegment(segment));\n        specificity.val += '4';\n      }\n    }\n\n    specificity.val = +specificity.val;\n\n    return results;\n  }\n\n  // A State has a character specification and (`charSpec`) and a list of possible\n  // subsequent states (`nextStates`).\n  //\n  // If a State is an accepting state, it will also have several additional\n  // properties:\n  //\n  // * `regex`: A regular expression that is used to extract parameters from paths\n  //   that reached this accepting state.\n  // * `handlers`: Information on how to convert the list of captures into calls\n  //   to registered handlers with the specified parameters\n  // * `types`: How many static, dynamic or star segments in this route. Used to\n  //   decide which route to use if multiple registered routes match a path.\n  //\n  // Currently, State is implemented naively by looping over `nextStates` and\n  // comparing a character specification against a character. A more efficient\n  // implementation would use a hash of keys pointing at one or more next states.\n\n  function State(charSpec) {\n    this.charSpec = charSpec;\n    this.nextStates = [];\n  }\n\n  State.prototype = {\n    get: function get(charSpec) {\n      var nextStates = this.nextStates;\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        var child = nextStates[i];\n\n        var isEqual = child.charSpec.validChars === charSpec.validChars;\n        isEqual = isEqual && child.charSpec.invalidChars === charSpec.invalidChars;\n\n        if (isEqual) {\n          return child;\n        }\n      }\n    },\n\n    put: function put(charSpec) {\n      var state;\n\n      // If the character specification already exists in a child of the current\n      // state, just return that state.\n      if (state = this.get(charSpec)) {\n        return state;\n      }\n\n      // Make a new state for the character spec\n      state = new State(charSpec);\n\n      // Insert the new state as a child of the current state\n      this.nextStates.push(state);\n\n      // If this character specification repeats, insert the new state as a child\n      // of itself. Note that this will not trigger an infinite loop because each\n      // transition during recognition consumes a character.\n      if (charSpec.repeat) {\n        state.nextStates.push(state);\n      }\n\n      // Return the new state\n      return state;\n    },\n\n    // Find a list of child states matching the next character\n    match: function match(ch) {\n      // DEBUG \"Processing `\" + ch + \"`:\"\n      var nextStates = this.nextStates,\n          child,\n          charSpec,\n          chars;\n\n      // DEBUG \"  \" + debugState(this)\n      var returned = [];\n\n      for (var i = 0, l = nextStates.length; i < l; i++) {\n        child = nextStates[i];\n\n        charSpec = child.charSpec;\n\n        if (typeof (chars = charSpec.validChars) !== 'undefined') {\n          if (chars.indexOf(ch) !== -1) {\n            returned.push(child);\n          }\n        } else if (typeof (chars = charSpec.invalidChars) !== 'undefined') {\n          if (chars.indexOf(ch) === -1) {\n            returned.push(child);\n          }\n        }\n      }\n\n      return returned;\n    }\n\n    /** IF DEBUG\n    , debug: function() {\n      var charSpec = this.charSpec,\n          debug = \"[\",\n          chars = charSpec.validChars || charSpec.invalidChars;\n       if (charSpec.invalidChars) { debug += \"^\"; }\n      debug += chars;\n      debug += \"]\";\n       if (charSpec.repeat) { debug += \"+\"; }\n       return debug;\n    }\n    END IF **/\n  };\n\n  /** IF DEBUG\n  function debug(log) {\n    console.log(log);\n  }\n\n  function debugState(state) {\n    return state.nextStates.map(function(n) {\n      if (n.nextStates.length === 0) { return \"( \" + n.debug() + \" [accepting] )\"; }\n      return \"( \" + n.debug() + \" <then> \" + n.nextStates.map(function(s) { return s.debug() }).join(\" or \") + \" )\";\n    }).join(\", \")\n  }\n  END IF **/\n\n  // Sort the routes by specificity\n  function sortSolutions(states) {\n    return states.sort(function (a, b) {\n      return b.specificity.val - a.specificity.val;\n    });\n  }\n\n  function recognizeChar(states, ch) {\n    var nextStates = [];\n\n    for (var i = 0, l = states.length; i < l; i++) {\n      var state = states[i];\n\n      nextStates = nextStates.concat(state.match(ch));\n    }\n\n    return nextStates;\n  }\n\n  var oCreate = Object.create || function (proto) {\n    function F() {}\n    F.prototype = proto;\n    return new F();\n  };\n\n  function RecognizeResults(queryParams) {\n    this.queryParams = queryParams || {};\n  }\n  RecognizeResults.prototype = oCreate({\n    splice: Array.prototype.splice,\n    slice: Array.prototype.slice,\n    push: Array.prototype.push,\n    length: 0,\n    queryParams: null\n  });\n\n  function findHandler(state, path, queryParams) {\n    var handlers = state.handlers,\n        regex = state.regex;\n    var captures = path.match(regex),\n        currentCapture = 1;\n    var result = new RecognizeResults(queryParams);\n\n    for (var i = 0, l = handlers.length; i < l; i++) {\n      var handler = handlers[i],\n          names = handler.names,\n          params = {};\n\n      for (var j = 0, m = names.length; j < m; j++) {\n        params[names[j]] = captures[currentCapture++];\n      }\n\n      result.push({ handler: handler.handler, params: params, isDynamic: !!names.length });\n    }\n\n    return result;\n  }\n\n  function addSegment(currentState, segment) {\n    segment.eachChar(function (ch) {\n      var state;\n\n      currentState = currentState.put(ch);\n    });\n\n    return currentState;\n  }\n\n  function decodeQueryParamPart(part) {\n    // http://www.w3.org/TR/html401/interact/forms.html#h-17.13.4.1\n    part = part.replace(/\\+/gm, '%20');\n    return tryDecode(part, true);\n  }\n\n  // The main interface\n\n  var RouteRecognizer = function RouteRecognizer() {\n    this.rootState = new State();\n    this.names = {};\n  };\n\n  RouteRecognizer.prototype = {\n    add: function add(routes, options) {\n      var currentState = this.rootState,\n          regex = \"^\",\n          specificity = {},\n          handlers = [],\n          allSegments = [],\n          name;\n\n      var isEmpty = true;\n\n      for (var i = 0, l = routes.length; i < l; i++) {\n        var route = routes[i],\n            names = [];\n\n        var segments = parse(route.path, names, specificity);\n\n        allSegments = allSegments.concat(segments);\n\n        for (var j = 0, m = segments.length; j < m; j++) {\n          var segment = segments[j];\n\n          if (segment instanceof EpsilonSegment) {\n            continue;\n          }\n\n          isEmpty = false;\n\n          // Add a \"/\" for the new segment\n          currentState = currentState.put({ validChars: \"/\" });\n          regex += \"/\";\n\n          // Add a representation of the segment to the NFA and regex\n          currentState = addSegment(currentState, segment);\n          regex += segment.regex();\n        }\n\n        var handler = { handler: route.handler, names: names };\n        handlers.push(handler);\n      }\n\n      if (isEmpty) {\n        currentState = currentState.put({ validChars: \"/\" });\n        regex += \"/\";\n      }\n\n      currentState.handlers = handlers;\n      currentState.regex = new RegExp(regex + \"$\");\n      currentState.specificity = specificity;\n\n      if (name = options && options.as) {\n        this.names[name] = {\n          segments: allSegments,\n          handlers: handlers\n        };\n      }\n    },\n\n    handlersFor: function handlersFor(name) {\n      var route = this.names[name],\n          result = [];\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      for (var i = 0, l = route.handlers.length; i < l; i++) {\n        result.push(route.handlers[i]);\n      }\n\n      return result;\n    },\n\n    hasRoute: function hasRoute(name) {\n      return !!this.names[name];\n    },\n\n    generate: function generate(name, params) {\n      var route = this.names[name],\n          output = \"\";\n      if (!route) {\n        throw new Error(\"There is no route named \" + name);\n      }\n\n      var segments = route.segments;\n\n      for (var i = 0, l = segments.length; i < l; i++) {\n        var segment = segments[i];\n\n        if (segment instanceof EpsilonSegment) {\n          continue;\n        }\n\n        output += \"/\";\n        output += segment.generate(params);\n      }\n\n      if (output.charAt(0) !== '/') {\n        output = '/' + output;\n      }\n\n      if (params && params.queryParams) {\n        output += this.generateQueryString(params.queryParams);\n      }\n\n      return output;\n    },\n\n    generateQueryString: function generateQueryString(params) {\n      var pairs = [];\n      var keys = [];\n      for (var key in params) {\n        if (params.hasOwnProperty(key)) {\n          keys.push(key);\n        }\n      }\n      keys.sort();\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        var value = params[key];\n        if (value == null) {\n          continue;\n        }\n        var pair = encodeURIComponent(key);\n        if (isArray(value)) {\n          for (var j = 0, l = value.length; j < l; j++) {\n            var arrayPair = key + '[]' + '=' + encodeURIComponent(value[j]);\n            pairs.push(arrayPair);\n          }\n        } else {\n          pair += \"=\" + encodeURIComponent(value);\n          pairs.push(pair);\n        }\n      }\n\n      if (pairs.length === 0) {\n        return '';\n      }\n\n      return \"?\" + pairs.join(\"&\");\n    },\n\n    parseQueryString: function parseQueryString(queryString) {\n      var pairs = queryString.split(\"&\"),\n          queryParams = {};\n      for (var i = 0; i < pairs.length; i++) {\n        var pair = pairs[i].split('='),\n            key = decodeQueryParamPart(pair[0]),\n            keyLength = key.length,\n            isArray = false,\n            value;\n        if (pair.length === 1) {\n          value = 'true';\n        } else {\n          //Handle arrays\n          if (keyLength > 2 && key.slice(keyLength - 2) === '[]') {\n            isArray = true;\n            key = key.slice(0, keyLength - 2);\n            if (!queryParams[key]) {\n              queryParams[key] = [];\n            }\n          }\n          value = pair[1] ? decodeQueryParamPart(pair[1]) : '';\n        }\n        if (isArray) {\n          queryParams[key].push(value);\n        } else {\n          queryParams[key] = value;\n        }\n      }\n      return queryParams;\n    },\n\n    recognize: function recognize(path, silent) {\n      noWarning = silent;\n      var states = [this.rootState],\n          pathLen,\n          i,\n          l,\n          queryStart,\n          queryParams = {},\n          isSlashDropped = false;\n\n      queryStart = path.indexOf('?');\n      if (queryStart !== -1) {\n        var queryString = path.substr(queryStart + 1, path.length);\n        path = path.substr(0, queryStart);\n        if (queryString) {\n          queryParams = this.parseQueryString(queryString);\n        }\n      }\n\n      path = tryDecode(path);\n      if (!path) return;\n\n      // DEBUG GROUP path\n\n      if (path.charAt(0) !== \"/\") {\n        path = \"/\" + path;\n      }\n\n      pathLen = path.length;\n      if (pathLen > 1 && path.charAt(pathLen - 1) === \"/\") {\n        path = path.substr(0, pathLen - 1);\n        isSlashDropped = true;\n      }\n\n      for (i = 0, l = path.length; i < l; i++) {\n        states = recognizeChar(states, path.charAt(i));\n        if (!states.length) {\n          break;\n        }\n      }\n\n      // END DEBUG GROUP\n\n      var solutions = [];\n      for (i = 0, l = states.length; i < l; i++) {\n        if (states[i].handlers) {\n          solutions.push(states[i]);\n        }\n      }\n\n      states = sortSolutions(solutions);\n\n      var state = solutions[0];\n\n      if (state && state.handlers) {\n        // if a trailing slash was dropped and a star segment is the last segment\n        // specified, put the trailing slash back\n        if (isSlashDropped && state.regex.source.slice(-5) === \"(.+)$\") {\n          path = path + \"/\";\n        }\n        return findHandler(state, path, queryParams);\n      }\n    }\n  };\n\n  RouteRecognizer.prototype.map = map;\n\n  var genQuery = RouteRecognizer.prototype.generateQueryString;\n\n  // export default for holding the Vue reference\n  var exports$1 = {};\n  /**\n   * Warn stuff.\n   *\n   * @param {String} msg\n   */\n\n  function warn$1(msg) {\n    /* istanbul ignore next */\n    if (typeof console !== 'undefined') {\n      console.error('[vue-router] ' + msg);\n    }\n  }\n\n  /**\n   * Resolve a relative path.\n   *\n   * @param {String} base\n   * @param {String} relative\n   * @param {Boolean} append\n   * @return {String}\n   */\n\n  function resolvePath(base, relative, append) {\n    var query = base.match(/(\\?.*)$/);\n    if (query) {\n      query = query[1];\n      base = base.slice(0, -query.length);\n    }\n    // a query!\n    if (relative.charAt(0) === '?') {\n      return base + relative;\n    }\n    var stack = base.split('/');\n    // remove trailing segment if:\n    // - not appending\n    // - appending to trailing slash (last segment is empty)\n    if (!append || !stack[stack.length - 1]) {\n      stack.pop();\n    }\n    // resolve relative path\n    var segments = relative.replace(/^\\//, '').split('/');\n    for (var i = 0; i < segments.length; i++) {\n      var segment = segments[i];\n      if (segment === '.') {\n        continue;\n      } else if (segment === '..') {\n        stack.pop();\n      } else {\n        stack.push(segment);\n      }\n    }\n    // ensure leading slash\n    if (stack[0] !== '') {\n      stack.unshift('');\n    }\n    return stack.join('/');\n  }\n\n  /**\n   * Forgiving check for a promise\n   *\n   * @param {Object} p\n   * @return {Boolean}\n   */\n\n  function isPromise(p) {\n    return p && typeof p.then === 'function';\n  }\n\n  /**\n   * Retrive a route config field from a component instance\n   * OR a component contructor.\n   *\n   * @param {Function|Vue} component\n   * @param {String} name\n   * @return {*}\n   */\n\n  function getRouteConfig(component, name) {\n    var options = component && (component.$options || component.options);\n    return options && options.route && options.route[name];\n  }\n\n  /**\n   * Resolve an async component factory. Have to do a dirty\n   * mock here because of Vue core's internal API depends on\n   * an ID check.\n   *\n   * @param {Object} handler\n   * @param {Function} cb\n   */\n\n  var resolver = undefined;\n\n  function resolveAsyncComponent(handler, cb) {\n    if (!resolver) {\n      resolver = {\n        resolve: exports$1.Vue.prototype._resolveComponent,\n        $options: {\n          components: {\n            _: handler.component\n          }\n        }\n      };\n    } else {\n      resolver.$options.components._ = handler.component;\n    }\n    resolver.resolve('_', function (Component) {\n      handler.component = Component;\n      cb(Component);\n    });\n  }\n\n  /**\n   * Map the dynamic segments in a path to params.\n   *\n   * @param {String} path\n   * @param {Object} params\n   * @param {Object} query\n   */\n\n  function mapParams(path, params, query) {\n    if (params === undefined) params = {};\n\n    path = path.replace(/:([^\\/]+)/g, function (_, key) {\n      var val = params[key];\n      /* istanbul ignore if */\n      if (!val) {\n        warn$1('param \"' + key + '\" not found when generating ' + 'path for \"' + path + '\" with params ' + JSON.stringify(params));\n      }\n      return val || '';\n    });\n    if (query) {\n      path += genQuery(query);\n    }\n    return path;\n  }\n\n  var hashRE = /#.*$/;\n\n  var HTML5History = (function () {\n    function HTML5History(_ref) {\n      var root = _ref.root;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HTML5History);\n\n      if (root && root !== '/') {\n        // make sure there's the starting slash\n        if (root.charAt(0) !== '/') {\n          root = '/' + root;\n        }\n        // remove trailing slash\n        this.root = root.replace(/\\/$/, '');\n        this.rootRE = new RegExp('^\\\\' + this.root);\n      } else {\n        this.root = null;\n      }\n      this.onChange = onChange;\n      // check base tag\n      var baseEl = document.querySelector('base');\n      this.base = baseEl && baseEl.getAttribute('href');\n    }\n\n    HTML5History.prototype.start = function start() {\n      var _this = this;\n\n      this.listener = function (e) {\n        var url = location.pathname + location.search;\n        if (_this.root) {\n          url = url.replace(_this.rootRE, '');\n        }\n        _this.onChange(url, e && e.state, location.hash);\n      };\n      window.addEventListener('popstate', this.listener);\n      this.listener();\n    };\n\n    HTML5History.prototype.stop = function stop() {\n      window.removeEventListener('popstate', this.listener);\n    };\n\n    HTML5History.prototype.go = function go(path, replace, append) {\n      var url = this.formatPath(path, append);\n      if (replace) {\n        history.replaceState({}, '', url);\n      } else {\n        // record scroll position by replacing current state\n        history.replaceState({\n          pos: {\n            x: window.pageXOffset,\n            y: window.pageYOffset\n          }\n        }, '', location.href);\n        // then push new state\n        history.pushState({}, '', url);\n      }\n      var hashMatch = path.match(hashRE);\n      var hash = hashMatch && hashMatch[0];\n      path = url\n      // strip hash so it doesn't mess up params\n      .replace(hashRE, '')\n      // remove root before matching\n      .replace(this.rootRE, '');\n      this.onChange(path, null, hash);\n    };\n\n    HTML5History.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/'\n      // absolute path\n      ? this.root ? this.root + '/' + path.replace(/^\\//, '') : path : resolvePath(this.base || location.pathname, path, append);\n    };\n\n    return HTML5History;\n  })();\n\n  var HashHistory = (function () {\n    function HashHistory(_ref) {\n      var hashbang = _ref.hashbang;\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, HashHistory);\n\n      this.hashbang = hashbang;\n      this.onChange = onChange;\n    }\n\n    HashHistory.prototype.start = function start() {\n      var self = this;\n      this.listener = function () {\n        var path = location.hash;\n        var raw = path.replace(/^#!?/, '');\n        // always\n        if (raw.charAt(0) !== '/') {\n          raw = '/' + raw;\n        }\n        var formattedPath = self.formatPath(raw);\n        if (formattedPath !== path) {\n          location.replace(formattedPath);\n          return;\n        }\n        // determine query\n        // note it's possible to have queries in both the actual URL\n        // and the hash fragment itself.\n        var query = location.search && path.indexOf('?') > -1 ? '&' + location.search.slice(1) : location.search;\n        self.onChange(path.replace(/^#!?/, '') + query);\n      };\n      window.addEventListener('hashchange', this.listener);\n      this.listener();\n    };\n\n    HashHistory.prototype.stop = function stop() {\n      window.removeEventListener('hashchange', this.listener);\n    };\n\n    HashHistory.prototype.go = function go(path, replace, append) {\n      path = this.formatPath(path, append);\n      if (replace) {\n        location.replace(path);\n      } else {\n        location.hash = path;\n      }\n    };\n\n    HashHistory.prototype.formatPath = function formatPath(path, append) {\n      var isAbsoloute = path.charAt(0) === '/';\n      var prefix = '#' + (this.hashbang ? '!' : '');\n      return isAbsoloute ? prefix + path : prefix + resolvePath(location.hash.replace(/^#!?/, ''), path, append);\n    };\n\n    return HashHistory;\n  })();\n\n  var AbstractHistory = (function () {\n    function AbstractHistory(_ref) {\n      var onChange = _ref.onChange;\n      babelHelpers.classCallCheck(this, AbstractHistory);\n\n      this.onChange = onChange;\n      this.currentPath = '/';\n    }\n\n    AbstractHistory.prototype.start = function start() {\n      this.onChange('/');\n    };\n\n    AbstractHistory.prototype.stop = function stop() {\n      // noop\n    };\n\n    AbstractHistory.prototype.go = function go(path, replace, append) {\n      path = this.currentPath = this.formatPath(path, append);\n      this.onChange(path);\n    };\n\n    AbstractHistory.prototype.formatPath = function formatPath(path, append) {\n      return path.charAt(0) === '/' ? path : resolvePath(this.currentPath, path, append);\n    };\n\n    return AbstractHistory;\n  })();\n\n  /**\n   * Determine the reusability of an existing router view.\n   *\n   * @param {Directive} view\n   * @param {Object} handler\n   * @param {Transition} transition\n   */\n\n  function canReuse(view, handler, transition) {\n    var component = view.childVM;\n    if (!component || !handler) {\n      return false;\n    }\n    // important: check view.Component here because it may\n    // have been changed in activate hook\n    if (view.Component !== handler.component) {\n      return false;\n    }\n    var canReuseFn = getRouteConfig(component, 'canReuse');\n    return typeof canReuseFn === 'boolean' ? canReuseFn : canReuseFn ? canReuseFn.call(component, {\n      to: transition.to,\n      from: transition.from\n    }) : true; // defaults to true\n  }\n\n  /**\n   * Check if a component can deactivate.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canDeactivate(view, transition, next) {\n    var fromComponent = view.childVM;\n    var hook = getRouteConfig(fromComponent, 'canDeactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHook(hook, fromComponent, next, {\n        expectBoolean: true\n      });\n    }\n  }\n\n  /**\n   * Check if a component can activate.\n   *\n   * @param {Object} handler\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function canActivate(handler, transition, next) {\n    resolveAsyncComponent(handler, function (Component) {\n      // have to check due to async-ness\n      if (transition.aborted) {\n        return;\n      }\n      // determine if this component can be activated\n      var hook = getRouteConfig(Component, 'canActivate');\n      if (!hook) {\n        next();\n      } else {\n        transition.callHook(hook, null, next, {\n          expectBoolean: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Call deactivate hooks for existing router-views.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Function} next\n   */\n\n  function deactivate(view, transition, next) {\n    var component = view.childVM;\n    var hook = getRouteConfig(component, 'deactivate');\n    if (!hook) {\n      next();\n    } else {\n      transition.callHooks(hook, component, next);\n    }\n  }\n\n  /**\n   * Activate / switch component for a router-view.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   * @param {Number} depth\n   * @param {Function} [cb]\n   */\n\n  function activate(view, transition, depth, cb, reuse) {\n    var handler = transition.activateQueue[depth];\n    if (!handler) {\n      saveChildView(view);\n      if (view._bound) {\n        view.setComponent(null);\n      }\n      cb && cb();\n      return;\n    }\n\n    var Component = view.Component = handler.component;\n    var activateHook = getRouteConfig(Component, 'activate');\n    var dataHook = getRouteConfig(Component, 'data');\n    var waitForData = getRouteConfig(Component, 'waitForData');\n\n    view.depth = depth;\n    view.activated = false;\n\n    var component = undefined;\n    var loading = !!(dataHook && !waitForData);\n\n    // \"reuse\" is a flag passed down when the parent view is\n    // either reused via keep-alive or as a child of a kept-alive view.\n    // of course we can only reuse if the current kept-alive instance\n    // is of the correct type.\n    reuse = reuse && view.childVM && view.childVM.constructor === Component;\n\n    if (reuse) {\n      // just reuse\n      component = view.childVM;\n      component.$loadingRouteData = loading;\n    } else {\n      saveChildView(view);\n\n      // unbuild current component. this step also destroys\n      // and removes all nested child views.\n      view.unbuild(true);\n\n      // build the new component. this will also create the\n      // direct child view of the current one. it will register\n      // itself as view.childView.\n      component = view.build({\n        _meta: {\n          $loadingRouteData: loading\n        },\n        created: function created() {\n          this._routerView = view;\n        }\n      });\n\n      // handle keep-alive.\n      // when a kept-alive child vm is restored, we need to\n      // add its cached child views into the router's view list,\n      // and also properly update current view's child view.\n      if (view.keepAlive) {\n        component.$loadingRouteData = loading;\n        var cachedChildView = component._keepAliveRouterView;\n        if (cachedChildView) {\n          view.childView = cachedChildView;\n          component._keepAliveRouterView = null;\n        }\n      }\n    }\n\n    // cleanup the component in case the transition is aborted\n    // before the component is ever inserted.\n    var cleanup = function cleanup() {\n      component.$destroy();\n    };\n\n    // actually insert the component and trigger transition\n    var insert = function insert() {\n      if (reuse) {\n        cb && cb();\n        return;\n      }\n      var router = transition.router;\n      if (router._rendered || router._transitionOnLoad) {\n        view.transition(component);\n      } else {\n        // no transition on first render, manual transition\n        /* istanbul ignore if */\n        if (view.setCurrent) {\n          // 0.12 compat\n          view.setCurrent(component);\n        } else {\n          // 1.0\n          view.childVM = component;\n        }\n        component.$before(view.anchor, null, false);\n      }\n      cb && cb();\n    };\n\n    var afterData = function afterData() {\n      // activate the child view\n      if (view.childView) {\n        activate(view.childView, transition, depth + 1, null, reuse || view.keepAlive);\n      }\n      insert();\n    };\n\n    // called after activation hook is resolved\n    var afterActivate = function afterActivate() {\n      view.activated = true;\n      if (dataHook && waitForData) {\n        // wait until data loaded to insert\n        loadData(component, transition, dataHook, afterData, cleanup);\n      } else {\n        // load data and insert at the same time\n        if (dataHook) {\n          loadData(component, transition, dataHook);\n        }\n        afterData();\n      }\n    };\n\n    if (activateHook) {\n      transition.callHooks(activateHook, component, afterActivate, {\n        cleanup: cleanup,\n        postActivate: true\n      });\n    } else {\n      afterActivate();\n    }\n  }\n\n  /**\n   * Reuse a view, just reload data if necessary.\n   *\n   * @param {Directive} view\n   * @param {Transition} transition\n   */\n\n  function reuse(view, transition) {\n    var component = view.childVM;\n    var dataHook = getRouteConfig(component, 'data');\n    if (dataHook) {\n      loadData(component, transition, dataHook);\n    }\n  }\n\n  /**\n   * Asynchronously load and apply data to component.\n   *\n   * @param {Vue} component\n   * @param {Transition} transition\n   * @param {Function} hook\n   * @param {Function} cb\n   * @param {Function} cleanup\n   */\n\n  function loadData(component, transition, hook, cb, cleanup) {\n    component.$loadingRouteData = true;\n    transition.callHooks(hook, component, function () {\n      component.$loadingRouteData = false;\n      component.$emit('route-data-loaded', component);\n      cb && cb();\n    }, {\n      cleanup: cleanup,\n      postActivate: true,\n      processData: function processData(data) {\n        // handle promise sugar syntax\n        var promises = [];\n        if (isPlainObject(data)) {\n          Object.keys(data).forEach(function (key) {\n            var val = data[key];\n            if (isPromise(val)) {\n              promises.push(val.then(function (resolvedVal) {\n                component.$set(key, resolvedVal);\n              }));\n            } else {\n              component.$set(key, val);\n            }\n          });\n        }\n        if (promises.length) {\n          return promises[0].constructor.all(promises);\n        }\n      }\n    });\n  }\n\n  /**\n   * Save the child view for a kept-alive view so that\n   * we can restore it when it is switched back to.\n   *\n   * @param {Directive} view\n   */\n\n  function saveChildView(view) {\n    if (view.keepAlive && view.childVM && view.childView) {\n      view.childVM._keepAliveRouterView = view.childView;\n    }\n    view.childView = null;\n  }\n\n  /**\n   * Check plain object.\n   *\n   * @param {*} val\n   */\n\n  function isPlainObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  /**\n   * A RouteTransition object manages the pipeline of a\n   * router-view switching process. This is also the object\n   * passed into user route hooks.\n   *\n   * @param {Router} router\n   * @param {Route} to\n   * @param {Route} from\n   */\n\n  var RouteTransition = (function () {\n    function RouteTransition(router, to, from) {\n      babelHelpers.classCallCheck(this, RouteTransition);\n\n      this.router = router;\n      this.to = to;\n      this.from = from;\n      this.next = null;\n      this.aborted = false;\n      this.done = false;\n    }\n\n    /**\n     * Abort current transition and return to previous location.\n     */\n\n    RouteTransition.prototype.abort = function abort() {\n      if (!this.aborted) {\n        this.aborted = true;\n        // if the root path throws an error during validation\n        // on initial load, it gets caught in an infinite loop.\n        var abortingOnLoad = !this.from.path && this.to.path === '/';\n        if (!abortingOnLoad) {\n          this.router.replace(this.from.path || '/');\n        }\n      }\n    };\n\n    /**\n     * Abort current transition and redirect to a new location.\n     *\n     * @param {String} path\n     */\n\n    RouteTransition.prototype.redirect = function redirect(path) {\n      if (!this.aborted) {\n        this.aborted = true;\n        if (typeof path === 'string') {\n          path = mapParams(path, this.to.params, this.to.query);\n        } else {\n          path.params = path.params || this.to.params;\n          path.query = path.query || this.to.query;\n        }\n        this.router.replace(path);\n      }\n    };\n\n    /**\n     * A router view transition's pipeline can be described as\n     * follows, assuming we are transitioning from an existing\n     * <router-view> chain [Component A, Component B] to a new\n     * chain [Component A, Component C]:\n     *\n     *  A    A\n     *  | => |\n     *  B    C\n     *\n     * 1. Reusablity phase:\n     *   -> canReuse(A, A)\n     *   -> canReuse(B, C)\n     *   -> determine new queues:\n     *      - deactivation: [B]\n     *      - activation: [C]\n     *\n     * 2. Validation phase:\n     *   -> canDeactivate(B)\n     *   -> canActivate(C)\n     *\n     * 3. Activation phase:\n     *   -> deactivate(B)\n     *   -> activate(C)\n     *\n     * Each of these steps can be asynchronous, and any\n     * step can potentially abort the transition.\n     *\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.start = function start(cb) {\n      var transition = this;\n\n      // determine the queue of views to deactivate\n      var deactivateQueue = [];\n      var view = this.router._rootView;\n      while (view) {\n        deactivateQueue.unshift(view);\n        view = view.childView;\n      }\n      var reverseDeactivateQueue = deactivateQueue.slice().reverse();\n\n      // determine the queue of route handlers to activate\n      var activateQueue = this.activateQueue = toArray(this.to.matched).map(function (match) {\n        return match.handler;\n      });\n\n      // 1. Reusability phase\n      var i = undefined,\n          reuseQueue = undefined;\n      for (i = 0; i < reverseDeactivateQueue.length; i++) {\n        if (!canReuse(reverseDeactivateQueue[i], activateQueue[i], transition)) {\n          break;\n        }\n      }\n      if (i > 0) {\n        reuseQueue = reverseDeactivateQueue.slice(0, i);\n        deactivateQueue = reverseDeactivateQueue.slice(i).reverse();\n        activateQueue = activateQueue.slice(i);\n      }\n\n      // 2. Validation phase\n      transition.runQueue(deactivateQueue, canDeactivate, function () {\n        transition.runQueue(activateQueue, canActivate, function () {\n          transition.runQueue(deactivateQueue, deactivate, function () {\n            // 3. Activation phase\n\n            // Update router current route\n            transition.router._onTransitionValidated(transition);\n\n            // trigger reuse for all reused views\n            reuseQueue && reuseQueue.forEach(function (view) {\n              return reuse(view, transition);\n            });\n\n            // the root of the chain that needs to be replaced\n            // is the top-most non-reusable view.\n            if (deactivateQueue.length) {\n              var _view = deactivateQueue[deactivateQueue.length - 1];\n              var depth = reuseQueue ? reuseQueue.length : 0;\n              activate(_view, transition, depth, cb);\n            } else {\n              cb();\n            }\n          });\n        });\n      });\n    };\n\n    /**\n     * Asynchronously and sequentially apply a function to a\n     * queue.\n     *\n     * @param {Array} queue\n     * @param {Function} fn\n     * @param {Function} cb\n     */\n\n    RouteTransition.prototype.runQueue = function runQueue(queue, fn, cb) {\n      var transition = this;\n      step(0);\n      function step(index) {\n        if (index >= queue.length) {\n          cb();\n        } else {\n          fn(queue[index], transition, function () {\n            step(index + 1);\n          });\n        }\n      }\n    };\n\n    /**\n     * Call a user provided route transition hook and handle\n     * the response (e.g. if the user returns a promise).\n     *\n     * If the user neither expects an argument nor returns a\n     * promise, the hook is assumed to be synchronous.\n     *\n     * @param {Function} hook\n     * @param {*} [context]\n     * @param {Function} [cb]\n     * @param {Object} [options]\n     *                 - {Boolean} expectBoolean\n     *                 - {Boolean} postActive\n     *                 - {Function} processData\n     *                 - {Function} cleanup\n     */\n\n    RouteTransition.prototype.callHook = function callHook(hook, context, cb) {\n      var _ref = arguments.length <= 3 || arguments[3] === undefined ? {} : arguments[3];\n\n      var _ref$expectBoolean = _ref.expectBoolean;\n      var expectBoolean = _ref$expectBoolean === undefined ? false : _ref$expectBoolean;\n      var _ref$postActivate = _ref.postActivate;\n      var postActivate = _ref$postActivate === undefined ? false : _ref$postActivate;\n      var processData = _ref.processData;\n      var cleanup = _ref.cleanup;\n\n      var transition = this;\n      var nextCalled = false;\n\n      // abort the transition\n      var abort = function abort() {\n        cleanup && cleanup();\n        transition.abort();\n      };\n\n      // handle errors\n      var onError = function onError(err) {\n        postActivate ? next() : abort();\n        if (err && !transition.router._suppress) {\n          warn$1('Uncaught error during transition: ');\n          throw err instanceof Error ? err : new Error(err);\n        }\n      };\n\n      // since promise swallows errors, we have to\n      // throw it in the next tick...\n      var onPromiseError = function onPromiseError(err) {\n        try {\n          onError(err);\n        } catch (e) {\n          setTimeout(function () {\n            throw e;\n          }, 0);\n        }\n      };\n\n      // advance the transition to the next step\n      var next = function next() {\n        if (nextCalled) {\n          warn$1('transition.next() should be called only once.');\n          return;\n        }\n        nextCalled = true;\n        if (transition.aborted) {\n          cleanup && cleanup();\n          return;\n        }\n        cb && cb();\n      };\n\n      var nextWithBoolean = function nextWithBoolean(res) {\n        if (typeof res === 'boolean') {\n          res ? next() : abort();\n        } else if (isPromise(res)) {\n          res.then(function (ok) {\n            ok ? next() : abort();\n          }, onPromiseError);\n        } else if (!hook.length) {\n          next();\n        }\n      };\n\n      var nextWithData = function nextWithData(data) {\n        var res = undefined;\n        try {\n          res = processData(data);\n        } catch (err) {\n          return onError(err);\n        }\n        if (isPromise(res)) {\n          res.then(next, onPromiseError);\n        } else {\n          next();\n        }\n      };\n\n      // expose a clone of the transition object, so that each\n      // hook gets a clean copy and prevent the user from\n      // messing with the internals.\n      var exposed = {\n        to: transition.to,\n        from: transition.from,\n        abort: abort,\n        next: processData ? nextWithData : next,\n        redirect: function redirect() {\n          transition.redirect.apply(transition, arguments);\n        }\n      };\n\n      // actually call the hook\n      var res = undefined;\n      try {\n        res = hook.call(context, exposed);\n      } catch (err) {\n        return onError(err);\n      }\n\n      if (expectBoolean) {\n        // boolean hooks\n        nextWithBoolean(res);\n      } else if (isPromise(res)) {\n        // promise\n        if (processData) {\n          res.then(nextWithData, onPromiseError);\n        } else {\n          res.then(next, onPromiseError);\n        }\n      } else if (processData && isPlainOjbect(res)) {\n        // data promise sugar\n        nextWithData(res);\n      } else if (!hook.length) {\n        next();\n      }\n    };\n\n    /**\n     * Call a single hook or an array of async hooks in series.\n     *\n     * @param {Array} hooks\n     * @param {*} context\n     * @param {Function} cb\n     * @param {Object} [options]\n     */\n\n    RouteTransition.prototype.callHooks = function callHooks(hooks, context, cb, options) {\n      var _this = this;\n\n      if (Array.isArray(hooks)) {\n        this.runQueue(hooks, function (hook, _, next) {\n          if (!_this.aborted) {\n            _this.callHook(hook, context, next, options);\n          }\n        }, cb);\n      } else {\n        this.callHook(hooks, context, cb, options);\n      }\n    };\n\n    return RouteTransition;\n  })();\n\n  function isPlainOjbect(val) {\n    return Object.prototype.toString.call(val) === '[object Object]';\n  }\n\n  function toArray(val) {\n    return val ? Array.prototype.slice.call(val) : [];\n  }\n\n  var internalKeysRE = /^(component|subRoutes|fullPath)$/;\n\n  /**\n   * Route Context Object\n   *\n   * @param {String} path\n   * @param {Router} router\n   */\n\n  var Route = function Route(path, router) {\n    var _this = this;\n\n    babelHelpers.classCallCheck(this, Route);\n\n    var matched = router._recognizer.recognize(path);\n    if (matched) {\n      // copy all custom fields from route configs\n      [].forEach.call(matched, function (match) {\n        for (var key in match.handler) {\n          if (!internalKeysRE.test(key)) {\n            _this[key] = match.handler[key];\n          }\n        }\n      });\n      // set query and params\n      this.query = matched.queryParams;\n      this.params = [].reduce.call(matched, function (prev, cur) {\n        if (cur.params) {\n          for (var key in cur.params) {\n            prev[key] = cur.params[key];\n          }\n        }\n        return prev;\n      }, {});\n    }\n    // expose path and router\n    this.path = path;\n    // for internal use\n    this.matched = matched || router._notFoundHandler;\n    // internal reference to router\n    Object.defineProperty(this, 'router', {\n      enumerable: false,\n      value: router\n    });\n    // Important: freeze self to prevent observation\n    Object.freeze(this);\n  };\n\n  function applyOverride (Vue) {\n    var _Vue$util = Vue.util;\n    var extend = _Vue$util.extend;\n    var isArray = _Vue$util.isArray;\n    var defineReactive = _Vue$util.defineReactive;\n\n    // override Vue's init and destroy process to keep track of router instances\n    var init = Vue.prototype._init;\n    Vue.prototype._init = function (options) {\n      options = options || {};\n      var root = options._parent || options.parent || this;\n      var router = root.$router;\n      var route = root.$route;\n      if (router) {\n        // expose router\n        this.$router = router;\n        router._children.push(this);\n        /* istanbul ignore if */\n        if (this._defineMeta) {\n          // 0.12\n          this._defineMeta('$route', route);\n        } else {\n          // 1.0\n          defineReactive(this, '$route', route);\n        }\n      }\n      init.call(this, options);\n    };\n\n    var destroy = Vue.prototype._destroy;\n    Vue.prototype._destroy = function () {\n      if (!this._isBeingDestroyed && this.$router) {\n        this.$router._children.$remove(this);\n      }\n      destroy.apply(this, arguments);\n    };\n\n    // 1.0 only: enable route mixins\n    var strats = Vue.config.optionMergeStrategies;\n    var hooksToMergeRE = /^(data|activate|deactivate)$/;\n\n    if (strats) {\n      strats.route = function (parentVal, childVal) {\n        if (!childVal) return parentVal;\n        if (!parentVal) return childVal;\n        var ret = {};\n        extend(ret, parentVal);\n        for (var key in childVal) {\n          var a = ret[key];\n          var b = childVal[key];\n          // for data, activate and deactivate, we need to merge them into\n          // arrays similar to lifecycle hooks.\n          if (a && hooksToMergeRE.test(key)) {\n            ret[key] = (isArray(a) ? a : [a]).concat(b);\n          } else {\n            ret[key] = b;\n          }\n        }\n        return ret;\n      };\n    }\n  }\n\n  function View (Vue) {\n\n    var _ = Vue.util;\n    var componentDef =\n    // 0.12\n    Vue.directive('_component') ||\n    // 1.0\n    Vue.internalDirectives.component;\n    // <router-view> extends the internal component directive\n    var viewDef = _.extend({}, componentDef);\n\n    // with some overrides\n    _.extend(viewDef, {\n\n      _isRouterView: true,\n\n      bind: function bind() {\n        var route = this.vm.$route;\n        /* istanbul ignore if */\n        if (!route) {\n          warn$1('<router-view> can only be used inside a ' + 'router-enabled app.');\n          return;\n        }\n        // force dynamic directive so v-component doesn't\n        // attempt to build right now\n        this._isDynamicLiteral = true;\n        // finally, init by delegating to v-component\n        componentDef.bind.call(this);\n\n        // locate the parent view\n        var parentView = undefined;\n        var parent = this.vm;\n        while (parent) {\n          if (parent._routerView) {\n            parentView = parent._routerView;\n            break;\n          }\n          parent = parent.$parent;\n        }\n        if (parentView) {\n          // register self as a child of the parent view,\n          // instead of activating now. This is so that the\n          // child's activate hook is called after the\n          // parent's has resolved.\n          this.parentView = parentView;\n          parentView.childView = this;\n        } else {\n          // this is the root view!\n          var router = route.router;\n          router._rootView = this;\n        }\n\n        // handle late-rendered view\n        // two possibilities:\n        // 1. root view rendered after transition has been\n        //    validated;\n        // 2. child view rendered after parent view has been\n        //    activated.\n        var transition = route.router._currentTransition;\n        if (!parentView && transition.done || parentView && parentView.activated) {\n          var depth = parentView ? parentView.depth + 1 : 0;\n          activate(this, transition, depth);\n        }\n      },\n\n      unbind: function unbind() {\n        if (this.parentView) {\n          this.parentView.childView = null;\n        }\n        componentDef.unbind.call(this);\n      }\n    });\n\n    Vue.elementDirective('router-view', viewDef);\n  }\n\n  var trailingSlashRE = /\\/$/;\n  var regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n  var queryStringRE = /\\?.*$/;\n\n  // install v-link, which provides navigation support for\n  // HTML5 history mode\n  function Link (Vue) {\n    var _Vue$util = Vue.util;\n    var _bind = _Vue$util.bind;\n    var isObject = _Vue$util.isObject;\n    var addClass = _Vue$util.addClass;\n    var removeClass = _Vue$util.removeClass;\n\n    var onPriority = Vue.directive('on').priority;\n    var LINK_UPDATE = '__vue-router-link-update__';\n\n    var activeId = 0;\n\n    Vue.directive('link-active', {\n      priority: 9999,\n      bind: function bind() {\n        var _this = this;\n\n        var id = String(activeId++);\n        // collect v-links contained within this element.\n        // we need do this here before the parent-child relationship\n        // gets messed up by terminal directives (if, for, components)\n        var childLinks = this.el.querySelectorAll('[v-link]');\n        for (var i = 0, l = childLinks.length; i < l; i++) {\n          var link = childLinks[i];\n          var existingId = link.getAttribute(LINK_UPDATE);\n          var value = existingId ? existingId + ',' + id : id;\n          // leave a mark on the link element which can be persisted\n          // through fragment clones.\n          link.setAttribute(LINK_UPDATE, value);\n        }\n        this.vm.$on(LINK_UPDATE, this.cb = function (link, path) {\n          if (link.activeIds.indexOf(id) > -1) {\n            link.updateClasses(path, _this.el);\n          }\n        });\n      },\n      unbind: function unbind() {\n        this.vm.$off(LINK_UPDATE, this.cb);\n      }\n    });\n\n    Vue.directive('link', {\n      priority: onPriority - 2,\n\n      bind: function bind() {\n        var vm = this.vm;\n        /* istanbul ignore if */\n        if (!vm.$route) {\n          warn$1('v-link can only be used inside a router-enabled app.');\n          return;\n        }\n        this.router = vm.$route.router;\n        // update things when the route changes\n        this.unwatch = vm.$watch('$route', _bind(this.onRouteUpdate, this));\n        // check v-link-active ids\n        var activeIds = this.el.getAttribute(LINK_UPDATE);\n        if (activeIds) {\n          this.el.removeAttribute(LINK_UPDATE);\n          this.activeIds = activeIds.split(',');\n        }\n        // no need to handle click if link expects to be opened\n        // in a new window/tab.\n        /* istanbul ignore if */\n        if (this.el.tagName === 'A' && this.el.getAttribute('target') === '_blank') {\n          return;\n        }\n        // handle click\n        this.handler = _bind(this.onClick, this);\n        this.el.addEventListener('click', this.handler);\n      },\n\n      update: function update(target) {\n        this.target = target;\n        if (isObject(target)) {\n          this.append = target.append;\n          this.exact = target.exact;\n          this.prevActiveClass = this.activeClass;\n          this.activeClass = target.activeClass;\n        }\n        this.onRouteUpdate(this.vm.$route);\n      },\n\n      onClick: function onClick(e) {\n        // don't redirect with control keys\n        /* istanbul ignore if */\n        if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n        // don't redirect when preventDefault called\n        /* istanbul ignore if */\n        if (e.defaultPrevented) return;\n        // don't redirect on right click\n        /* istanbul ignore if */\n        if (e.button !== 0) return;\n\n        var target = this.target;\n        if (target) {\n          // v-link with expression, just go\n          e.preventDefault();\n          this.router.go(target);\n        } else {\n          // no expression, delegate for an <a> inside\n          var el = e.target;\n          while (el.tagName !== 'A' && el !== this.el) {\n            el = el.parentNode;\n          }\n          if (el.tagName === 'A' && sameOrigin(el)) {\n            e.preventDefault();\n            var path = el.pathname;\n            if (this.router.history.root) {\n              path = path.replace(this.router.history.rootRE, '');\n            }\n            this.router.go({\n              path: path,\n              replace: target && target.replace,\n              append: target && target.append\n            });\n          }\n        }\n      },\n\n      onRouteUpdate: function onRouteUpdate(route) {\n        // router.stringifyPath is dependent on current route\n        // and needs to be called again whenver route changes.\n        var newPath = this.router.stringifyPath(this.target);\n        if (this.path !== newPath) {\n          this.path = newPath;\n          this.updateActiveMatch();\n          this.updateHref();\n        }\n        if (this.activeIds) {\n          this.vm.$emit(LINK_UPDATE, this, route.path);\n        } else {\n          this.updateClasses(route.path, this.el);\n        }\n      },\n\n      updateActiveMatch: function updateActiveMatch() {\n        this.activeRE = this.path && !this.exact ? new RegExp('^' + this.path.replace(/\\/$/, '').replace(queryStringRE, '').replace(regexEscapeRE, '\\\\$&') + '(\\\\/|$)') : null;\n      },\n\n      updateHref: function updateHref() {\n        if (this.el.tagName !== 'A') {\n          return;\n        }\n        var path = this.path;\n        var router = this.router;\n        var isAbsolute = path.charAt(0) === '/';\n        // do not format non-hash relative paths\n        var href = path && (router.mode === 'hash' || isAbsolute) ? router.history.formatPath(path, this.append) : path;\n        if (href) {\n          this.el.href = href;\n        } else {\n          this.el.removeAttribute('href');\n        }\n      },\n\n      updateClasses: function updateClasses(path, el) {\n        var activeClass = this.activeClass || this.router._linkActiveClass;\n        // clear old class\n        if (this.prevActiveClass && this.prevActiveClass !== activeClass) {\n          toggleClasses(el, this.prevActiveClass, removeClass);\n        }\n        // remove query string before matching\n        var dest = this.path.replace(queryStringRE, '');\n        path = path.replace(queryStringRE, '');\n        // add new class\n        if (this.exact) {\n          if (dest === path ||\n          // also allow additional trailing slash\n          dest.charAt(dest.length - 1) !== '/' && dest === path.replace(trailingSlashRE, '')) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        } else {\n          if (this.activeRE && this.activeRE.test(path)) {\n            toggleClasses(el, activeClass, addClass);\n          } else {\n            toggleClasses(el, activeClass, removeClass);\n          }\n        }\n      },\n\n      unbind: function unbind() {\n        this.el.removeEventListener('click', this.handler);\n        this.unwatch && this.unwatch();\n      }\n    });\n\n    function sameOrigin(link) {\n      return link.protocol === location.protocol && link.hostname === location.hostname && link.port === location.port;\n    }\n\n    // this function is copied from v-bind:class implementation until\n    // we properly expose it...\n    function toggleClasses(el, key, fn) {\n      key = key.trim();\n      if (key.indexOf(' ') === -1) {\n        fn(el, key);\n        return;\n      }\n      var keys = key.split(/\\s+/);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        fn(el, keys[i]);\n      }\n    }\n  }\n\n  var historyBackends = {\n    abstract: AbstractHistory,\n    hash: HashHistory,\n    html5: HTML5History\n  };\n\n  // late bind during install\n  var Vue = undefined;\n\n  /**\n   * Router constructor\n   *\n   * @param {Object} [options]\n   */\n\n  var Router = (function () {\n    function Router() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$hashbang = _ref.hashbang;\n      var hashbang = _ref$hashbang === undefined ? true : _ref$hashbang;\n      var _ref$abstract = _ref.abstract;\n      var abstract = _ref$abstract === undefined ? false : _ref$abstract;\n      var _ref$history = _ref.history;\n      var history = _ref$history === undefined ? false : _ref$history;\n      var _ref$saveScrollPosition = _ref.saveScrollPosition;\n      var saveScrollPosition = _ref$saveScrollPosition === undefined ? false : _ref$saveScrollPosition;\n      var _ref$transitionOnLoad = _ref.transitionOnLoad;\n      var transitionOnLoad = _ref$transitionOnLoad === undefined ? false : _ref$transitionOnLoad;\n      var _ref$suppressTransitionError = _ref.suppressTransitionError;\n      var suppressTransitionError = _ref$suppressTransitionError === undefined ? false : _ref$suppressTransitionError;\n      var _ref$root = _ref.root;\n      var root = _ref$root === undefined ? null : _ref$root;\n      var _ref$linkActiveClass = _ref.linkActiveClass;\n      var linkActiveClass = _ref$linkActiveClass === undefined ? 'v-link-active' : _ref$linkActiveClass;\n      babelHelpers.classCallCheck(this, Router);\n\n      /* istanbul ignore if */\n      if (!Router.installed) {\n        throw new Error('Please install the Router with Vue.use() before ' + 'creating an instance.');\n      }\n\n      // Vue instances\n      this.app = null;\n      this._children = [];\n\n      // route recognizer\n      this._recognizer = new RouteRecognizer();\n      this._guardRecognizer = new RouteRecognizer();\n\n      // state\n      this._started = false;\n      this._startCb = null;\n      this._currentRoute = {};\n      this._currentTransition = null;\n      this._previousTransition = null;\n      this._notFoundHandler = null;\n      this._notFoundRedirect = null;\n      this._beforeEachHooks = [];\n      this._afterEachHooks = [];\n\n      // trigger transition on initial render?\n      this._rendered = false;\n      this._transitionOnLoad = transitionOnLoad;\n\n      // history mode\n      this._root = root;\n      this._abstract = abstract;\n      this._hashbang = hashbang;\n\n      // check if HTML5 history is available\n      var hasPushState = typeof window !== 'undefined' && window.history && window.history.pushState;\n      this._history = history && hasPushState;\n      this._historyFallback = history && !hasPushState;\n\n      // create history object\n      var inBrowser = Vue.util.inBrowser;\n      this.mode = !inBrowser || this._abstract ? 'abstract' : this._history ? 'html5' : 'hash';\n\n      var History = historyBackends[this.mode];\n      this.history = new History({\n        root: root,\n        hashbang: this._hashbang,\n        onChange: function onChange(path, state, anchor) {\n          _this._match(path, state, anchor);\n        }\n      });\n\n      // other options\n      this._saveScrollPosition = saveScrollPosition;\n      this._linkActiveClass = linkActiveClass;\n      this._suppress = suppressTransitionError;\n    }\n\n    /**\n     * Allow directly passing components to a route\n     * definition.\n     *\n     * @param {String} path\n     * @param {Object} handler\n     */\n\n    // API ===================================================\n\n    /**\n    * Register a map of top-level paths.\n    *\n    * @param {Object} map\n    */\n\n    Router.prototype.map = function map(_map) {\n      for (var route in _map) {\n        this.on(route, _map[route]);\n      }\n      return this;\n    };\n\n    /**\n     * Register a single root-level path\n     *\n     * @param {String} rootPath\n     * @param {Object} handler\n     *                 - {String} component\n     *                 - {Object} [subRoutes]\n     *                 - {Boolean} [forceRefresh]\n     *                 - {Function} [before]\n     *                 - {Function} [after]\n     */\n\n    Router.prototype.on = function on(rootPath, handler) {\n      if (rootPath === '*') {\n        this._notFound(handler);\n      } else {\n        this._addRoute(rootPath, handler, []);\n      }\n      return this;\n    };\n\n    /**\n     * Set redirects.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.redirect = function redirect(map) {\n      for (var path in map) {\n        this._addRedirect(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set aliases.\n     *\n     * @param {Object} map\n     */\n\n    Router.prototype.alias = function alias(map) {\n      for (var path in map) {\n        this._addAlias(path, map[path]);\n      }\n      return this;\n    };\n\n    /**\n     * Set global before hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.beforeEach = function beforeEach(fn) {\n      this._beforeEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Set global after hook.\n     *\n     * @param {Function} fn\n     */\n\n    Router.prototype.afterEach = function afterEach(fn) {\n      this._afterEachHooks.push(fn);\n      return this;\n    };\n\n    /**\n     * Navigate to a given path.\n     * The path can be an object describing a named path in\n     * the format of { name: '...', params: {}, query: {}}\n     * The path is assumed to be already decoded, and will\n     * be resolved against root (if provided)\n     *\n     * @param {String|Object} path\n     * @param {Boolean} [replace]\n     */\n\n    Router.prototype.go = function go(path) {\n      var replace = false;\n      var append = false;\n      if (Vue.util.isObject(path)) {\n        replace = path.replace;\n        append = path.append;\n      }\n      path = this.stringifyPath(path);\n      if (path) {\n        this.history.go(path, replace, append);\n      }\n    };\n\n    /**\n     * Short hand for replacing current path\n     *\n     * @param {String} path\n     */\n\n    Router.prototype.replace = function replace(path) {\n      if (typeof path === 'string') {\n        path = { path: path };\n      }\n      path.replace = true;\n      this.go(path);\n    };\n\n    /**\n     * Start the router.\n     *\n     * @param {VueConstructor} App\n     * @param {String|Element} container\n     * @param {Function} [cb]\n     */\n\n    Router.prototype.start = function start(App, container, cb) {\n      /* istanbul ignore if */\n      if (this._started) {\n        warn$1('already started.');\n        return;\n      }\n      this._started = true;\n      this._startCb = cb;\n      if (!this.app) {\n        /* istanbul ignore if */\n        if (!App || !container) {\n          throw new Error('Must start vue-router with a component and a ' + 'root container.');\n        }\n        /* istanbul ignore if */\n        if (App instanceof Vue) {\n          throw new Error('Must start vue-router with a component, not a ' + 'Vue instance.');\n        }\n        this._appContainer = container;\n        var Ctor = this._appConstructor = typeof App === 'function' ? App : Vue.extend(App);\n        // give it a name for better debugging\n        Ctor.options.name = Ctor.options.name || 'RouterApp';\n      }\n\n      // handle history fallback in browsers that do not\n      // support HTML5 history API\n      if (this._historyFallback) {\n        var _location = window.location;\n        var _history = new HTML5History({ root: this._root });\n        var path = _history.root ? _location.pathname.replace(_history.rootRE, '') : _location.pathname;\n        if (path && path !== '/') {\n          _location.assign((_history.root || '') + '/' + this.history.formatPath(path) + _location.search);\n          return;\n        }\n      }\n\n      this.history.start();\n    };\n\n    /**\n     * Stop listening to route changes.\n     */\n\n    Router.prototype.stop = function stop() {\n      this.history.stop();\n      this._started = false;\n    };\n\n    /**\n     * Normalize named route object / string paths into\n     * a string.\n     *\n     * @param {Object|String|Number} path\n     * @return {String}\n     */\n\n    Router.prototype.stringifyPath = function stringifyPath(path) {\n      var generatedPath = '';\n      if (path && typeof path === 'object') {\n        if (path.name) {\n          var extend = Vue.util.extend;\n          var currentParams = this._currentTransition && this._currentTransition.to.params;\n          var targetParams = path.params || {};\n          var params = currentParams ? extend(extend({}, currentParams), targetParams) : targetParams;\n          generatedPath = encodeURI(this._recognizer.generate(path.name, params));\n        } else if (path.path) {\n          generatedPath = encodeURI(path.path);\n        }\n        if (path.query) {\n          // note: the generated query string is pre-URL-encoded by the recognizer\n          var query = this._recognizer.generateQueryString(path.query);\n          if (generatedPath.indexOf('?') > -1) {\n            generatedPath += '&' + query.slice(1);\n          } else {\n            generatedPath += query;\n          }\n        }\n      } else {\n        generatedPath = encodeURI(path ? path + '' : '');\n      }\n      return generatedPath;\n    };\n\n    // Internal methods ======================================\n\n    /**\n    * Add a route containing a list of segments to the internal\n    * route recognizer. Will be called recursively to add all\n    * possible sub-routes.\n    *\n    * @param {String} path\n    * @param {Object} handler\n    * @param {Array} segments\n    */\n\n    Router.prototype._addRoute = function _addRoute(path, handler, segments) {\n      guardComponent(path, handler);\n      handler.path = path;\n      handler.fullPath = (segments.reduce(function (path, segment) {\n        return path + segment.path;\n      }, '') + path).replace('//', '/');\n      segments.push({\n        path: path,\n        handler: handler\n      });\n      this._recognizer.add(segments, {\n        as: handler.name\n      });\n      // add sub routes\n      if (handler.subRoutes) {\n        for (var subPath in handler.subRoutes) {\n          // recursively walk all sub routes\n          this._addRoute(subPath, handler.subRoutes[subPath],\n          // pass a copy in recursion to avoid mutating\n          // across branches\n          segments.slice());\n        }\n      }\n    };\n\n    /**\n     * Set the notFound route handler.\n     *\n     * @param {Object} handler\n     */\n\n    Router.prototype._notFound = function _notFound(handler) {\n      guardComponent('*', handler);\n      this._notFoundHandler = [{ handler: handler }];\n    };\n\n    /**\n     * Add a redirect record.\n     *\n     * @param {String} path\n     * @param {String} redirectPath\n     */\n\n    Router.prototype._addRedirect = function _addRedirect(path, redirectPath) {\n      if (path === '*') {\n        this._notFoundRedirect = redirectPath;\n      } else {\n        this._addGuard(path, redirectPath, this.replace);\n      }\n    };\n\n    /**\n     * Add an alias record.\n     *\n     * @param {String} path\n     * @param {String} aliasPath\n     */\n\n    Router.prototype._addAlias = function _addAlias(path, aliasPath) {\n      this._addGuard(path, aliasPath, this._match);\n    };\n\n    /**\n     * Add a path guard.\n     *\n     * @param {String} path\n     * @param {String} mappedPath\n     * @param {Function} handler\n     */\n\n    Router.prototype._addGuard = function _addGuard(path, mappedPath, _handler) {\n      var _this2 = this;\n\n      this._guardRecognizer.add([{\n        path: path,\n        handler: function handler(match, query) {\n          var realPath = mapParams(mappedPath, match.params, query);\n          _handler.call(_this2, realPath);\n        }\n      }]);\n    };\n\n    /**\n     * Check if a path matches any redirect records.\n     *\n     * @param {String} path\n     * @return {Boolean} - if true, will skip normal match.\n     */\n\n    Router.prototype._checkGuard = function _checkGuard(path) {\n      var matched = this._guardRecognizer.recognize(path, true);\n      if (matched) {\n        matched[0].handler(matched[0], matched.queryParams);\n        return true;\n      } else if (this._notFoundRedirect) {\n        matched = this._recognizer.recognize(path);\n        if (!matched) {\n          this.replace(this._notFoundRedirect);\n          return true;\n        }\n      }\n    };\n\n    /**\n     * Match a URL path and set the route context on vm,\n     * triggering view updates.\n     *\n     * @param {String} path\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._match = function _match(path, state, anchor) {\n      var _this3 = this;\n\n      if (this._checkGuard(path)) {\n        return;\n      }\n\n      var currentRoute = this._currentRoute;\n      var currentTransition = this._currentTransition;\n\n      if (currentTransition) {\n        if (currentTransition.to.path === path) {\n          // do nothing if we have an active transition going to the same path\n          return;\n        } else if (currentRoute.path === path) {\n          // We are going to the same path, but we also have an ongoing but\n          // not-yet-validated transition. Abort that transition and reset to\n          // prev transition.\n          currentTransition.aborted = true;\n          this._currentTransition = this._prevTransition;\n          return;\n        } else {\n          // going to a totally different path. abort ongoing transition.\n          currentTransition.aborted = true;\n        }\n      }\n\n      // construct new route and transition context\n      var route = new Route(path, this);\n      var transition = new RouteTransition(this, route, currentRoute);\n\n      // current transition is updated right now.\n      // however, current route will only be updated after the transition has\n      // been validated.\n      this._prevTransition = currentTransition;\n      this._currentTransition = transition;\n\n      if (!this.app) {\n        (function () {\n          // initial render\n          var router = _this3;\n          _this3.app = new _this3._appConstructor({\n            el: _this3._appContainer,\n            created: function created() {\n              this.$router = router;\n            },\n            _meta: {\n              $route: route\n            }\n          });\n        })();\n      }\n\n      // check global before hook\n      var beforeHooks = this._beforeEachHooks;\n      var startTransition = function startTransition() {\n        transition.start(function () {\n          _this3._postTransition(route, state, anchor);\n        });\n      };\n\n      if (beforeHooks.length) {\n        transition.runQueue(beforeHooks, function (hook, _, next) {\n          if (transition === _this3._currentTransition) {\n            transition.callHook(hook, null, next, {\n              expectBoolean: true\n            });\n          }\n        }, startTransition);\n      } else {\n        startTransition();\n      }\n\n      if (!this._rendered && this._startCb) {\n        this._startCb.call(null);\n      }\n\n      // HACK:\n      // set rendered to true after the transition start, so\n      // that components that are acitvated synchronously know\n      // whether it is the initial render.\n      this._rendered = true;\n    };\n\n    /**\n     * Set current to the new transition.\n     * This is called by the transition object when the\n     * validation of a route has succeeded.\n     *\n     * @param {Transition} transition\n     */\n\n    Router.prototype._onTransitionValidated = function _onTransitionValidated(transition) {\n      // set current route\n      var route = this._currentRoute = transition.to;\n      // update route context for all children\n      if (this.app.$route !== route) {\n        this.app.$route = route;\n        this._children.forEach(function (child) {\n          child.$route = route;\n        });\n      }\n      // call global after hook\n      if (this._afterEachHooks.length) {\n        this._afterEachHooks.forEach(function (hook) {\n          return hook.call(null, {\n            to: transition.to,\n            from: transition.from\n          });\n        });\n      }\n      this._currentTransition.done = true;\n    };\n\n    /**\n     * Handle stuff after the transition.\n     *\n     * @param {Route} route\n     * @param {Object} [state]\n     * @param {String} [anchor]\n     */\n\n    Router.prototype._postTransition = function _postTransition(route, state, anchor) {\n      // handle scroll positions\n      // saved scroll positions take priority\n      // then we check if the path has an anchor\n      var pos = state && state.pos;\n      if (pos && this._saveScrollPosition) {\n        Vue.nextTick(function () {\n          window.scrollTo(pos.x, pos.y);\n        });\n      } else if (anchor) {\n        Vue.nextTick(function () {\n          var el = document.getElementById(anchor.slice(1));\n          if (el) {\n            window.scrollTo(window.scrollX, el.offsetTop);\n          }\n        });\n      }\n    };\n\n    return Router;\n  })();\n\n  function guardComponent(path, handler) {\n    var comp = handler.component;\n    if (Vue.util.isPlainObject(comp)) {\n      comp = handler.component = Vue.extend(comp);\n    }\n    /* istanbul ignore if */\n    if (typeof comp !== 'function') {\n      handler.component = null;\n      warn$1('invalid component for route \"' + path + '\".');\n    }\n  }\n\n  /* Installation */\n\n  Router.installed = false;\n\n  /**\n   * Installation interface.\n   * Install the necessary directives.\n   */\n\n  Router.install = function (externalVue) {\n    /* istanbul ignore if */\n    if (Router.installed) {\n      warn$1('already installed.');\n      return;\n    }\n    Vue = externalVue;\n    applyOverride(Vue);\n    View(Vue);\n    Link(Vue);\n    exports$1.Vue = Vue;\n    Router.installed = true;\n  };\n\n  // auto install\n  /* istanbul ignore if */\n  if (typeof window !== 'undefined' && window.Vue) {\n    window.Vue.use(Router);\n  }\n\n  return Router;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-router/dist/vue-router.js\n ** module id = 88\n ** module chunks = 0\n **/",";(function () {\n\n  var vueTouch = {}\n  var Hammer = typeof require === 'function'\n    ? require('hammerjs')\n    : window.Hammer\n  var gestures = ['tap', 'pan', 'pinch', 'press', 'rotate', 'swipe']\n  var directions = ['up', 'down', 'left', 'right', 'horizontal', 'vertical', 'all']\n  var customEvents = {}\n\n  if (!Hammer) {\n    throw new Error('[vue-touch] cannot locate Hammer.js.')\n  }\n\n  // exposed global options\n  vueTouch.config = {}\n\n  vueTouch.install = function (Vue) {\n\n    Vue.directive('touch', {\n\n      isFn: true,\n      acceptStatement: true,\n      priority: Vue.directive('on').priority,\n\n      bind: function () {\n        if (!this.el.hammer) {\n          this.el.hammer = new Hammer.Manager(this.el)\n        }\n        var mc = this.mc = this.el.hammer\n        // determine event type\n        var event = this.arg\n        if (!event) {\n          console.warn('[vue-touch] event type argument is required.')\n        }\n        var recognizerType, recognizer\n\n        if (customEvents[event]) {\n          // custom event\n          var custom = customEvents[event]\n          recognizerType = custom.type\n          recognizer = new Hammer[capitalize(recognizerType)](custom)\n          recognizer.recognizeWith(mc.recognizers)\n          mc.add(recognizer)\n        } else {\n          // built-in event\n          for (var i = 0; i < gestures.length; i++) {\n            if (event.indexOf(gestures[i]) === 0) {\n              recognizerType = gestures[i]\n              break\n            }\n          }\n          if (!recognizerType) {\n            console.warn('[vue-touch] invalid event type: ' + event)\n            return\n          }\n          recognizer = mc.get(recognizerType)\n          if (!recognizer) {\n            // add recognizer\n            recognizer = new Hammer[capitalize(recognizerType)]()\n            // make sure multiple recognizers work together...\n            recognizer.recognizeWith(mc.recognizers)\n            mc.add(recognizer)\n          }\n          // apply global options\n          var globalOptions = vueTouch.config[recognizerType]\n          if (globalOptions) {\n            guardDirections(globalOptions)\n            recognizer.set(globalOptions)\n          }\n          // apply local options\n          var localOptions =\n            this.el.hammerOptions &&\n            this.el.hammerOptions[recognizerType]\n          if (localOptions) {\n            guardDirections(localOptions)\n            recognizer.set(localOptions)\n          }\n        }\n        this.recognizer = recognizer\n      },\n\n      update: function (fn) {\n        var mc = this.mc\n        var event = this.arg\n        // teardown old handler\n        if (this.handler) {\n          mc.off(event, this.handler)\n        }\n        if (typeof fn !== 'function') {\n          this.handler = null\n          console.warn(\n            '[vue-touch] invalid handler function for v-touch: ' +\n            this.arg + '=\"' + this.descriptor.raw\n          )\n        } else {\n          mc.on(event, (this.handler = fn))\n        }\n      },\n\n      unbind: function () {\n        if (this.handler) {\n          this.mc.off(this.arg, this.handler)\n        }\n        if (!Object.keys(this.mc.handlers).length) {\n          this.mc.destroy()\n          this.el.hammer = null\n        }\n      }\n    })\n\n    Vue.directive('touch-options', {\n      priority: Vue.directive('on').priority + 1,\n      update: function (options) {\n        var opts = this.el.hammerOptions || (this.el.hammerOptions = {})\n        if (!this.arg) {\n          console.warn('[vue-touch] recognizer type argument for v-touch-options is required.')\n        } else {\n          opts[this.arg] = options\n        }\n      }\n    })\n  }\n\n  /**\n   * Register a custom event.\n   *\n   * @param {String} event\n   * @param {Object} options - a Hammer.js recognizer option object.\n   *                           required fields:\n   *                           - type: the base recognizer to use for this event\n   */\n\n  vueTouch.registerCustomEvent = function (event, options) {\n    options.event = event\n    customEvents[event] = options\n  }\n\n  function capitalize (str) {\n    return str.charAt(0).toUpperCase() + str.slice(1)\n  }\n\n  function guardDirections (options) {\n    var dir = options.direction\n    if (typeof dir === 'string') {\n      var hammerDirection = 'DIRECTION_' + dir.toUpperCase()\n      if (directions.indexOf(dir) > -1 && Hammer.hasOwnProperty(hammerDirection)) {\n        options.direction = Hammer[hammerDirection]\n      } else {\n        console.warn('[vue-touch] invalid direction: ' + dir)\n      }\n    }\n  }\n\n  if (typeof exports == \"object\") {\n    module.exports = vueTouch\n  } else if (typeof define == \"function\" && define.amd) {\n    define([], function(){ return vueTouch })\n  } else if (window.Vue) {\n    window.VueTouch = vueTouch\n    Vue.use(vueTouch)\n  }\n\n})()\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-touch/vue-touch.js\n ** module id = 89\n ** module chunks = 0\n **/","exports.sync = function (store, router) {\n  patchStore(store)\n  store.router = router\n\n  var isTimeTraveling = false\n  var currentPath\n\n  // sync router on store change\n  store.watch(\n    function (state) {\n      return state.route\n    },\n    function (route) {\n      if (route.path === currentPath) {\n        return\n      }\n      isTimeTraveling = true\n      currentPath = route.path\n      router.go(route.path)\n    },\n    { deep: true, sync: true }\n  )\n\n  // sync store on router navigation\n  router.afterEach(function (transition) {\n    if (isTimeTraveling) {\n      isTimeTraveling = false\n      return\n    }\n    var to = transition.to\n    currentPath = to.path\n    store.dispatch('router/ROUTE_CHANGED', {\n      path: to.path,\n      query: to.query,\n      params: to.params\n    })\n  })\n}\n\nfunction patchStore (store) {\n  // add state\n  var set = store._vm.constructor.set\n  store._dispatching = true\n  set(store.state, 'route', {\n    path: '',\n    query: null,\n    params: null\n  })\n  store._dispatching = false\n  // add mutations\n  store.hotUpdate({\n    modules: {\n      route: {\n        mutations: {\n          'router/ROUTE_CHANGED': function (state, to) {\n            state.path = to.path\n            state.query = to.query\n            state.params = to.params\n          }\n        }\n      }\n    }\n  })\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex-router-sync/index.js\n ** module id = 90\n ** module chunks = 0\n **/","/*!\n * Vuex v0.6.3\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Vuex = factory());\n}(this, function () { 'use strict';\n\n  var babelHelpers = {};\n  babelHelpers.typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n  };\n\n  babelHelpers.classCallCheck = function (instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  };\n\n  babelHelpers.createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n\n  babelHelpers.toConsumableArray = function (arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    } else {\n      return Array.from(arr);\n    }\n  };\n\n  babelHelpers;\n\n  /**\n   * Merge an array of objects into one.\n   *\n   * @param {Array<Object>} arr\n   * @return {Object}\n   */\n\n  function mergeObjects(arr) {\n    return arr.reduce(function (prev, obj) {\n      Object.keys(obj).forEach(function (key) {\n        var existing = prev[key];\n        if (existing) {\n          // allow multiple mutation objects to contain duplicate\n          // handlers for the same mutation type\n          if (Array.isArray(existing)) {\n            existing.push(obj[key]);\n          } else {\n            prev[key] = [prev[key], obj[key]];\n          }\n        } else {\n          prev[key] = obj[key];\n        }\n      });\n      return prev;\n    }, {});\n  }\n\n  /**\n   * Deep clone an object. Faster than JSON.parse(JSON.stringify()).\n   *\n   * @param {*} obj\n   * @return {*}\n   */\n\n  function deepClone(obj) {\n    if (Array.isArray(obj)) {\n      return obj.map(deepClone);\n    } else if (obj && (typeof obj === 'undefined' ? 'undefined' : babelHelpers.typeof(obj)) === 'object') {\n      var cloned = {};\n      var keys = Object.keys(obj);\n      for (var i = 0, l = keys.length; i < l; i++) {\n        var key = keys[i];\n        cloned[key] = deepClone(obj[key]);\n      }\n      return cloned;\n    } else {\n      return obj;\n    }\n  }\n\n  /**\n   * Hacks to get access to Vue internals.\n   * Maybe we should expose these...\n   */\n\n  var Watcher = void 0;\n  function getWatcher(vm) {\n    if (!Watcher) {\n      var unwatch = vm.$watch('__vuex__', function (a) {\n        return a;\n      });\n      Watcher = vm._watchers[0].constructor;\n      unwatch();\n    }\n    return Watcher;\n  }\n\n  var Dep = void 0;\n  function getDep(vm) {\n    if (!Dep) {\n      Dep = vm._data.__ob__.dep.constructor;\n    }\n    return Dep;\n  }\n\n  var hook = typeof window !== 'undefined' && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n  var devtoolMiddleware = {\n    onInit: function onInit(state, store) {\n      if (!hook) return;\n      hook.emit('vuex:init', store);\n      hook.on('vuex:travel-to-state', function (targetState) {\n        var currentState = store._vm._data;\n        store._dispatching = true;\n        Object.keys(targetState).forEach(function (key) {\n          currentState[key] = targetState[key];\n        });\n        store._dispatching = false;\n      });\n    },\n    onMutation: function onMutation(mutation, state) {\n      if (!hook) return;\n      hook.emit('vuex:mutation', mutation, state);\n    }\n  };\n\n  function override (Vue) {\n    // override init and inject vuex init procedure\n    var _init = Vue.prototype._init;\n    Vue.prototype._init = function () {\n      var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      options.init = options.init ? [vuexInit].concat(options.init) : vuexInit;\n      _init.call(this, options);\n    };\n\n    /**\n     * Vuex init hook, injected into each instances init hooks list.\n     */\n\n    function vuexInit() {\n      var options = this.$options;\n      var store = options.store;\n      var vuex = options.vuex;\n      // store injection\n\n      if (store) {\n        this.$store = store;\n      } else if (options.parent && options.parent.$store) {\n        this.$store = options.parent.$store;\n      }\n      // vuex option handling\n      if (vuex) {\n        if (!this.$store) {\n          console.warn('[vuex] store not injected. make sure to ' + 'provide the store option in your root component.');\n        }\n        var state = vuex.state;\n        var getters = vuex.getters;\n        var actions = vuex.actions;\n        // handle deprecated state option\n\n        if (state && !getters) {\n          console.warn('[vuex] vuex.state option will been deprecated in 1.0. ' + 'Use vuex.getters instead.');\n          getters = state;\n        }\n        // getters\n        if (getters) {\n          options.computed = options.computed || {};\n          for (var key in getters) {\n            defineVuexGetter(this, key, getters[key]);\n          }\n        }\n        // actions\n        if (actions) {\n          options.methods = options.methods || {};\n          for (var _key in actions) {\n            options.methods[_key] = makeBoundAction(this.$store, actions[_key], _key);\n          }\n        }\n      }\n    }\n\n    /**\n     * Setter for all getter properties.\n     */\n\n    function setter() {\n      throw new Error('vuex getter properties are read-only.');\n    }\n\n    /**\n     * Define a Vuex getter on an instance.\n     *\n     * @param {Vue} vm\n     * @param {String} key\n     * @param {Function} getter\n     */\n\n    function defineVuexGetter(vm, key, getter) {\n      if (typeof getter !== 'function') {\n        console.warn('[vuex] Getter bound to key \\'vuex.getters.' + key + '\\' is not a function.');\n      } else {\n        Object.defineProperty(vm, key, {\n          enumerable: true,\n          configurable: true,\n          get: makeComputedGetter(vm.$store, getter),\n          set: setter\n        });\n      }\n    }\n\n    /**\n     * Make a computed getter, using the same caching mechanism of computed\n     * properties. In addition, it is cached on the raw getter function using\n     * the store's unique cache id. This makes the same getter shared\n     * across all components use the same underlying watcher, and makes\n     * the getter evaluated only once during every flush.\n     *\n     * @param {Store} store\n     * @param {Function} getter\n     */\n\n    function makeComputedGetter(store, getter) {\n      var id = store._getterCacheId;\n\n      // cached\n      if (getter[id]) {\n        return getter[id];\n      }\n      var vm = store._vm;\n      var Watcher = getWatcher(vm);\n      var Dep = getDep(vm);\n      var watcher = new Watcher(vm, function (state) {\n        return getter(state);\n      }, null, { lazy: true });\n      var computedGetter = function computedGetter() {\n        if (watcher.dirty) {\n          watcher.evaluate();\n        }\n        if (Dep.target) {\n          watcher.depend();\n        }\n        return watcher.value;\n      };\n      getter[id] = computedGetter;\n      return computedGetter;\n    }\n\n    /**\n     * Make a bound-to-store version of a raw action function.\n     *\n     * @param {Store} store\n     * @param {Function} action\n     * @param {String} key\n     */\n\n    function makeBoundAction(store, action, key) {\n      if (typeof action !== 'function') {\n        console.warn('[vuex] Action bound to key \\'vuex.actions.' + key + '\\' is not a function.');\n      }\n      return function vuexBoundAction() {\n        for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        return action.call.apply(action, [this, store].concat(args));\n      };\n    }\n\n    // option merging\n    var merge = Vue.config.optionMergeStrategies.computed;\n    Vue.config.optionMergeStrategies.vuex = function (toVal, fromVal) {\n      if (!toVal) return fromVal;\n      if (!fromVal) return toVal;\n      return {\n        getters: merge(toVal.getters, fromVal.getters),\n        state: merge(toVal.state, fromVal.state),\n        actions: merge(toVal.actions, fromVal.actions)\n      };\n    };\n  }\n\n  var Vue = void 0;\n  var uid = 0;\n\n  var Store = function () {\n\n    /**\n     * @param {Object} options\n     *        - {Object} state\n     *        - {Object} actions\n     *        - {Object} mutations\n     *        - {Array} middlewares\n     *        - {Boolean} strict\n     */\n\n    function Store() {\n      var _this = this;\n\n      var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n      var _ref$state = _ref.state;\n      var state = _ref$state === undefined ? {} : _ref$state;\n      var _ref$mutations = _ref.mutations;\n      var mutations = _ref$mutations === undefined ? {} : _ref$mutations;\n      var _ref$modules = _ref.modules;\n      var modules = _ref$modules === undefined ? {} : _ref$modules;\n      var _ref$middlewares = _ref.middlewares;\n      var middlewares = _ref$middlewares === undefined ? [] : _ref$middlewares;\n      var _ref$strict = _ref.strict;\n      var strict = _ref$strict === undefined ? false : _ref$strict;\n      babelHelpers.classCallCheck(this, Store);\n\n      this._getterCacheId = 'vuex_store_' + uid++;\n      this._dispatching = false;\n      this._rootMutations = this._mutations = mutations;\n      this._modules = modules;\n      // bind dispatch to self\n      var dispatch = this.dispatch;\n      this.dispatch = function () {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        dispatch.apply(_this, args);\n      };\n      // use a Vue instance to store the state tree\n      // suppress warnings just in case the user has added\n      // some funky global mixins\n      if (!Vue) {\n        throw new Error('[vuex] must call Vue.use(Vuex) before creating a store instance.');\n      }\n      var silent = Vue.config.silent;\n      Vue.config.silent = true;\n      this._vm = new Vue({\n        data: state\n      });\n      Vue.config.silent = silent;\n      this._setupModuleState(state, modules);\n      this._setupModuleMutations(modules);\n      this._setupMiddlewares(middlewares, state);\n      // add extra warnings in strict mode\n      if (strict) {\n        this._setupMutationCheck();\n      }\n    }\n\n    /**\n     * Getter for the entire state tree.\n     * Read only.\n     *\n     * @return {Object}\n     */\n\n    babelHelpers.createClass(Store, [{\n      key: 'dispatch',\n\n\n      /**\n       * Dispatch an action.\n       *\n       * @param {String} type\n       */\n\n      value: function dispatch(type) {\n        for (var _len2 = arguments.length, payload = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          payload[_key2 - 1] = arguments[_key2];\n        }\n\n        var silent = false;\n        // compatibility for object actions, e.g. FSA\n        if ((typeof type === 'undefined' ? 'undefined' : babelHelpers.typeof(type)) === 'object' && type.type && arguments.length === 1) {\n          payload = [type.payload];\n          if (type.silent) silent = true;\n          type = type.type;\n        }\n        var mutation = this._mutations[type];\n        var state = this.state;\n        if (mutation) {\n          this._dispatching = true;\n          // apply the mutation\n          if (Array.isArray(mutation)) {\n            mutation.forEach(function (m) {\n              return m.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n            });\n          } else {\n            mutation.apply(undefined, [state].concat(babelHelpers.toConsumableArray(payload)));\n          }\n          this._dispatching = false;\n          if (!silent) this._applyMiddlewares(type, payload);\n        } else {\n          console.warn('[vuex] Unknown mutation: ' + type);\n        }\n      }\n\n      /**\n       * Watch state changes on the store.\n       * Same API as Vue's $watch, except when watching a function,\n       * the function gets the state as the first argument.\n       *\n       * @param {String|Function} expOrFn\n       * @param {Function} cb\n       * @param {Object} [options]\n       */\n\n    }, {\n      key: 'watch',\n      value: function watch(expOrFn, cb, options) {\n        var _this2 = this;\n\n        return this._vm.$watch(function () {\n          return typeof expOrFn === 'function' ? expOrFn(_this2.state) : _this2._vm.$get(expOrFn);\n        }, cb, options);\n      }\n\n      /**\n       * Hot update mutations & modules.\n       *\n       * @param {Object} options\n       *        - {Object} [mutations]\n       *        - {Object} [modules]\n       */\n\n    }, {\n      key: 'hotUpdate',\n      value: function hotUpdate() {\n        var _ref2 = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n        var mutations = _ref2.mutations;\n        var modules = _ref2.modules;\n\n        this._rootMutations = this._mutations = mutations || this._rootMutations;\n        this._setupModuleMutations(modules || this._modules);\n      }\n\n      /**\n       * Attach sub state tree of each module to the root tree.\n       *\n       * @param {Object} state\n       * @param {Object} modules\n       */\n\n    }, {\n      key: '_setupModuleState',\n      value: function _setupModuleState(state, modules) {\n        Object.keys(modules).forEach(function (key) {\n          Vue.set(state, key, modules[key].state || {});\n        });\n      }\n\n      /**\n       * Bind mutations for each module to its sub tree and\n       * merge them all into one final mutations map.\n       *\n       * @param {Object} updatedModules\n       */\n\n    }, {\n      key: '_setupModuleMutations',\n      value: function _setupModuleMutations(updatedModules) {\n        var modules = this._modules;\n        var allMutations = [this._rootMutations];\n        Object.keys(updatedModules).forEach(function (key) {\n          modules[key] = updatedModules[key];\n        });\n        Object.keys(modules).forEach(function (key) {\n          var module = modules[key];\n          if (!module || !module.mutations) return;\n          // bind mutations to sub state tree\n          var mutations = {};\n          Object.keys(module.mutations).forEach(function (name) {\n            var original = module.mutations[name];\n            mutations[name] = function (state) {\n              for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n              }\n\n              original.apply(undefined, [state[key]].concat(args));\n            };\n          });\n          allMutations.push(mutations);\n        });\n        this._mutations = mergeObjects(allMutations);\n      }\n\n      /**\n       * Setup mutation check: if the vuex instance's state is mutated\n       * outside of a mutation handler, we throw en error. This effectively\n       * enforces all mutations to the state to be trackable and hot-reloadble.\n       * However, this comes at a run time cost since we are doing a deep\n       * watch on the entire state tree, so it is only enalbed with the\n       * strict option is set to true.\n       */\n\n    }, {\n      key: '_setupMutationCheck',\n      value: function _setupMutationCheck() {\n        var _this3 = this;\n\n        var Watcher = getWatcher(this._vm);\n        /* eslint-disable no-new */\n        new Watcher(this._vm, '$data', function () {\n          if (!_this3._dispatching) {\n            throw new Error('[vuex] Do not mutate vuex store state outside mutation handlers.');\n          }\n        }, { deep: true, sync: true });\n        /* eslint-enable no-new */\n      }\n\n      /**\n       * Setup the middlewares. The devtools middleware is always\n       * included, since it does nothing if no devtool is detected.\n       *\n       * A middleware can demand the state it receives to be\n       * \"snapshots\", i.e. deep clones of the actual state tree.\n       *\n       * @param {Array} middlewares\n       * @param {Object} state\n       */\n\n    }, {\n      key: '_setupMiddlewares',\n      value: function _setupMiddlewares(middlewares, state) {\n        var _this4 = this;\n\n        this._middlewares = [devtoolMiddleware].concat(middlewares);\n        this._needSnapshots = middlewares.some(function (m) {\n          return m.snapshot;\n        });\n        if (this._needSnapshots) {\n          console.log('[vuex] One or more of your middlewares are taking state snapshots ' + 'for each mutation. Make sure to use them only during development.');\n        }\n        var initialSnapshot = this._prevSnapshot = this._needSnapshots ? deepClone(state) : null;\n        // call init hooks\n        this._middlewares.forEach(function (m) {\n          if (m.onInit) {\n            m.onInit(m.snapshot ? initialSnapshot : state, _this4);\n          }\n        });\n      }\n\n      /**\n       * Apply the middlewares on a given mutation.\n       *\n       * @param {String} type\n       * @param {Array} payload\n       */\n\n    }, {\n      key: '_applyMiddlewares',\n      value: function _applyMiddlewares(type, payload) {\n        var _this5 = this;\n\n        var state = this.state;\n        var prevSnapshot = this._prevSnapshot;\n        var snapshot = void 0,\n            clonedPayload = void 0;\n        if (this._needSnapshots) {\n          snapshot = this._prevSnapshot = deepClone(state);\n          clonedPayload = deepClone(payload);\n        }\n        this._middlewares.forEach(function (m) {\n          if (m.onMutation) {\n            if (m.snapshot) {\n              m.onMutation({ type: type, payload: clonedPayload }, snapshot, prevSnapshot, _this5);\n            } else {\n              m.onMutation({ type: type, payload: payload }, state, _this5);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'state',\n      get: function get() {\n        return this._vm._data;\n      },\n      set: function set(v) {\n        throw new Error('[vuex] Vuex root state is read only.');\n      }\n    }]);\n    return Store;\n  }();\n\n  function install(_Vue) {\n    if (Vue) {\n      console.warn('[vuex] already installed. Vue.use(Vuex) should be called only once.');\n      return;\n    }\n    Vue = _Vue;\n    override(Vue);\n  }\n\n  // auto install in dist mode\n  if (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n  }\n\n  function createLogger() {\n    console.warn('[vuex] Vuex.createLogger has been deprecated.' + 'Use `import createLogger from \\'vuex/logger\\' instead.');\n  }\n\n  var index = {\n    Store: Store,\n    install: install,\n    createLogger: createLogger\n  };\n\n  return index;\n\n}));\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/dist/vuex.js\n ** module id = 91\n ** module chunks = 0\n **/","'use strict';\n\n// Credits: borrowed code from fcomb/redux-logger\n\nfunction createLogger() {\n  var _ref = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  var _ref$collapsed = _ref.collapsed;\n  var collapsed = _ref$collapsed === undefined ? true : _ref$collapsed;\n  var _ref$transformer = _ref.transformer;\n  var transformer = _ref$transformer === undefined ? function (state) {\n    return state;\n  } : _ref$transformer;\n  var _ref$mutationTransfor = _ref.mutationTransformer;\n  var mutationTransformer = _ref$mutationTransfor === undefined ? function (mut) {\n    return mut;\n  } : _ref$mutationTransfor;\n\n  return {\n    snapshot: true,\n    onMutation: function onMutation(mutation, nextState, prevState) {\n      if (typeof console === 'undefined') {\n        return;\n      }\n      var time = new Date();\n      var formattedTime = ' @ ' + pad(time.getHours(), 2) + ':' + pad(time.getMinutes(), 2) + ':' + pad(time.getSeconds(), 2) + '.' + pad(time.getMilliseconds(), 3);\n      var formattedMutation = mutationTransformer(mutation);\n      var message = 'mutation ' + mutation.type + formattedTime;\n      var startMessage = collapsed ? console.groupCollapsed : console.group;\n\n      // render\n      try {\n        startMessage.call(console, message);\n      } catch (e) {\n        console.log(message);\n      }\n\n      console.log('%c prev state', 'color: #9E9E9E; font-weight: bold', prevState);\n      console.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);\n      console.log('%c next state', 'color: #4CAF50; font-weight: bold', nextState);\n\n      try {\n        console.groupEnd();\n      } catch (e) {\n        console.log('—— log end ——');\n      }\n    }\n  };\n}\n\nfunction repeat(str, times) {\n  return new Array(times + 1).join(str);\n}\n\nfunction pad(num, maxLength) {\n  return repeat('0', maxLength - num.toString().length) + num;\n}\n\nmodule.exports = createLogger;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vuex/logger.js\n ** module id = 92\n ** module chunks = 0\n **/","module.exports = __webpack_amd_options__;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-options.js\n ** module id = 93\n ** module chunks = 0\n **/"],"sourceRoot":""}